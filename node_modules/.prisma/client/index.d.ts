
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model item
 * 
 */
export type item = $Result.DefaultSelection<Prisma.$itemPayload>
/**
 * Model menu
 * 
 */
export type menu = $Result.DefaultSelection<Prisma.$menuPayload>
/**
 * Model menu_has_item
 * 
 */
export type menu_has_item = $Result.DefaultSelection<Prisma.$menu_has_itemPayload>
/**
 * Model message
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type message = $Result.DefaultSelection<Prisma.$messagePayload>
/**
 * Model reservation
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type reservation = $Result.DefaultSelection<Prisma.$reservationPayload>
/**
 * Model reservation_has_item
 * 
 */
export type reservation_has_item = $Result.DefaultSelection<Prisma.$reservation_has_itemPayload>
/**
 * Model restaurant
 * 
 */
export type restaurant = $Result.DefaultSelection<Prisma.$restaurantPayload>
/**
 * Model restaurant_has_item
 * 
 */
export type restaurant_has_item = $Result.DefaultSelection<Prisma.$restaurant_has_itemPayload>
/**
 * Model timeslot
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type timeslot = $Result.DefaultSelection<Prisma.$timeslotPayload>
/**
 * Model user
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ItemCategory: {
  STARTER: 'STARTER',
  MAIN: 'MAIN',
  DESSERT: 'DESSERT',
  SIDE: 'SIDE',
  DRINK: 'DRINK'
};

export type ItemCategory = (typeof ItemCategory)[keyof typeof ItemCategory]


export const UserType: {
  CLIENT: 'CLIENT',
  RESTAURANT_OWNER: 'RESTAURANT_OWNER'
};

export type UserType = (typeof UserType)[keyof typeof UserType]


export const TimeslotStatus: {
  AVAILABLE: 'AVAILABLE',
  BOOKED: 'BOOKED',
  UNAVAILABLE: 'UNAVAILABLE'
};

export type TimeslotStatus = (typeof TimeslotStatus)[keyof typeof TimeslotStatus]


export const ReservationStatus: {
  CONFIRMED: 'CONFIRMED',
  CANCELED: 'CANCELED'
};

export type ReservationStatus = (typeof ReservationStatus)[keyof typeof ReservationStatus]

}

export type ItemCategory = $Enums.ItemCategory

export const ItemCategory: typeof $Enums.ItemCategory

export type UserType = $Enums.UserType

export const UserType: typeof $Enums.UserType

export type TimeslotStatus = $Enums.TimeslotStatus

export const TimeslotStatus: typeof $Enums.TimeslotStatus

export type ReservationStatus = $Enums.ReservationStatus

export const ReservationStatus: typeof $Enums.ReservationStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Items
 * const items = await prisma.item.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Items
   * const items = await prisma.item.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.item`: Exposes CRUD operations for the **item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.item.findMany()
    * ```
    */
  get item(): Prisma.itemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menu`: Exposes CRUD operations for the **menu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menus
    * const menus = await prisma.menu.findMany()
    * ```
    */
  get menu(): Prisma.menuDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menu_has_item`: Exposes CRUD operations for the **menu_has_item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menu_has_items
    * const menu_has_items = await prisma.menu_has_item.findMany()
    * ```
    */
  get menu_has_item(): Prisma.menu_has_itemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.messageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation`: Exposes CRUD operations for the **reservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservations
    * const reservations = await prisma.reservation.findMany()
    * ```
    */
  get reservation(): Prisma.reservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation_has_item`: Exposes CRUD operations for the **reservation_has_item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservation_has_items
    * const reservation_has_items = await prisma.reservation_has_item.findMany()
    * ```
    */
  get reservation_has_item(): Prisma.reservation_has_itemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.restaurant`: Exposes CRUD operations for the **restaurant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Restaurants
    * const restaurants = await prisma.restaurant.findMany()
    * ```
    */
  get restaurant(): Prisma.restaurantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.restaurant_has_item`: Exposes CRUD operations for the **restaurant_has_item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Restaurant_has_items
    * const restaurant_has_items = await prisma.restaurant_has_item.findMany()
    * ```
    */
  get restaurant_has_item(): Prisma.restaurant_has_itemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.timeslot`: Exposes CRUD operations for the **timeslot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Timeslots
    * const timeslots = await prisma.timeslot.findMany()
    * ```
    */
  get timeslot(): Prisma.timeslotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    item: 'item',
    menu: 'menu',
    menu_has_item: 'menu_has_item',
    message: 'message',
    reservation: 'reservation',
    reservation_has_item: 'reservation_has_item',
    restaurant: 'restaurant',
    restaurant_has_item: 'restaurant_has_item',
    timeslot: 'timeslot',
    user: 'user'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "item" | "menu" | "menu_has_item" | "message" | "reservation" | "reservation_has_item" | "restaurant" | "restaurant_has_item" | "timeslot" | "user"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      item: {
        payload: Prisma.$itemPayload<ExtArgs>
        fields: Prisma.itemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.itemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.itemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          findFirst: {
            args: Prisma.itemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.itemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          findMany: {
            args: Prisma.itemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>[]
          }
          create: {
            args: Prisma.itemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          createMany: {
            args: Prisma.itemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.itemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>[]
          }
          delete: {
            args: Prisma.itemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          update: {
            args: Prisma.itemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          deleteMany: {
            args: Prisma.itemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.itemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.itemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>[]
          }
          upsert: {
            args: Prisma.itemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$itemPayload>
          }
          aggregate: {
            args: Prisma.ItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItem>
          }
          groupBy: {
            args: Prisma.itemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.itemCountArgs<ExtArgs>
            result: $Utils.Optional<ItemCountAggregateOutputType> | number
          }
        }
      }
      menu: {
        payload: Prisma.$menuPayload<ExtArgs>
        fields: Prisma.menuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.menuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.menuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          findFirst: {
            args: Prisma.menuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.menuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          findMany: {
            args: Prisma.menuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>[]
          }
          create: {
            args: Prisma.menuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          createMany: {
            args: Prisma.menuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.menuCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>[]
          }
          delete: {
            args: Prisma.menuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          update: {
            args: Prisma.menuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          deleteMany: {
            args: Prisma.menuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.menuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.menuUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>[]
          }
          upsert: {
            args: Prisma.menuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menuPayload>
          }
          aggregate: {
            args: Prisma.MenuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenu>
          }
          groupBy: {
            args: Prisma.menuGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuGroupByOutputType>[]
          }
          count: {
            args: Prisma.menuCountArgs<ExtArgs>
            result: $Utils.Optional<MenuCountAggregateOutputType> | number
          }
        }
      }
      menu_has_item: {
        payload: Prisma.$menu_has_itemPayload<ExtArgs>
        fields: Prisma.menu_has_itemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.menu_has_itemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.menu_has_itemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          findFirst: {
            args: Prisma.menu_has_itemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.menu_has_itemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          findMany: {
            args: Prisma.menu_has_itemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>[]
          }
          create: {
            args: Prisma.menu_has_itemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          createMany: {
            args: Prisma.menu_has_itemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.menu_has_itemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>[]
          }
          delete: {
            args: Prisma.menu_has_itemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          update: {
            args: Prisma.menu_has_itemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          deleteMany: {
            args: Prisma.menu_has_itemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.menu_has_itemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.menu_has_itemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>[]
          }
          upsert: {
            args: Prisma.menu_has_itemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$menu_has_itemPayload>
          }
          aggregate: {
            args: Prisma.Menu_has_itemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenu_has_item>
          }
          groupBy: {
            args: Prisma.menu_has_itemGroupByArgs<ExtArgs>
            result: $Utils.Optional<Menu_has_itemGroupByOutputType>[]
          }
          count: {
            args: Prisma.menu_has_itemCountArgs<ExtArgs>
            result: $Utils.Optional<Menu_has_itemCountAggregateOutputType> | number
          }
        }
      }
      message: {
        payload: Prisma.$messagePayload<ExtArgs>
        fields: Prisma.messageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.messageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.messageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          findFirst: {
            args: Prisma.messageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.messageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          findMany: {
            args: Prisma.messageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>[]
          }
          create: {
            args: Prisma.messageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          createMany: {
            args: Prisma.messageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.messageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>[]
          }
          delete: {
            args: Prisma.messageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          update: {
            args: Prisma.messageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          deleteMany: {
            args: Prisma.messageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.messageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.messageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>[]
          }
          upsert: {
            args: Prisma.messageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.messageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.messageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      reservation: {
        payload: Prisma.$reservationPayload<ExtArgs>
        fields: Prisma.reservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          findFirst: {
            args: Prisma.reservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          findMany: {
            args: Prisma.reservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>[]
          }
          create: {
            args: Prisma.reservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          createMany: {
            args: Prisma.reservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reservationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>[]
          }
          delete: {
            args: Prisma.reservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          update: {
            args: Prisma.reservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          deleteMany: {
            args: Prisma.reservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reservationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>[]
          }
          upsert: {
            args: Prisma.reservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservationPayload>
          }
          aggregate: {
            args: Prisma.ReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation>
          }
          groupBy: {
            args: Prisma.reservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.reservationCountArgs<ExtArgs>
            result: $Utils.Optional<ReservationCountAggregateOutputType> | number
          }
        }
      }
      reservation_has_item: {
        payload: Prisma.$reservation_has_itemPayload<ExtArgs>
        fields: Prisma.reservation_has_itemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reservation_has_itemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reservation_has_itemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          findFirst: {
            args: Prisma.reservation_has_itemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reservation_has_itemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          findMany: {
            args: Prisma.reservation_has_itemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>[]
          }
          create: {
            args: Prisma.reservation_has_itemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          createMany: {
            args: Prisma.reservation_has_itemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reservation_has_itemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>[]
          }
          delete: {
            args: Prisma.reservation_has_itemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          update: {
            args: Prisma.reservation_has_itemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          deleteMany: {
            args: Prisma.reservation_has_itemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reservation_has_itemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reservation_has_itemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>[]
          }
          upsert: {
            args: Prisma.reservation_has_itemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reservation_has_itemPayload>
          }
          aggregate: {
            args: Prisma.Reservation_has_itemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation_has_item>
          }
          groupBy: {
            args: Prisma.reservation_has_itemGroupByArgs<ExtArgs>
            result: $Utils.Optional<Reservation_has_itemGroupByOutputType>[]
          }
          count: {
            args: Prisma.reservation_has_itemCountArgs<ExtArgs>
            result: $Utils.Optional<Reservation_has_itemCountAggregateOutputType> | number
          }
        }
      }
      restaurant: {
        payload: Prisma.$restaurantPayload<ExtArgs>
        fields: Prisma.restaurantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.restaurantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.restaurantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          findFirst: {
            args: Prisma.restaurantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.restaurantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          findMany: {
            args: Prisma.restaurantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>[]
          }
          create: {
            args: Prisma.restaurantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          createMany: {
            args: Prisma.restaurantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.restaurantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>[]
          }
          delete: {
            args: Prisma.restaurantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          update: {
            args: Prisma.restaurantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          deleteMany: {
            args: Prisma.restaurantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.restaurantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.restaurantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>[]
          }
          upsert: {
            args: Prisma.restaurantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurantPayload>
          }
          aggregate: {
            args: Prisma.RestaurantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRestaurant>
          }
          groupBy: {
            args: Prisma.restaurantGroupByArgs<ExtArgs>
            result: $Utils.Optional<RestaurantGroupByOutputType>[]
          }
          count: {
            args: Prisma.restaurantCountArgs<ExtArgs>
            result: $Utils.Optional<RestaurantCountAggregateOutputType> | number
          }
        }
      }
      restaurant_has_item: {
        payload: Prisma.$restaurant_has_itemPayload<ExtArgs>
        fields: Prisma.restaurant_has_itemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.restaurant_has_itemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.restaurant_has_itemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          findFirst: {
            args: Prisma.restaurant_has_itemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.restaurant_has_itemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          findMany: {
            args: Prisma.restaurant_has_itemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>[]
          }
          create: {
            args: Prisma.restaurant_has_itemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          createMany: {
            args: Prisma.restaurant_has_itemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.restaurant_has_itemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>[]
          }
          delete: {
            args: Prisma.restaurant_has_itemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          update: {
            args: Prisma.restaurant_has_itemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          deleteMany: {
            args: Prisma.restaurant_has_itemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.restaurant_has_itemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.restaurant_has_itemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>[]
          }
          upsert: {
            args: Prisma.restaurant_has_itemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$restaurant_has_itemPayload>
          }
          aggregate: {
            args: Prisma.Restaurant_has_itemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRestaurant_has_item>
          }
          groupBy: {
            args: Prisma.restaurant_has_itemGroupByArgs<ExtArgs>
            result: $Utils.Optional<Restaurant_has_itemGroupByOutputType>[]
          }
          count: {
            args: Prisma.restaurant_has_itemCountArgs<ExtArgs>
            result: $Utils.Optional<Restaurant_has_itemCountAggregateOutputType> | number
          }
        }
      }
      timeslot: {
        payload: Prisma.$timeslotPayload<ExtArgs>
        fields: Prisma.timeslotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.timeslotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.timeslotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          findFirst: {
            args: Prisma.timeslotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.timeslotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          findMany: {
            args: Prisma.timeslotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>[]
          }
          create: {
            args: Prisma.timeslotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          createMany: {
            args: Prisma.timeslotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.timeslotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>[]
          }
          delete: {
            args: Prisma.timeslotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          update: {
            args: Prisma.timeslotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          deleteMany: {
            args: Prisma.timeslotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.timeslotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.timeslotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>[]
          }
          upsert: {
            args: Prisma.timeslotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$timeslotPayload>
          }
          aggregate: {
            args: Prisma.TimeslotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTimeslot>
          }
          groupBy: {
            args: Prisma.timeslotGroupByArgs<ExtArgs>
            result: $Utils.Optional<TimeslotGroupByOutputType>[]
          }
          count: {
            args: Prisma.timeslotCountArgs<ExtArgs>
            result: $Utils.Optional<TimeslotCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    item?: itemOmit
    menu?: menuOmit
    menu_has_item?: menu_has_itemOmit
    message?: messageOmit
    reservation?: reservationOmit
    reservation_has_item?: reservation_has_itemOmit
    restaurant?: restaurantOmit
    restaurant_has_item?: restaurant_has_itemOmit
    timeslot?: timeslotOmit
    user?: userOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ItemCountOutputType
   */

  export type ItemCountOutputType = {
    reservation_has_item: number
    restaurant_has_item: number
    menu_has_item: number
  }

  export type ItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation_has_item?: boolean | ItemCountOutputTypeCountReservation_has_itemArgs
    restaurant_has_item?: boolean | ItemCountOutputTypeCountRestaurant_has_itemArgs
    menu_has_item?: boolean | ItemCountOutputTypeCountMenu_has_itemArgs
  }

  // Custom InputTypes
  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemCountOutputType
     */
    select?: ItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountReservation_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservation_has_itemWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountRestaurant_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: restaurant_has_itemWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountMenu_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menu_has_itemWhereInput
  }


  /**
   * Count Type MenuCountOutputType
   */

  export type MenuCountOutputType = {
    menu_has_item: number
  }

  export type MenuCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu_has_item?: boolean | MenuCountOutputTypeCountMenu_has_itemArgs
  }

  // Custom InputTypes
  /**
   * MenuCountOutputType without action
   */
  export type MenuCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCountOutputType
     */
    select?: MenuCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuCountOutputType without action
   */
  export type MenuCountOutputTypeCountMenu_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menu_has_itemWhereInput
  }


  /**
   * Count Type ReservationCountOutputType
   */

  export type ReservationCountOutputType = {
    message: number
    reservation_has_item: number
  }

  export type ReservationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | ReservationCountOutputTypeCountMessageArgs
    reservation_has_item?: boolean | ReservationCountOutputTypeCountReservation_has_itemArgs
  }

  // Custom InputTypes
  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservationCountOutputType
     */
    select?: ReservationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeCountMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messageWhereInput
  }

  /**
   * ReservationCountOutputType without action
   */
  export type ReservationCountOutputTypeCountReservation_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservation_has_itemWhereInput
  }


  /**
   * Count Type RestaurantCountOutputType
   */

  export type RestaurantCountOutputType = {
    menu: number
    message: number
    reservation: number
    restaurant_has_item: number
    timeslot: number
  }

  export type RestaurantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu?: boolean | RestaurantCountOutputTypeCountMenuArgs
    message?: boolean | RestaurantCountOutputTypeCountMessageArgs
    reservation?: boolean | RestaurantCountOutputTypeCountReservationArgs
    restaurant_has_item?: boolean | RestaurantCountOutputTypeCountRestaurant_has_itemArgs
    timeslot?: boolean | RestaurantCountOutputTypeCountTimeslotArgs
  }

  // Custom InputTypes
  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RestaurantCountOutputType
     */
    select?: RestaurantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeCountMenuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menuWhereInput
  }

  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeCountMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messageWhereInput
  }

  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeCountReservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservationWhereInput
  }

  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeCountRestaurant_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: restaurant_has_itemWhereInput
  }

  /**
   * RestaurantCountOutputType without action
   */
  export type RestaurantCountOutputTypeCountTimeslotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: timeslotWhereInput
  }


  /**
   * Count Type TimeslotCountOutputType
   */

  export type TimeslotCountOutputType = {
    reservation: number
  }

  export type TimeslotCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | TimeslotCountOutputTypeCountReservationArgs
  }

  // Custom InputTypes
  /**
   * TimeslotCountOutputType without action
   */
  export type TimeslotCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TimeslotCountOutputType
     */
    select?: TimeslotCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TimeslotCountOutputType without action
   */
  export type TimeslotCountOutputTypeCountReservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservationWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    message: number
    reservation: number
    restaurants: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | UserCountOutputTypeCountMessageArgs
    reservation?: boolean | UserCountOutputTypeCountReservationArgs
    restaurants?: boolean | UserCountOutputTypeCountRestaurantsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRestaurantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: restaurantWhereInput
  }


  /**
   * Models
   */

  /**
   * Model item
   */

  export type AggregateItem = {
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  export type ItemAvgAggregateOutputType = {
    id: number | null
    base_price: Decimal | null
  }

  export type ItemSumAggregateOutputType = {
    id: number | null
    base_price: Decimal | null
  }

  export type ItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    category: $Enums.ItemCategory | null
    base_price: Decimal | null
  }

  export type ItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    category: $Enums.ItemCategory | null
    base_price: Decimal | null
  }

  export type ItemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    category: number
    base_price: number
    _all: number
  }


  export type ItemAvgAggregateInputType = {
    id?: true
    base_price?: true
  }

  export type ItemSumAggregateInputType = {
    id?: true
    base_price?: true
  }

  export type ItemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    base_price?: true
  }

  export type ItemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    base_price?: true
  }

  export type ItemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category?: true
    base_price?: true
    _all?: true
  }

  export type ItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which item to aggregate.
     */
    where?: itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemOrderByWithRelationInput | itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned items
    **/
    _count?: true | ItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemMaxAggregateInputType
  }

  export type GetItemAggregateType<T extends ItemAggregateArgs> = {
        [P in keyof T & keyof AggregateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItem[P]>
      : GetScalarType<T[P], AggregateItem[P]>
  }




  export type itemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: itemWhereInput
    orderBy?: itemOrderByWithAggregationInput | itemOrderByWithAggregationInput[]
    by: ItemScalarFieldEnum[] | ItemScalarFieldEnum
    having?: itemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemCountAggregateInputType | true
    _avg?: ItemAvgAggregateInputType
    _sum?: ItemSumAggregateInputType
    _min?: ItemMinAggregateInputType
    _max?: ItemMaxAggregateInputType
  }

  export type ItemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    category: $Enums.ItemCategory
    base_price: Decimal
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  type GetItemGroupByPayload<T extends itemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemGroupByOutputType[P]>
            : GetScalarType<T[P], ItemGroupByOutputType[P]>
        }
      >
    >


  export type itemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    base_price?: boolean
    reservation_has_item?: boolean | item$reservation_has_itemArgs<ExtArgs>
    restaurant_has_item?: boolean | item$restaurant_has_itemArgs<ExtArgs>
    menu_has_item?: boolean | item$menu_has_itemArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>

  export type itemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    base_price?: boolean
  }, ExtArgs["result"]["item"]>

  export type itemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    base_price?: boolean
  }, ExtArgs["result"]["item"]>

  export type itemSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    base_price?: boolean
  }

  export type itemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "category" | "base_price", ExtArgs["result"]["item"]>
  export type itemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation_has_item?: boolean | item$reservation_has_itemArgs<ExtArgs>
    restaurant_has_item?: boolean | item$restaurant_has_itemArgs<ExtArgs>
    menu_has_item?: boolean | item$menu_has_itemArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type itemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type itemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $itemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "item"
    objects: {
      reservation_has_item: Prisma.$reservation_has_itemPayload<ExtArgs>[]
      restaurant_has_item: Prisma.$restaurant_has_itemPayload<ExtArgs>[]
      menu_has_item: Prisma.$menu_has_itemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      category: $Enums.ItemCategory
      base_price: Prisma.Decimal
    }, ExtArgs["result"]["item"]>
    composites: {}
  }

  type itemGetPayload<S extends boolean | null | undefined | itemDefaultArgs> = $Result.GetResult<Prisma.$itemPayload, S>

  type itemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<itemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemCountAggregateInputType | true
    }

  export interface itemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['item'], meta: { name: 'item' } }
    /**
     * Find zero or one Item that matches the filter.
     * @param {itemFindUniqueArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends itemFindUniqueArgs>(args: SelectSubset<T, itemFindUniqueArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {itemFindUniqueOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends itemFindUniqueOrThrowArgs>(args: SelectSubset<T, itemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemFindFirstArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends itemFindFirstArgs>(args?: SelectSubset<T, itemFindFirstArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemFindFirstOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends itemFindFirstOrThrowArgs>(args?: SelectSubset<T, itemFindFirstOrThrowArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.item.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.item.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemWithIdOnly = await prisma.item.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends itemFindManyArgs>(args?: SelectSubset<T, itemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Item.
     * @param {itemCreateArgs} args - Arguments to create a Item.
     * @example
     * // Create one Item
     * const Item = await prisma.item.create({
     *   data: {
     *     // ... data to create a Item
     *   }
     * })
     * 
     */
    create<T extends itemCreateArgs>(args: SelectSubset<T, itemCreateArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Items.
     * @param {itemCreateManyArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends itemCreateManyArgs>(args?: SelectSubset<T, itemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Items and returns the data saved in the database.
     * @param {itemCreateManyAndReturnArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Items and only return the `id`
     * const itemWithIdOnly = await prisma.item.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends itemCreateManyAndReturnArgs>(args?: SelectSubset<T, itemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Item.
     * @param {itemDeleteArgs} args - Arguments to delete one Item.
     * @example
     * // Delete one Item
     * const Item = await prisma.item.delete({
     *   where: {
     *     // ... filter to delete one Item
     *   }
     * })
     * 
     */
    delete<T extends itemDeleteArgs>(args: SelectSubset<T, itemDeleteArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Item.
     * @param {itemUpdateArgs} args - Arguments to update one Item.
     * @example
     * // Update one Item
     * const item = await prisma.item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends itemUpdateArgs>(args: SelectSubset<T, itemUpdateArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Items.
     * @param {itemDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends itemDeleteManyArgs>(args?: SelectSubset<T, itemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends itemUpdateManyArgs>(args: SelectSubset<T, itemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items and returns the data updated in the database.
     * @param {itemUpdateManyAndReturnArgs} args - Arguments to update many Items.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Items and only return the `id`
     * const itemWithIdOnly = await prisma.item.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends itemUpdateManyAndReturnArgs>(args: SelectSubset<T, itemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Item.
     * @param {itemUpsertArgs} args - Arguments to update or create a Item.
     * @example
     * // Update or create a Item
     * const item = await prisma.item.upsert({
     *   create: {
     *     // ... data to create a Item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Item we want to update
     *   }
     * })
     */
    upsert<T extends itemUpsertArgs>(args: SelectSubset<T, itemUpsertArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.item.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends itemCountArgs>(
      args?: Subset<T, itemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemAggregateArgs>(args: Subset<T, ItemAggregateArgs>): Prisma.PrismaPromise<GetItemAggregateType<T>>

    /**
     * Group by Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {itemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends itemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: itemGroupByArgs['orderBy'] }
        : { orderBy?: itemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, itemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the item model
   */
  readonly fields: itemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__itemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservation_has_item<T extends item$reservation_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, item$reservation_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    restaurant_has_item<T extends item$restaurant_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, item$restaurant_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    menu_has_item<T extends item$menu_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, item$menu_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the item model
   */
  interface itemFieldRefs {
    readonly id: FieldRef<"item", 'Int'>
    readonly name: FieldRef<"item", 'String'>
    readonly description: FieldRef<"item", 'String'>
    readonly category: FieldRef<"item", 'ItemCategory'>
    readonly base_price: FieldRef<"item", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * item findUnique
   */
  export type itemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter, which item to fetch.
     */
    where: itemWhereUniqueInput
  }

  /**
   * item findUniqueOrThrow
   */
  export type itemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter, which item to fetch.
     */
    where: itemWhereUniqueInput
  }

  /**
   * item findFirst
   */
  export type itemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter, which item to fetch.
     */
    where?: itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemOrderByWithRelationInput | itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for items.
     */
    cursor?: itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * item findFirstOrThrow
   */
  export type itemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter, which item to fetch.
     */
    where?: itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemOrderByWithRelationInput | itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for items.
     */
    cursor?: itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * item findMany
   */
  export type itemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter, which items to fetch.
     */
    where?: itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of items to fetch.
     */
    orderBy?: itemOrderByWithRelationInput | itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing items.
     */
    cursor?: itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` items.
     */
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * item create
   */
  export type itemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * The data needed to create a item.
     */
    data: XOR<itemCreateInput, itemUncheckedCreateInput>
  }

  /**
   * item createMany
   */
  export type itemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many items.
     */
    data: itemCreateManyInput | itemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * item createManyAndReturn
   */
  export type itemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * The data used to create many items.
     */
    data: itemCreateManyInput | itemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * item update
   */
  export type itemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * The data needed to update a item.
     */
    data: XOR<itemUpdateInput, itemUncheckedUpdateInput>
    /**
     * Choose, which item to update.
     */
    where: itemWhereUniqueInput
  }

  /**
   * item updateMany
   */
  export type itemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update items.
     */
    data: XOR<itemUpdateManyMutationInput, itemUncheckedUpdateManyInput>
    /**
     * Filter which items to update
     */
    where?: itemWhereInput
    /**
     * Limit how many items to update.
     */
    limit?: number
  }

  /**
   * item updateManyAndReturn
   */
  export type itemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * The data used to update items.
     */
    data: XOR<itemUpdateManyMutationInput, itemUncheckedUpdateManyInput>
    /**
     * Filter which items to update
     */
    where?: itemWhereInput
    /**
     * Limit how many items to update.
     */
    limit?: number
  }

  /**
   * item upsert
   */
  export type itemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * The filter to search for the item to update in case it exists.
     */
    where: itemWhereUniqueInput
    /**
     * In case the item found by the `where` argument doesn't exist, create a new item with this data.
     */
    create: XOR<itemCreateInput, itemUncheckedCreateInput>
    /**
     * In case the item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<itemUpdateInput, itemUncheckedUpdateInput>
  }

  /**
   * item delete
   */
  export type itemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
    /**
     * Filter which item to delete.
     */
    where: itemWhereUniqueInput
  }

  /**
   * item deleteMany
   */
  export type itemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which items to delete
     */
    where?: itemWhereInput
    /**
     * Limit how many items to delete.
     */
    limit?: number
  }

  /**
   * item.reservation_has_item
   */
  export type item$reservation_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    where?: reservation_has_itemWhereInput
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    cursor?: reservation_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Reservation_has_itemScalarFieldEnum | Reservation_has_itemScalarFieldEnum[]
  }

  /**
   * item.restaurant_has_item
   */
  export type item$restaurant_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    where?: restaurant_has_itemWhereInput
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    cursor?: restaurant_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Restaurant_has_itemScalarFieldEnum | Restaurant_has_itemScalarFieldEnum[]
  }

  /**
   * item.menu_has_item
   */
  export type item$menu_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    where?: menu_has_itemWhereInput
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    cursor?: menu_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Menu_has_itemScalarFieldEnum | Menu_has_itemScalarFieldEnum[]
  }

  /**
   * item without action
   */
  export type itemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the item
     */
    select?: itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the item
     */
    omit?: itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: itemInclude<ExtArgs> | null
  }


  /**
   * Model menu
   */

  export type AggregateMenu = {
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  export type MenuAvgAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
  }

  export type MenuSumAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
  }

  export type MenuMinAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    name: string | null
    description: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MenuMaxAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    name: string | null
    description: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MenuCountAggregateOutputType = {
    id: number
    restaurant_id: number
    name: number
    description: number
    is_active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type MenuAvgAggregateInputType = {
    id?: true
    restaurant_id?: true
  }

  export type MenuSumAggregateInputType = {
    id?: true
    restaurant_id?: true
  }

  export type MenuMinAggregateInputType = {
    id?: true
    restaurant_id?: true
    name?: true
    description?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type MenuMaxAggregateInputType = {
    id?: true
    restaurant_id?: true
    name?: true
    description?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type MenuCountAggregateInputType = {
    id?: true
    restaurant_id?: true
    name?: true
    description?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type MenuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menu to aggregate.
     */
    where?: menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menus to fetch.
     */
    orderBy?: menuOrderByWithRelationInput | menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned menus
    **/
    _count?: true | MenuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuMaxAggregateInputType
  }

  export type GetMenuAggregateType<T extends MenuAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu[P]>
      : GetScalarType<T[P], AggregateMenu[P]>
  }




  export type menuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menuWhereInput
    orderBy?: menuOrderByWithAggregationInput | menuOrderByWithAggregationInput[]
    by: MenuScalarFieldEnum[] | MenuScalarFieldEnum
    having?: menuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuCountAggregateInputType | true
    _avg?: MenuAvgAggregateInputType
    _sum?: MenuSumAggregateInputType
    _min?: MenuMinAggregateInputType
    _max?: MenuMaxAggregateInputType
  }

  export type MenuGroupByOutputType = {
    id: number
    restaurant_id: number
    name: string
    description: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  type GetMenuGroupByPayload<T extends menuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuGroupByOutputType[P]>
            : GetScalarType<T[P], MenuGroupByOutputType[P]>
        }
      >
    >


  export type menuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    name?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    menu_has_item?: boolean | menu$menu_has_itemArgs<ExtArgs>
    _count?: boolean | MenuCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu"]>

  export type menuSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    name?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu"]>

  export type menuSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    name?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu"]>

  export type menuSelectScalar = {
    id?: boolean
    restaurant_id?: boolean
    name?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type menuOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "restaurant_id" | "name" | "description" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["menu"]>
  export type menuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    menu_has_item?: boolean | menu$menu_has_itemArgs<ExtArgs>
    _count?: boolean | MenuCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type menuIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }
  export type menuIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }

  export type $menuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "menu"
    objects: {
      restaurant: Prisma.$restaurantPayload<ExtArgs>
      menu_has_item: Prisma.$menu_has_itemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      restaurant_id: number
      name: string
      description: string | null
      is_active: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["menu"]>
    composites: {}
  }

  type menuGetPayload<S extends boolean | null | undefined | menuDefaultArgs> = $Result.GetResult<Prisma.$menuPayload, S>

  type menuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<menuFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuCountAggregateInputType | true
    }

  export interface menuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['menu'], meta: { name: 'menu' } }
    /**
     * Find zero or one Menu that matches the filter.
     * @param {menuFindUniqueArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends menuFindUniqueArgs>(args: SelectSubset<T, menuFindUniqueArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Menu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {menuFindUniqueOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends menuFindUniqueOrThrowArgs>(args: SelectSubset<T, menuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuFindFirstArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends menuFindFirstArgs>(args?: SelectSubset<T, menuFindFirstArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuFindFirstOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends menuFindFirstOrThrowArgs>(args?: SelectSubset<T, menuFindFirstOrThrowArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menus
     * const menus = await prisma.menu.findMany()
     * 
     * // Get first 10 Menus
     * const menus = await prisma.menu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuWithIdOnly = await prisma.menu.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends menuFindManyArgs>(args?: SelectSubset<T, menuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Menu.
     * @param {menuCreateArgs} args - Arguments to create a Menu.
     * @example
     * // Create one Menu
     * const Menu = await prisma.menu.create({
     *   data: {
     *     // ... data to create a Menu
     *   }
     * })
     * 
     */
    create<T extends menuCreateArgs>(args: SelectSubset<T, menuCreateArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Menus.
     * @param {menuCreateManyArgs} args - Arguments to create many Menus.
     * @example
     * // Create many Menus
     * const menu = await prisma.menu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends menuCreateManyArgs>(args?: SelectSubset<T, menuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Menus and returns the data saved in the database.
     * @param {menuCreateManyAndReturnArgs} args - Arguments to create many Menus.
     * @example
     * // Create many Menus
     * const menu = await prisma.menu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Menus and only return the `id`
     * const menuWithIdOnly = await prisma.menu.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends menuCreateManyAndReturnArgs>(args?: SelectSubset<T, menuCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Menu.
     * @param {menuDeleteArgs} args - Arguments to delete one Menu.
     * @example
     * // Delete one Menu
     * const Menu = await prisma.menu.delete({
     *   where: {
     *     // ... filter to delete one Menu
     *   }
     * })
     * 
     */
    delete<T extends menuDeleteArgs>(args: SelectSubset<T, menuDeleteArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Menu.
     * @param {menuUpdateArgs} args - Arguments to update one Menu.
     * @example
     * // Update one Menu
     * const menu = await prisma.menu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends menuUpdateArgs>(args: SelectSubset<T, menuUpdateArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Menus.
     * @param {menuDeleteManyArgs} args - Arguments to filter Menus to delete.
     * @example
     * // Delete a few Menus
     * const { count } = await prisma.menu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends menuDeleteManyArgs>(args?: SelectSubset<T, menuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menus
     * const menu = await prisma.menu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends menuUpdateManyArgs>(args: SelectSubset<T, menuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menus and returns the data updated in the database.
     * @param {menuUpdateManyAndReturnArgs} args - Arguments to update many Menus.
     * @example
     * // Update many Menus
     * const menu = await prisma.menu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Menus and only return the `id`
     * const menuWithIdOnly = await prisma.menu.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends menuUpdateManyAndReturnArgs>(args: SelectSubset<T, menuUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Menu.
     * @param {menuUpsertArgs} args - Arguments to update or create a Menu.
     * @example
     * // Update or create a Menu
     * const menu = await prisma.menu.upsert({
     *   create: {
     *     // ... data to create a Menu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu we want to update
     *   }
     * })
     */
    upsert<T extends menuUpsertArgs>(args: SelectSubset<T, menuUpsertArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuCountArgs} args - Arguments to filter Menus to count.
     * @example
     * // Count the number of Menus
     * const count = await prisma.menu.count({
     *   where: {
     *     // ... the filter for the Menus we want to count
     *   }
     * })
    **/
    count<T extends menuCountArgs>(
      args?: Subset<T, menuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuAggregateArgs>(args: Subset<T, MenuAggregateArgs>): Prisma.PrismaPromise<GetMenuAggregateType<T>>

    /**
     * Group by Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends menuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: menuGroupByArgs['orderBy'] }
        : { orderBy?: menuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, menuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the menu model
   */
  readonly fields: menuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for menu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__menuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    restaurant<T extends restaurantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, restaurantDefaultArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    menu_has_item<T extends menu$menu_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, menu$menu_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the menu model
   */
  interface menuFieldRefs {
    readonly id: FieldRef<"menu", 'Int'>
    readonly restaurant_id: FieldRef<"menu", 'Int'>
    readonly name: FieldRef<"menu", 'String'>
    readonly description: FieldRef<"menu", 'String'>
    readonly is_active: FieldRef<"menu", 'Boolean'>
    readonly created_at: FieldRef<"menu", 'DateTime'>
    readonly updated_at: FieldRef<"menu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * menu findUnique
   */
  export type menuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter, which menu to fetch.
     */
    where: menuWhereUniqueInput
  }

  /**
   * menu findUniqueOrThrow
   */
  export type menuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter, which menu to fetch.
     */
    where: menuWhereUniqueInput
  }

  /**
   * menu findFirst
   */
  export type menuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter, which menu to fetch.
     */
    where?: menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menus to fetch.
     */
    orderBy?: menuOrderByWithRelationInput | menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menus.
     */
    cursor?: menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * menu findFirstOrThrow
   */
  export type menuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter, which menu to fetch.
     */
    where?: menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menus to fetch.
     */
    orderBy?: menuOrderByWithRelationInput | menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menus.
     */
    cursor?: menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * menu findMany
   */
  export type menuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter, which menus to fetch.
     */
    where?: menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menus to fetch.
     */
    orderBy?: menuOrderByWithRelationInput | menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing menus.
     */
    cursor?: menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menus.
     */
    skip?: number
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * menu create
   */
  export type menuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * The data needed to create a menu.
     */
    data: XOR<menuCreateInput, menuUncheckedCreateInput>
  }

  /**
   * menu createMany
   */
  export type menuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many menus.
     */
    data: menuCreateManyInput | menuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * menu createManyAndReturn
   */
  export type menuCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * The data used to create many menus.
     */
    data: menuCreateManyInput | menuCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * menu update
   */
  export type menuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * The data needed to update a menu.
     */
    data: XOR<menuUpdateInput, menuUncheckedUpdateInput>
    /**
     * Choose, which menu to update.
     */
    where: menuWhereUniqueInput
  }

  /**
   * menu updateMany
   */
  export type menuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update menus.
     */
    data: XOR<menuUpdateManyMutationInput, menuUncheckedUpdateManyInput>
    /**
     * Filter which menus to update
     */
    where?: menuWhereInput
    /**
     * Limit how many menus to update.
     */
    limit?: number
  }

  /**
   * menu updateManyAndReturn
   */
  export type menuUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * The data used to update menus.
     */
    data: XOR<menuUpdateManyMutationInput, menuUncheckedUpdateManyInput>
    /**
     * Filter which menus to update
     */
    where?: menuWhereInput
    /**
     * Limit how many menus to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * menu upsert
   */
  export type menuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * The filter to search for the menu to update in case it exists.
     */
    where: menuWhereUniqueInput
    /**
     * In case the menu found by the `where` argument doesn't exist, create a new menu with this data.
     */
    create: XOR<menuCreateInput, menuUncheckedCreateInput>
    /**
     * In case the menu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<menuUpdateInput, menuUncheckedUpdateInput>
  }

  /**
   * menu delete
   */
  export type menuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    /**
     * Filter which menu to delete.
     */
    where: menuWhereUniqueInput
  }

  /**
   * menu deleteMany
   */
  export type menuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menus to delete
     */
    where?: menuWhereInput
    /**
     * Limit how many menus to delete.
     */
    limit?: number
  }

  /**
   * menu.menu_has_item
   */
  export type menu$menu_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    where?: menu_has_itemWhereInput
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    cursor?: menu_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Menu_has_itemScalarFieldEnum | Menu_has_itemScalarFieldEnum[]
  }

  /**
   * menu without action
   */
  export type menuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
  }


  /**
   * Model menu_has_item
   */

  export type AggregateMenu_has_item = {
    _count: Menu_has_itemCountAggregateOutputType | null
    _avg: Menu_has_itemAvgAggregateOutputType | null
    _sum: Menu_has_itemSumAggregateOutputType | null
    _min: Menu_has_itemMinAggregateOutputType | null
    _max: Menu_has_itemMaxAggregateOutputType | null
  }

  export type Menu_has_itemAvgAggregateOutputType = {
    menu_id: number | null
    item_id: number | null
  }

  export type Menu_has_itemSumAggregateOutputType = {
    menu_id: number | null
    item_id: number | null
  }

  export type Menu_has_itemMinAggregateOutputType = {
    menu_id: number | null
    item_id: number | null
  }

  export type Menu_has_itemMaxAggregateOutputType = {
    menu_id: number | null
    item_id: number | null
  }

  export type Menu_has_itemCountAggregateOutputType = {
    menu_id: number
    item_id: number
    _all: number
  }


  export type Menu_has_itemAvgAggregateInputType = {
    menu_id?: true
    item_id?: true
  }

  export type Menu_has_itemSumAggregateInputType = {
    menu_id?: true
    item_id?: true
  }

  export type Menu_has_itemMinAggregateInputType = {
    menu_id?: true
    item_id?: true
  }

  export type Menu_has_itemMaxAggregateInputType = {
    menu_id?: true
    item_id?: true
  }

  export type Menu_has_itemCountAggregateInputType = {
    menu_id?: true
    item_id?: true
    _all?: true
  }

  export type Menu_has_itemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menu_has_item to aggregate.
     */
    where?: menu_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_has_items to fetch.
     */
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: menu_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned menu_has_items
    **/
    _count?: true | Menu_has_itemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Menu_has_itemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Menu_has_itemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Menu_has_itemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Menu_has_itemMaxAggregateInputType
  }

  export type GetMenu_has_itemAggregateType<T extends Menu_has_itemAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu_has_item]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu_has_item[P]>
      : GetScalarType<T[P], AggregateMenu_has_item[P]>
  }




  export type menu_has_itemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: menu_has_itemWhereInput
    orderBy?: menu_has_itemOrderByWithAggregationInput | menu_has_itemOrderByWithAggregationInput[]
    by: Menu_has_itemScalarFieldEnum[] | Menu_has_itemScalarFieldEnum
    having?: menu_has_itemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Menu_has_itemCountAggregateInputType | true
    _avg?: Menu_has_itemAvgAggregateInputType
    _sum?: Menu_has_itemSumAggregateInputType
    _min?: Menu_has_itemMinAggregateInputType
    _max?: Menu_has_itemMaxAggregateInputType
  }

  export type Menu_has_itemGroupByOutputType = {
    menu_id: number
    item_id: number
    _count: Menu_has_itemCountAggregateOutputType | null
    _avg: Menu_has_itemAvgAggregateOutputType | null
    _sum: Menu_has_itemSumAggregateOutputType | null
    _min: Menu_has_itemMinAggregateOutputType | null
    _max: Menu_has_itemMaxAggregateOutputType | null
  }

  type GetMenu_has_itemGroupByPayload<T extends menu_has_itemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Menu_has_itemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Menu_has_itemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Menu_has_itemGroupByOutputType[P]>
            : GetScalarType<T[P], Menu_has_itemGroupByOutputType[P]>
        }
      >
    >


  export type menu_has_itemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    menu_id?: boolean
    item_id?: boolean
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu_has_item"]>

  export type menu_has_itemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    menu_id?: boolean
    item_id?: boolean
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu_has_item"]>

  export type menu_has_itemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    menu_id?: boolean
    item_id?: boolean
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menu_has_item"]>

  export type menu_has_itemSelectScalar = {
    menu_id?: boolean
    item_id?: boolean
  }

  export type menu_has_itemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"menu_id" | "item_id", ExtArgs["result"]["menu_has_item"]>
  export type menu_has_itemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }
  export type menu_has_itemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }
  export type menu_has_itemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu?: boolean | menuDefaultArgs<ExtArgs>
    item?: boolean | itemDefaultArgs<ExtArgs>
  }

  export type $menu_has_itemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "menu_has_item"
    objects: {
      menu: Prisma.$menuPayload<ExtArgs>
      item: Prisma.$itemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      menu_id: number
      item_id: number
    }, ExtArgs["result"]["menu_has_item"]>
    composites: {}
  }

  type menu_has_itemGetPayload<S extends boolean | null | undefined | menu_has_itemDefaultArgs> = $Result.GetResult<Prisma.$menu_has_itemPayload, S>

  type menu_has_itemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<menu_has_itemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Menu_has_itemCountAggregateInputType | true
    }

  export interface menu_has_itemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['menu_has_item'], meta: { name: 'menu_has_item' } }
    /**
     * Find zero or one Menu_has_item that matches the filter.
     * @param {menu_has_itemFindUniqueArgs} args - Arguments to find a Menu_has_item
     * @example
     * // Get one Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends menu_has_itemFindUniqueArgs>(args: SelectSubset<T, menu_has_itemFindUniqueArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Menu_has_item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {menu_has_itemFindUniqueOrThrowArgs} args - Arguments to find a Menu_has_item
     * @example
     * // Get one Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends menu_has_itemFindUniqueOrThrowArgs>(args: SelectSubset<T, menu_has_itemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu_has_item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemFindFirstArgs} args - Arguments to find a Menu_has_item
     * @example
     * // Get one Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends menu_has_itemFindFirstArgs>(args?: SelectSubset<T, menu_has_itemFindFirstArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Menu_has_item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemFindFirstOrThrowArgs} args - Arguments to find a Menu_has_item
     * @example
     * // Get one Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends menu_has_itemFindFirstOrThrowArgs>(args?: SelectSubset<T, menu_has_itemFindFirstOrThrowArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Menu_has_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menu_has_items
     * const menu_has_items = await prisma.menu_has_item.findMany()
     * 
     * // Get first 10 Menu_has_items
     * const menu_has_items = await prisma.menu_has_item.findMany({ take: 10 })
     * 
     * // Only select the `menu_id`
     * const menu_has_itemWithMenu_idOnly = await prisma.menu_has_item.findMany({ select: { menu_id: true } })
     * 
     */
    findMany<T extends menu_has_itemFindManyArgs>(args?: SelectSubset<T, menu_has_itemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Menu_has_item.
     * @param {menu_has_itemCreateArgs} args - Arguments to create a Menu_has_item.
     * @example
     * // Create one Menu_has_item
     * const Menu_has_item = await prisma.menu_has_item.create({
     *   data: {
     *     // ... data to create a Menu_has_item
     *   }
     * })
     * 
     */
    create<T extends menu_has_itemCreateArgs>(args: SelectSubset<T, menu_has_itemCreateArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Menu_has_items.
     * @param {menu_has_itemCreateManyArgs} args - Arguments to create many Menu_has_items.
     * @example
     * // Create many Menu_has_items
     * const menu_has_item = await prisma.menu_has_item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends menu_has_itemCreateManyArgs>(args?: SelectSubset<T, menu_has_itemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Menu_has_items and returns the data saved in the database.
     * @param {menu_has_itemCreateManyAndReturnArgs} args - Arguments to create many Menu_has_items.
     * @example
     * // Create many Menu_has_items
     * const menu_has_item = await prisma.menu_has_item.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Menu_has_items and only return the `menu_id`
     * const menu_has_itemWithMenu_idOnly = await prisma.menu_has_item.createManyAndReturn({
     *   select: { menu_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends menu_has_itemCreateManyAndReturnArgs>(args?: SelectSubset<T, menu_has_itemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Menu_has_item.
     * @param {menu_has_itemDeleteArgs} args - Arguments to delete one Menu_has_item.
     * @example
     * // Delete one Menu_has_item
     * const Menu_has_item = await prisma.menu_has_item.delete({
     *   where: {
     *     // ... filter to delete one Menu_has_item
     *   }
     * })
     * 
     */
    delete<T extends menu_has_itemDeleteArgs>(args: SelectSubset<T, menu_has_itemDeleteArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Menu_has_item.
     * @param {menu_has_itemUpdateArgs} args - Arguments to update one Menu_has_item.
     * @example
     * // Update one Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends menu_has_itemUpdateArgs>(args: SelectSubset<T, menu_has_itemUpdateArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Menu_has_items.
     * @param {menu_has_itemDeleteManyArgs} args - Arguments to filter Menu_has_items to delete.
     * @example
     * // Delete a few Menu_has_items
     * const { count } = await prisma.menu_has_item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends menu_has_itemDeleteManyArgs>(args?: SelectSubset<T, menu_has_itemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menu_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menu_has_items
     * const menu_has_item = await prisma.menu_has_item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends menu_has_itemUpdateManyArgs>(args: SelectSubset<T, menu_has_itemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menu_has_items and returns the data updated in the database.
     * @param {menu_has_itemUpdateManyAndReturnArgs} args - Arguments to update many Menu_has_items.
     * @example
     * // Update many Menu_has_items
     * const menu_has_item = await prisma.menu_has_item.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Menu_has_items and only return the `menu_id`
     * const menu_has_itemWithMenu_idOnly = await prisma.menu_has_item.updateManyAndReturn({
     *   select: { menu_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends menu_has_itemUpdateManyAndReturnArgs>(args: SelectSubset<T, menu_has_itemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Menu_has_item.
     * @param {menu_has_itemUpsertArgs} args - Arguments to update or create a Menu_has_item.
     * @example
     * // Update or create a Menu_has_item
     * const menu_has_item = await prisma.menu_has_item.upsert({
     *   create: {
     *     // ... data to create a Menu_has_item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu_has_item we want to update
     *   }
     * })
     */
    upsert<T extends menu_has_itemUpsertArgs>(args: SelectSubset<T, menu_has_itemUpsertArgs<ExtArgs>>): Prisma__menu_has_itemClient<$Result.GetResult<Prisma.$menu_has_itemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Menu_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemCountArgs} args - Arguments to filter Menu_has_items to count.
     * @example
     * // Count the number of Menu_has_items
     * const count = await prisma.menu_has_item.count({
     *   where: {
     *     // ... the filter for the Menu_has_items we want to count
     *   }
     * })
    **/
    count<T extends menu_has_itemCountArgs>(
      args?: Subset<T, menu_has_itemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Menu_has_itemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Menu_has_itemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Menu_has_itemAggregateArgs>(args: Subset<T, Menu_has_itemAggregateArgs>): Prisma.PrismaPromise<GetMenu_has_itemAggregateType<T>>

    /**
     * Group by Menu_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {menu_has_itemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends menu_has_itemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: menu_has_itemGroupByArgs['orderBy'] }
        : { orderBy?: menu_has_itemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, menu_has_itemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenu_has_itemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the menu_has_item model
   */
  readonly fields: menu_has_itemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for menu_has_item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__menu_has_itemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menu<T extends menuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, menuDefaultArgs<ExtArgs>>): Prisma__menuClient<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends itemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemDefaultArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the menu_has_item model
   */
  interface menu_has_itemFieldRefs {
    readonly menu_id: FieldRef<"menu_has_item", 'Int'>
    readonly item_id: FieldRef<"menu_has_item", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * menu_has_item findUnique
   */
  export type menu_has_itemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which menu_has_item to fetch.
     */
    where: menu_has_itemWhereUniqueInput
  }

  /**
   * menu_has_item findUniqueOrThrow
   */
  export type menu_has_itemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which menu_has_item to fetch.
     */
    where: menu_has_itemWhereUniqueInput
  }

  /**
   * menu_has_item findFirst
   */
  export type menu_has_itemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which menu_has_item to fetch.
     */
    where?: menu_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_has_items to fetch.
     */
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menu_has_items.
     */
    cursor?: menu_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menu_has_items.
     */
    distinct?: Menu_has_itemScalarFieldEnum | Menu_has_itemScalarFieldEnum[]
  }

  /**
   * menu_has_item findFirstOrThrow
   */
  export type menu_has_itemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which menu_has_item to fetch.
     */
    where?: menu_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_has_items to fetch.
     */
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for menu_has_items.
     */
    cursor?: menu_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of menu_has_items.
     */
    distinct?: Menu_has_itemScalarFieldEnum | Menu_has_itemScalarFieldEnum[]
  }

  /**
   * menu_has_item findMany
   */
  export type menu_has_itemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which menu_has_items to fetch.
     */
    where?: menu_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of menu_has_items to fetch.
     */
    orderBy?: menu_has_itemOrderByWithRelationInput | menu_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing menu_has_items.
     */
    cursor?: menu_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` menu_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` menu_has_items.
     */
    skip?: number
    distinct?: Menu_has_itemScalarFieldEnum | Menu_has_itemScalarFieldEnum[]
  }

  /**
   * menu_has_item create
   */
  export type menu_has_itemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to create a menu_has_item.
     */
    data: XOR<menu_has_itemCreateInput, menu_has_itemUncheckedCreateInput>
  }

  /**
   * menu_has_item createMany
   */
  export type menu_has_itemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many menu_has_items.
     */
    data: menu_has_itemCreateManyInput | menu_has_itemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * menu_has_item createManyAndReturn
   */
  export type menu_has_itemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * The data used to create many menu_has_items.
     */
    data: menu_has_itemCreateManyInput | menu_has_itemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * menu_has_item update
   */
  export type menu_has_itemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to update a menu_has_item.
     */
    data: XOR<menu_has_itemUpdateInput, menu_has_itemUncheckedUpdateInput>
    /**
     * Choose, which menu_has_item to update.
     */
    where: menu_has_itemWhereUniqueInput
  }

  /**
   * menu_has_item updateMany
   */
  export type menu_has_itemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update menu_has_items.
     */
    data: XOR<menu_has_itemUpdateManyMutationInput, menu_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which menu_has_items to update
     */
    where?: menu_has_itemWhereInput
    /**
     * Limit how many menu_has_items to update.
     */
    limit?: number
  }

  /**
   * menu_has_item updateManyAndReturn
   */
  export type menu_has_itemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * The data used to update menu_has_items.
     */
    data: XOR<menu_has_itemUpdateManyMutationInput, menu_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which menu_has_items to update
     */
    where?: menu_has_itemWhereInput
    /**
     * Limit how many menu_has_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * menu_has_item upsert
   */
  export type menu_has_itemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * The filter to search for the menu_has_item to update in case it exists.
     */
    where: menu_has_itemWhereUniqueInput
    /**
     * In case the menu_has_item found by the `where` argument doesn't exist, create a new menu_has_item with this data.
     */
    create: XOR<menu_has_itemCreateInput, menu_has_itemUncheckedCreateInput>
    /**
     * In case the menu_has_item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<menu_has_itemUpdateInput, menu_has_itemUncheckedUpdateInput>
  }

  /**
   * menu_has_item delete
   */
  export type menu_has_itemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
    /**
     * Filter which menu_has_item to delete.
     */
    where: menu_has_itemWhereUniqueInput
  }

  /**
   * menu_has_item deleteMany
   */
  export type menu_has_itemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which menu_has_items to delete
     */
    where?: menu_has_itemWhereInput
    /**
     * Limit how many menu_has_items to delete.
     */
    limit?: number
  }

  /**
   * menu_has_item without action
   */
  export type menu_has_itemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu_has_item
     */
    select?: menu_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu_has_item
     */
    omit?: menu_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menu_has_itemInclude<ExtArgs> | null
  }


  /**
   * Model message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    reservation_id: number | null
  }

  export type MessageSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    reservation_id: number | null
  }

  export type MessageMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    reservation_id: number | null
    content: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    reservation_id: number | null
    content: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    user_id: number
    restaurant_id: number
    reservation_id: number
    content: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type MessageAvgAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    reservation_id?: true
  }

  export type MessageSumAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    reservation_id?: true
  }

  export type MessageMinAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    reservation_id?: true
    content?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    reservation_id?: true
    content?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    reservation_id?: true
    content?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which message to aggregate.
     */
    where?: messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type messageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messageWhereInput
    orderBy?: messageOrderByWithAggregationInput | messageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: messageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _avg?: MessageAvgAggregateInputType
    _sum?: MessageSumAggregateInputType
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: number
    user_id: number
    restaurant_id: number
    reservation_id: number | null
    content: string
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends messageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type messageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    reservation_id?: boolean
    content?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type messageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    reservation_id?: boolean
    content?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type messageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    reservation_id?: boolean
    content?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type messageSelectScalar = {
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    reservation_id?: boolean
    content?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type messageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "restaurant_id" | "reservation_id" | "content" | "status" | "created_at" | "updated_at", ExtArgs["result"]["message"]>
  export type messageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type messageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type messageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | message$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $messagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "message"
    objects: {
      reservation: Prisma.$reservationPayload<ExtArgs> | null
      restaurant: Prisma.$restaurantPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      restaurant_id: number
      reservation_id: number | null
      content: string
      status: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type messageGetPayload<S extends boolean | null | undefined | messageDefaultArgs> = $Result.GetResult<Prisma.$messagePayload, S>

  type messageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<messageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface messageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['message'], meta: { name: 'message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {messageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends messageFindUniqueArgs>(args: SelectSubset<T, messageFindUniqueArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {messageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends messageFindUniqueOrThrowArgs>(args: SelectSubset<T, messageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends messageFindFirstArgs>(args?: SelectSubset<T, messageFindFirstArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends messageFindFirstOrThrowArgs>(args?: SelectSubset<T, messageFindFirstOrThrowArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends messageFindManyArgs>(args?: SelectSubset<T, messageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {messageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends messageCreateArgs>(args: SelectSubset<T, messageCreateArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {messageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends messageCreateManyArgs>(args?: SelectSubset<T, messageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {messageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends messageCreateManyAndReturnArgs>(args?: SelectSubset<T, messageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {messageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends messageDeleteArgs>(args: SelectSubset<T, messageDeleteArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {messageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends messageUpdateArgs>(args: SelectSubset<T, messageUpdateArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {messageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends messageDeleteManyArgs>(args?: SelectSubset<T, messageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends messageUpdateManyArgs>(args: SelectSubset<T, messageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {messageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends messageUpdateManyAndReturnArgs>(args: SelectSubset<T, messageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {messageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends messageUpsertArgs>(args: SelectSubset<T, messageUpsertArgs<ExtArgs>>): Prisma__messageClient<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends messageCountArgs>(
      args?: Subset<T, messageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends messageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: messageGroupByArgs['orderBy'] }
        : { orderBy?: messageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, messageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the message model
   */
  readonly fields: messageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__messageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservation<T extends message$reservationArgs<ExtArgs> = {}>(args?: Subset<T, message$reservationArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    restaurant<T extends restaurantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, restaurantDefaultArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the message model
   */
  interface messageFieldRefs {
    readonly id: FieldRef<"message", 'Int'>
    readonly user_id: FieldRef<"message", 'Int'>
    readonly restaurant_id: FieldRef<"message", 'Int'>
    readonly reservation_id: FieldRef<"message", 'Int'>
    readonly content: FieldRef<"message", 'String'>
    readonly status: FieldRef<"message", 'String'>
    readonly created_at: FieldRef<"message", 'DateTime'>
    readonly updated_at: FieldRef<"message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * message findUnique
   */
  export type messageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter, which message to fetch.
     */
    where: messageWhereUniqueInput
  }

  /**
   * message findUniqueOrThrow
   */
  export type messageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter, which message to fetch.
     */
    where: messageWhereUniqueInput
  }

  /**
   * message findFirst
   */
  export type messageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter, which message to fetch.
     */
    where?: messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * message findFirstOrThrow
   */
  export type messageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter, which message to fetch.
     */
    where?: messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * message findMany
   */
  export type messageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing messages.
     */
    cursor?: messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * message create
   */
  export type messageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * The data needed to create a message.
     */
    data: XOR<messageCreateInput, messageUncheckedCreateInput>
  }

  /**
   * message createMany
   */
  export type messageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many messages.
     */
    data: messageCreateManyInput | messageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * message createManyAndReturn
   */
  export type messageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * The data used to create many messages.
     */
    data: messageCreateManyInput | messageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * message update
   */
  export type messageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * The data needed to update a message.
     */
    data: XOR<messageUpdateInput, messageUncheckedUpdateInput>
    /**
     * Choose, which message to update.
     */
    where: messageWhereUniqueInput
  }

  /**
   * message updateMany
   */
  export type messageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update messages.
     */
    data: XOR<messageUpdateManyMutationInput, messageUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messageWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
  }

  /**
   * message updateManyAndReturn
   */
  export type messageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * The data used to update messages.
     */
    data: XOR<messageUpdateManyMutationInput, messageUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messageWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * message upsert
   */
  export type messageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * The filter to search for the message to update in case it exists.
     */
    where: messageWhereUniqueInput
    /**
     * In case the message found by the `where` argument doesn't exist, create a new message with this data.
     */
    create: XOR<messageCreateInput, messageUncheckedCreateInput>
    /**
     * In case the message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<messageUpdateInput, messageUncheckedUpdateInput>
  }

  /**
   * message delete
   */
  export type messageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    /**
     * Filter which message to delete.
     */
    where: messageWhereUniqueInput
  }

  /**
   * message deleteMany
   */
  export type messageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to delete
     */
    where?: messageWhereInput
    /**
     * Limit how many messages to delete.
     */
    limit?: number
  }

  /**
   * message.reservation
   */
  export type message$reservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    where?: reservationWhereInput
  }

  /**
   * message without action
   */
  export type messageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
  }


  /**
   * Model reservation
   */

  export type AggregateReservation = {
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  export type ReservationAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    timeslot_id: number | null
  }

  export type ReservationSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    timeslot_id: number | null
  }

  export type ReservationMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    timeslot_id: number | null
    status: $Enums.ReservationStatus | null
    special_requests: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ReservationMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    restaurant_id: number | null
    timeslot_id: number | null
    status: $Enums.ReservationStatus | null
    special_requests: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ReservationCountAggregateOutputType = {
    id: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status: number
    special_requests: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ReservationAvgAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    timeslot_id?: true
  }

  export type ReservationSumAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    timeslot_id?: true
  }

  export type ReservationMinAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    timeslot_id?: true
    status?: true
    special_requests?: true
    created_at?: true
    updated_at?: true
  }

  export type ReservationMaxAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    timeslot_id?: true
    status?: true
    special_requests?: true
    created_at?: true
    updated_at?: true
  }

  export type ReservationCountAggregateInputType = {
    id?: true
    user_id?: true
    restaurant_id?: true
    timeslot_id?: true
    status?: true
    special_requests?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reservation to aggregate.
     */
    where?: reservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservations to fetch.
     */
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reservations
    **/
    _count?: true | ReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservationMaxAggregateInputType
  }

  export type GetReservationAggregateType<T extends ReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation[P]>
      : GetScalarType<T[P], AggregateReservation[P]>
  }




  export type reservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservationWhereInput
    orderBy?: reservationOrderByWithAggregationInput | reservationOrderByWithAggregationInput[]
    by: ReservationScalarFieldEnum[] | ReservationScalarFieldEnum
    having?: reservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservationCountAggregateInputType | true
    _avg?: ReservationAvgAggregateInputType
    _sum?: ReservationSumAggregateInputType
    _min?: ReservationMinAggregateInputType
    _max?: ReservationMaxAggregateInputType
  }

  export type ReservationGroupByOutputType = {
    id: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status: $Enums.ReservationStatus
    special_requests: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  type GetReservationGroupByPayload<T extends reservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservationGroupByOutputType[P]>
            : GetScalarType<T[P], ReservationGroupByOutputType[P]>
        }
      >
    >


  export type reservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    timeslot_id?: boolean
    status?: boolean
    special_requests?: boolean
    created_at?: boolean
    updated_at?: boolean
    message?: boolean | reservation$messageArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    reservation_has_item?: boolean | reservation$reservation_has_itemArgs<ExtArgs>
    _count?: boolean | ReservationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type reservationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    timeslot_id?: boolean
    status?: boolean
    special_requests?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type reservationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    timeslot_id?: boolean
    status?: boolean
    special_requests?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type reservationSelectScalar = {
    id?: boolean
    user_id?: boolean
    restaurant_id?: boolean
    timeslot_id?: boolean
    status?: boolean
    special_requests?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type reservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "restaurant_id" | "timeslot_id" | "status" | "special_requests" | "created_at" | "updated_at", ExtArgs["result"]["reservation"]>
  export type reservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | reservation$messageArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    reservation_has_item?: boolean | reservation$reservation_has_itemArgs<ExtArgs>
    _count?: boolean | ReservationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type reservationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type reservationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    timeslot?: boolean | timeslotDefaultArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $reservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reservation"
    objects: {
      message: Prisma.$messagePayload<ExtArgs>[]
      restaurant: Prisma.$restaurantPayload<ExtArgs>
      timeslot: Prisma.$timeslotPayload<ExtArgs>
      user: Prisma.$userPayload<ExtArgs>
      reservation_has_item: Prisma.$reservation_has_itemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      restaurant_id: number
      timeslot_id: number
      status: $Enums.ReservationStatus
      special_requests: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["reservation"]>
    composites: {}
  }

  type reservationGetPayload<S extends boolean | null | undefined | reservationDefaultArgs> = $Result.GetResult<Prisma.$reservationPayload, S>

  type reservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservationCountAggregateInputType | true
    }

  export interface reservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reservation'], meta: { name: 'reservation' } }
    /**
     * Find zero or one Reservation that matches the filter.
     * @param {reservationFindUniqueArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reservationFindUniqueArgs>(args: SelectSubset<T, reservationFindUniqueArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reservationFindUniqueOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reservationFindUniqueOrThrowArgs>(args: SelectSubset<T, reservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationFindFirstArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reservationFindFirstArgs>(args?: SelectSubset<T, reservationFindFirstArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationFindFirstOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reservationFindFirstOrThrowArgs>(args?: SelectSubset<T, reservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservations
     * const reservations = await prisma.reservation.findMany()
     * 
     * // Get first 10 Reservations
     * const reservations = await prisma.reservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservationWithIdOnly = await prisma.reservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reservationFindManyArgs>(args?: SelectSubset<T, reservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation.
     * @param {reservationCreateArgs} args - Arguments to create a Reservation.
     * @example
     * // Create one Reservation
     * const Reservation = await prisma.reservation.create({
     *   data: {
     *     // ... data to create a Reservation
     *   }
     * })
     * 
     */
    create<T extends reservationCreateArgs>(args: SelectSubset<T, reservationCreateArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservations.
     * @param {reservationCreateManyArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reservationCreateManyArgs>(args?: SelectSubset<T, reservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservations and returns the data saved in the database.
     * @param {reservationCreateManyAndReturnArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reservationCreateManyAndReturnArgs>(args?: SelectSubset<T, reservationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservation.
     * @param {reservationDeleteArgs} args - Arguments to delete one Reservation.
     * @example
     * // Delete one Reservation
     * const Reservation = await prisma.reservation.delete({
     *   where: {
     *     // ... filter to delete one Reservation
     *   }
     * })
     * 
     */
    delete<T extends reservationDeleteArgs>(args: SelectSubset<T, reservationDeleteArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation.
     * @param {reservationUpdateArgs} args - Arguments to update one Reservation.
     * @example
     * // Update one Reservation
     * const reservation = await prisma.reservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reservationUpdateArgs>(args: SelectSubset<T, reservationUpdateArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservations.
     * @param {reservationDeleteManyArgs} args - Arguments to filter Reservations to delete.
     * @example
     * // Delete a few Reservations
     * const { count } = await prisma.reservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reservationDeleteManyArgs>(args?: SelectSubset<T, reservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reservationUpdateManyArgs>(args: SelectSubset<T, reservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations and returns the data updated in the database.
     * @param {reservationUpdateManyAndReturnArgs} args - Arguments to update many Reservations.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reservationUpdateManyAndReturnArgs>(args: SelectSubset<T, reservationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservation.
     * @param {reservationUpsertArgs} args - Arguments to update or create a Reservation.
     * @example
     * // Update or create a Reservation
     * const reservation = await prisma.reservation.upsert({
     *   create: {
     *     // ... data to create a Reservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation we want to update
     *   }
     * })
     */
    upsert<T extends reservationUpsertArgs>(args: SelectSubset<T, reservationUpsertArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationCountArgs} args - Arguments to filter Reservations to count.
     * @example
     * // Count the number of Reservations
     * const count = await prisma.reservation.count({
     *   where: {
     *     // ... the filter for the Reservations we want to count
     *   }
     * })
    **/
    count<T extends reservationCountArgs>(
      args?: Subset<T, reservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservationAggregateArgs>(args: Subset<T, ReservationAggregateArgs>): Prisma.PrismaPromise<GetReservationAggregateType<T>>

    /**
     * Group by Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reservationGroupByArgs['orderBy'] }
        : { orderBy?: reservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reservation model
   */
  readonly fields: reservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    message<T extends reservation$messageArgs<ExtArgs> = {}>(args?: Subset<T, reservation$messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    restaurant<T extends restaurantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, restaurantDefaultArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    timeslot<T extends timeslotDefaultArgs<ExtArgs> = {}>(args?: Subset<T, timeslotDefaultArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservation_has_item<T extends reservation$reservation_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, reservation$reservation_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reservation model
   */
  interface reservationFieldRefs {
    readonly id: FieldRef<"reservation", 'Int'>
    readonly user_id: FieldRef<"reservation", 'Int'>
    readonly restaurant_id: FieldRef<"reservation", 'Int'>
    readonly timeslot_id: FieldRef<"reservation", 'Int'>
    readonly status: FieldRef<"reservation", 'ReservationStatus'>
    readonly special_requests: FieldRef<"reservation", 'String'>
    readonly created_at: FieldRef<"reservation", 'DateTime'>
    readonly updated_at: FieldRef<"reservation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reservation findUnique
   */
  export type reservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter, which reservation to fetch.
     */
    where: reservationWhereUniqueInput
  }

  /**
   * reservation findUniqueOrThrow
   */
  export type reservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter, which reservation to fetch.
     */
    where: reservationWhereUniqueInput
  }

  /**
   * reservation findFirst
   */
  export type reservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter, which reservation to fetch.
     */
    where?: reservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservations to fetch.
     */
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reservations.
     */
    cursor?: reservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * reservation findFirstOrThrow
   */
  export type reservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter, which reservation to fetch.
     */
    where?: reservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservations to fetch.
     */
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reservations.
     */
    cursor?: reservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * reservation findMany
   */
  export type reservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter, which reservations to fetch.
     */
    where?: reservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservations to fetch.
     */
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reservations.
     */
    cursor?: reservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservations.
     */
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * reservation create
   */
  export type reservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * The data needed to create a reservation.
     */
    data: XOR<reservationCreateInput, reservationUncheckedCreateInput>
  }

  /**
   * reservation createMany
   */
  export type reservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reservations.
     */
    data: reservationCreateManyInput | reservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reservation createManyAndReturn
   */
  export type reservationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * The data used to create many reservations.
     */
    data: reservationCreateManyInput | reservationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reservation update
   */
  export type reservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * The data needed to update a reservation.
     */
    data: XOR<reservationUpdateInput, reservationUncheckedUpdateInput>
    /**
     * Choose, which reservation to update.
     */
    where: reservationWhereUniqueInput
  }

  /**
   * reservation updateMany
   */
  export type reservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reservations.
     */
    data: XOR<reservationUpdateManyMutationInput, reservationUncheckedUpdateManyInput>
    /**
     * Filter which reservations to update
     */
    where?: reservationWhereInput
    /**
     * Limit how many reservations to update.
     */
    limit?: number
  }

  /**
   * reservation updateManyAndReturn
   */
  export type reservationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * The data used to update reservations.
     */
    data: XOR<reservationUpdateManyMutationInput, reservationUncheckedUpdateManyInput>
    /**
     * Filter which reservations to update
     */
    where?: reservationWhereInput
    /**
     * Limit how many reservations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reservation upsert
   */
  export type reservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * The filter to search for the reservation to update in case it exists.
     */
    where: reservationWhereUniqueInput
    /**
     * In case the reservation found by the `where` argument doesn't exist, create a new reservation with this data.
     */
    create: XOR<reservationCreateInput, reservationUncheckedCreateInput>
    /**
     * In case the reservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reservationUpdateInput, reservationUncheckedUpdateInput>
  }

  /**
   * reservation delete
   */
  export type reservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    /**
     * Filter which reservation to delete.
     */
    where: reservationWhereUniqueInput
  }

  /**
   * reservation deleteMany
   */
  export type reservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reservations to delete
     */
    where?: reservationWhereInput
    /**
     * Limit how many reservations to delete.
     */
    limit?: number
  }

  /**
   * reservation.message
   */
  export type reservation$messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    where?: messageWhereInput
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    cursor?: messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * reservation.reservation_has_item
   */
  export type reservation$reservation_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    where?: reservation_has_itemWhereInput
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    cursor?: reservation_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Reservation_has_itemScalarFieldEnum | Reservation_has_itemScalarFieldEnum[]
  }

  /**
   * reservation without action
   */
  export type reservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
  }


  /**
   * Model reservation_has_item
   */

  export type AggregateReservation_has_item = {
    _count: Reservation_has_itemCountAggregateOutputType | null
    _avg: Reservation_has_itemAvgAggregateOutputType | null
    _sum: Reservation_has_itemSumAggregateOutputType | null
    _min: Reservation_has_itemMinAggregateOutputType | null
    _max: Reservation_has_itemMaxAggregateOutputType | null
  }

  export type Reservation_has_itemAvgAggregateOutputType = {
    reservation_id: number | null
    item_id: number | null
    quantity: number | null
    item_price: Decimal | null
  }

  export type Reservation_has_itemSumAggregateOutputType = {
    reservation_id: number | null
    item_id: number | null
    quantity: number | null
    item_price: Decimal | null
  }

  export type Reservation_has_itemMinAggregateOutputType = {
    reservation_id: number | null
    item_id: number | null
    quantity: number | null
    item_price: Decimal | null
  }

  export type Reservation_has_itemMaxAggregateOutputType = {
    reservation_id: number | null
    item_id: number | null
    quantity: number | null
    item_price: Decimal | null
  }

  export type Reservation_has_itemCountAggregateOutputType = {
    reservation_id: number
    item_id: number
    quantity: number
    item_price: number
    _all: number
  }


  export type Reservation_has_itemAvgAggregateInputType = {
    reservation_id?: true
    item_id?: true
    quantity?: true
    item_price?: true
  }

  export type Reservation_has_itemSumAggregateInputType = {
    reservation_id?: true
    item_id?: true
    quantity?: true
    item_price?: true
  }

  export type Reservation_has_itemMinAggregateInputType = {
    reservation_id?: true
    item_id?: true
    quantity?: true
    item_price?: true
  }

  export type Reservation_has_itemMaxAggregateInputType = {
    reservation_id?: true
    item_id?: true
    quantity?: true
    item_price?: true
  }

  export type Reservation_has_itemCountAggregateInputType = {
    reservation_id?: true
    item_id?: true
    quantity?: true
    item_price?: true
    _all?: true
  }

  export type Reservation_has_itemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reservation_has_item to aggregate.
     */
    where?: reservation_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservation_has_items to fetch.
     */
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reservation_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservation_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservation_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reservation_has_items
    **/
    _count?: true | Reservation_has_itemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Reservation_has_itemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Reservation_has_itemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Reservation_has_itemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Reservation_has_itemMaxAggregateInputType
  }

  export type GetReservation_has_itemAggregateType<T extends Reservation_has_itemAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation_has_item]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation_has_item[P]>
      : GetScalarType<T[P], AggregateReservation_has_item[P]>
  }




  export type reservation_has_itemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reservation_has_itemWhereInput
    orderBy?: reservation_has_itemOrderByWithAggregationInput | reservation_has_itemOrderByWithAggregationInput[]
    by: Reservation_has_itemScalarFieldEnum[] | Reservation_has_itemScalarFieldEnum
    having?: reservation_has_itemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Reservation_has_itemCountAggregateInputType | true
    _avg?: Reservation_has_itemAvgAggregateInputType
    _sum?: Reservation_has_itemSumAggregateInputType
    _min?: Reservation_has_itemMinAggregateInputType
    _max?: Reservation_has_itemMaxAggregateInputType
  }

  export type Reservation_has_itemGroupByOutputType = {
    reservation_id: number
    item_id: number
    quantity: number
    item_price: Decimal
    _count: Reservation_has_itemCountAggregateOutputType | null
    _avg: Reservation_has_itemAvgAggregateOutputType | null
    _sum: Reservation_has_itemSumAggregateOutputType | null
    _min: Reservation_has_itemMinAggregateOutputType | null
    _max: Reservation_has_itemMaxAggregateOutputType | null
  }

  type GetReservation_has_itemGroupByPayload<T extends reservation_has_itemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Reservation_has_itemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Reservation_has_itemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Reservation_has_itemGroupByOutputType[P]>
            : GetScalarType<T[P], Reservation_has_itemGroupByOutputType[P]>
        }
      >
    >


  export type reservation_has_itemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservation_id?: boolean
    item_id?: boolean
    quantity?: boolean
    item_price?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation_has_item"]>

  export type reservation_has_itemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservation_id?: boolean
    item_id?: boolean
    quantity?: boolean
    item_price?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation_has_item"]>

  export type reservation_has_itemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reservation_id?: boolean
    item_id?: boolean
    quantity?: boolean
    item_price?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation_has_item"]>

  export type reservation_has_itemSelectScalar = {
    reservation_id?: boolean
    item_id?: boolean
    quantity?: boolean
    item_price?: boolean
  }

  export type reservation_has_itemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"reservation_id" | "item_id" | "quantity" | "item_price", ExtArgs["result"]["reservation_has_item"]>
  export type reservation_has_itemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }
  export type reservation_has_itemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }
  export type reservation_has_itemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    reservation?: boolean | reservationDefaultArgs<ExtArgs>
  }

  export type $reservation_has_itemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reservation_has_item"
    objects: {
      item: Prisma.$itemPayload<ExtArgs>
      reservation: Prisma.$reservationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      reservation_id: number
      item_id: number
      quantity: number
      item_price: Prisma.Decimal
    }, ExtArgs["result"]["reservation_has_item"]>
    composites: {}
  }

  type reservation_has_itemGetPayload<S extends boolean | null | undefined | reservation_has_itemDefaultArgs> = $Result.GetResult<Prisma.$reservation_has_itemPayload, S>

  type reservation_has_itemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reservation_has_itemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Reservation_has_itemCountAggregateInputType | true
    }

  export interface reservation_has_itemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reservation_has_item'], meta: { name: 'reservation_has_item' } }
    /**
     * Find zero or one Reservation_has_item that matches the filter.
     * @param {reservation_has_itemFindUniqueArgs} args - Arguments to find a Reservation_has_item
     * @example
     * // Get one Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reservation_has_itemFindUniqueArgs>(args: SelectSubset<T, reservation_has_itemFindUniqueArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation_has_item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reservation_has_itemFindUniqueOrThrowArgs} args - Arguments to find a Reservation_has_item
     * @example
     * // Get one Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reservation_has_itemFindUniqueOrThrowArgs>(args: SelectSubset<T, reservation_has_itemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation_has_item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemFindFirstArgs} args - Arguments to find a Reservation_has_item
     * @example
     * // Get one Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reservation_has_itemFindFirstArgs>(args?: SelectSubset<T, reservation_has_itemFindFirstArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation_has_item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemFindFirstOrThrowArgs} args - Arguments to find a Reservation_has_item
     * @example
     * // Get one Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reservation_has_itemFindFirstOrThrowArgs>(args?: SelectSubset<T, reservation_has_itemFindFirstOrThrowArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservation_has_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservation_has_items
     * const reservation_has_items = await prisma.reservation_has_item.findMany()
     * 
     * // Get first 10 Reservation_has_items
     * const reservation_has_items = await prisma.reservation_has_item.findMany({ take: 10 })
     * 
     * // Only select the `reservation_id`
     * const reservation_has_itemWithReservation_idOnly = await prisma.reservation_has_item.findMany({ select: { reservation_id: true } })
     * 
     */
    findMany<T extends reservation_has_itemFindManyArgs>(args?: SelectSubset<T, reservation_has_itemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation_has_item.
     * @param {reservation_has_itemCreateArgs} args - Arguments to create a Reservation_has_item.
     * @example
     * // Create one Reservation_has_item
     * const Reservation_has_item = await prisma.reservation_has_item.create({
     *   data: {
     *     // ... data to create a Reservation_has_item
     *   }
     * })
     * 
     */
    create<T extends reservation_has_itemCreateArgs>(args: SelectSubset<T, reservation_has_itemCreateArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservation_has_items.
     * @param {reservation_has_itemCreateManyArgs} args - Arguments to create many Reservation_has_items.
     * @example
     * // Create many Reservation_has_items
     * const reservation_has_item = await prisma.reservation_has_item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reservation_has_itemCreateManyArgs>(args?: SelectSubset<T, reservation_has_itemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservation_has_items and returns the data saved in the database.
     * @param {reservation_has_itemCreateManyAndReturnArgs} args - Arguments to create many Reservation_has_items.
     * @example
     * // Create many Reservation_has_items
     * const reservation_has_item = await prisma.reservation_has_item.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservation_has_items and only return the `reservation_id`
     * const reservation_has_itemWithReservation_idOnly = await prisma.reservation_has_item.createManyAndReturn({
     *   select: { reservation_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reservation_has_itemCreateManyAndReturnArgs>(args?: SelectSubset<T, reservation_has_itemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservation_has_item.
     * @param {reservation_has_itemDeleteArgs} args - Arguments to delete one Reservation_has_item.
     * @example
     * // Delete one Reservation_has_item
     * const Reservation_has_item = await prisma.reservation_has_item.delete({
     *   where: {
     *     // ... filter to delete one Reservation_has_item
     *   }
     * })
     * 
     */
    delete<T extends reservation_has_itemDeleteArgs>(args: SelectSubset<T, reservation_has_itemDeleteArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation_has_item.
     * @param {reservation_has_itemUpdateArgs} args - Arguments to update one Reservation_has_item.
     * @example
     * // Update one Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reservation_has_itemUpdateArgs>(args: SelectSubset<T, reservation_has_itemUpdateArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservation_has_items.
     * @param {reservation_has_itemDeleteManyArgs} args - Arguments to filter Reservation_has_items to delete.
     * @example
     * // Delete a few Reservation_has_items
     * const { count } = await prisma.reservation_has_item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reservation_has_itemDeleteManyArgs>(args?: SelectSubset<T, reservation_has_itemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservation_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservation_has_items
     * const reservation_has_item = await prisma.reservation_has_item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reservation_has_itemUpdateManyArgs>(args: SelectSubset<T, reservation_has_itemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservation_has_items and returns the data updated in the database.
     * @param {reservation_has_itemUpdateManyAndReturnArgs} args - Arguments to update many Reservation_has_items.
     * @example
     * // Update many Reservation_has_items
     * const reservation_has_item = await prisma.reservation_has_item.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservation_has_items and only return the `reservation_id`
     * const reservation_has_itemWithReservation_idOnly = await prisma.reservation_has_item.updateManyAndReturn({
     *   select: { reservation_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reservation_has_itemUpdateManyAndReturnArgs>(args: SelectSubset<T, reservation_has_itemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservation_has_item.
     * @param {reservation_has_itemUpsertArgs} args - Arguments to update or create a Reservation_has_item.
     * @example
     * // Update or create a Reservation_has_item
     * const reservation_has_item = await prisma.reservation_has_item.upsert({
     *   create: {
     *     // ... data to create a Reservation_has_item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation_has_item we want to update
     *   }
     * })
     */
    upsert<T extends reservation_has_itemUpsertArgs>(args: SelectSubset<T, reservation_has_itemUpsertArgs<ExtArgs>>): Prisma__reservation_has_itemClient<$Result.GetResult<Prisma.$reservation_has_itemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservation_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemCountArgs} args - Arguments to filter Reservation_has_items to count.
     * @example
     * // Count the number of Reservation_has_items
     * const count = await prisma.reservation_has_item.count({
     *   where: {
     *     // ... the filter for the Reservation_has_items we want to count
     *   }
     * })
    **/
    count<T extends reservation_has_itemCountArgs>(
      args?: Subset<T, reservation_has_itemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Reservation_has_itemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reservation_has_itemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Reservation_has_itemAggregateArgs>(args: Subset<T, Reservation_has_itemAggregateArgs>): Prisma.PrismaPromise<GetReservation_has_itemAggregateType<T>>

    /**
     * Group by Reservation_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reservation_has_itemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reservation_has_itemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reservation_has_itemGroupByArgs['orderBy'] }
        : { orderBy?: reservation_has_itemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reservation_has_itemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservation_has_itemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reservation_has_item model
   */
  readonly fields: reservation_has_itemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reservation_has_item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reservation_has_itemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends itemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemDefaultArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservation<T extends reservationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, reservationDefaultArgs<ExtArgs>>): Prisma__reservationClient<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reservation_has_item model
   */
  interface reservation_has_itemFieldRefs {
    readonly reservation_id: FieldRef<"reservation_has_item", 'Int'>
    readonly item_id: FieldRef<"reservation_has_item", 'Int'>
    readonly quantity: FieldRef<"reservation_has_item", 'Int'>
    readonly item_price: FieldRef<"reservation_has_item", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * reservation_has_item findUnique
   */
  export type reservation_has_itemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which reservation_has_item to fetch.
     */
    where: reservation_has_itemWhereUniqueInput
  }

  /**
   * reservation_has_item findUniqueOrThrow
   */
  export type reservation_has_itemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which reservation_has_item to fetch.
     */
    where: reservation_has_itemWhereUniqueInput
  }

  /**
   * reservation_has_item findFirst
   */
  export type reservation_has_itemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which reservation_has_item to fetch.
     */
    where?: reservation_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservation_has_items to fetch.
     */
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reservation_has_items.
     */
    cursor?: reservation_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservation_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservation_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reservation_has_items.
     */
    distinct?: Reservation_has_itemScalarFieldEnum | Reservation_has_itemScalarFieldEnum[]
  }

  /**
   * reservation_has_item findFirstOrThrow
   */
  export type reservation_has_itemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which reservation_has_item to fetch.
     */
    where?: reservation_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservation_has_items to fetch.
     */
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reservation_has_items.
     */
    cursor?: reservation_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservation_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservation_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reservation_has_items.
     */
    distinct?: Reservation_has_itemScalarFieldEnum | Reservation_has_itemScalarFieldEnum[]
  }

  /**
   * reservation_has_item findMany
   */
  export type reservation_has_itemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which reservation_has_items to fetch.
     */
    where?: reservation_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reservation_has_items to fetch.
     */
    orderBy?: reservation_has_itemOrderByWithRelationInput | reservation_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reservation_has_items.
     */
    cursor?: reservation_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reservation_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reservation_has_items.
     */
    skip?: number
    distinct?: Reservation_has_itemScalarFieldEnum | Reservation_has_itemScalarFieldEnum[]
  }

  /**
   * reservation_has_item create
   */
  export type reservation_has_itemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to create a reservation_has_item.
     */
    data: XOR<reservation_has_itemCreateInput, reservation_has_itemUncheckedCreateInput>
  }

  /**
   * reservation_has_item createMany
   */
  export type reservation_has_itemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reservation_has_items.
     */
    data: reservation_has_itemCreateManyInput | reservation_has_itemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reservation_has_item createManyAndReturn
   */
  export type reservation_has_itemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * The data used to create many reservation_has_items.
     */
    data: reservation_has_itemCreateManyInput | reservation_has_itemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reservation_has_item update
   */
  export type reservation_has_itemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to update a reservation_has_item.
     */
    data: XOR<reservation_has_itemUpdateInput, reservation_has_itemUncheckedUpdateInput>
    /**
     * Choose, which reservation_has_item to update.
     */
    where: reservation_has_itemWhereUniqueInput
  }

  /**
   * reservation_has_item updateMany
   */
  export type reservation_has_itemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reservation_has_items.
     */
    data: XOR<reservation_has_itemUpdateManyMutationInput, reservation_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which reservation_has_items to update
     */
    where?: reservation_has_itemWhereInput
    /**
     * Limit how many reservation_has_items to update.
     */
    limit?: number
  }

  /**
   * reservation_has_item updateManyAndReturn
   */
  export type reservation_has_itemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * The data used to update reservation_has_items.
     */
    data: XOR<reservation_has_itemUpdateManyMutationInput, reservation_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which reservation_has_items to update
     */
    where?: reservation_has_itemWhereInput
    /**
     * Limit how many reservation_has_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reservation_has_item upsert
   */
  export type reservation_has_itemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * The filter to search for the reservation_has_item to update in case it exists.
     */
    where: reservation_has_itemWhereUniqueInput
    /**
     * In case the reservation_has_item found by the `where` argument doesn't exist, create a new reservation_has_item with this data.
     */
    create: XOR<reservation_has_itemCreateInput, reservation_has_itemUncheckedCreateInput>
    /**
     * In case the reservation_has_item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reservation_has_itemUpdateInput, reservation_has_itemUncheckedUpdateInput>
  }

  /**
   * reservation_has_item delete
   */
  export type reservation_has_itemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
    /**
     * Filter which reservation_has_item to delete.
     */
    where: reservation_has_itemWhereUniqueInput
  }

  /**
   * reservation_has_item deleteMany
   */
  export type reservation_has_itemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reservation_has_items to delete
     */
    where?: reservation_has_itemWhereInput
    /**
     * Limit how many reservation_has_items to delete.
     */
    limit?: number
  }

  /**
   * reservation_has_item without action
   */
  export type reservation_has_itemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation_has_item
     */
    select?: reservation_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation_has_item
     */
    omit?: reservation_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservation_has_itemInclude<ExtArgs> | null
  }


  /**
   * Model restaurant
   */

  export type AggregateRestaurant = {
    _count: RestaurantCountAggregateOutputType | null
    _avg: RestaurantAvgAggregateOutputType | null
    _sum: RestaurantSumAggregateOutputType | null
    _min: RestaurantMinAggregateOutputType | null
    _max: RestaurantMaxAggregateOutputType | null
  }

  export type RestaurantAvgAggregateOutputType = {
    id: number | null
    owner_id: number | null
  }

  export type RestaurantSumAggregateOutputType = {
    id: number | null
    owner_id: number | null
  }

  export type RestaurantMinAggregateOutputType = {
    id: number | null
    owner_id: number | null
    name: string | null
    address: string | null
    opening_hours: string | null
    genre: string | null
    siret: string | null
    description: string | null
    image_url: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RestaurantMaxAggregateOutputType = {
    id: number | null
    owner_id: number | null
    name: string | null
    address: string | null
    opening_hours: string | null
    genre: string | null
    siret: string | null
    description: string | null
    image_url: string | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RestaurantCountAggregateOutputType = {
    id: number
    owner_id: number
    name: number
    address: number
    opening_hours: number
    genre: number
    siret: number
    description: number
    image_url: number
    is_active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type RestaurantAvgAggregateInputType = {
    id?: true
    owner_id?: true
  }

  export type RestaurantSumAggregateInputType = {
    id?: true
    owner_id?: true
  }

  export type RestaurantMinAggregateInputType = {
    id?: true
    owner_id?: true
    name?: true
    address?: true
    opening_hours?: true
    genre?: true
    siret?: true
    description?: true
    image_url?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type RestaurantMaxAggregateInputType = {
    id?: true
    owner_id?: true
    name?: true
    address?: true
    opening_hours?: true
    genre?: true
    siret?: true
    description?: true
    image_url?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type RestaurantCountAggregateInputType = {
    id?: true
    owner_id?: true
    name?: true
    address?: true
    opening_hours?: true
    genre?: true
    siret?: true
    description?: true
    image_url?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type RestaurantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which restaurant to aggregate.
     */
    where?: restaurantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurants to fetch.
     */
    orderBy?: restaurantOrderByWithRelationInput | restaurantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: restaurantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned restaurants
    **/
    _count?: true | RestaurantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RestaurantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RestaurantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RestaurantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RestaurantMaxAggregateInputType
  }

  export type GetRestaurantAggregateType<T extends RestaurantAggregateArgs> = {
        [P in keyof T & keyof AggregateRestaurant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRestaurant[P]>
      : GetScalarType<T[P], AggregateRestaurant[P]>
  }




  export type restaurantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: restaurantWhereInput
    orderBy?: restaurantOrderByWithAggregationInput | restaurantOrderByWithAggregationInput[]
    by: RestaurantScalarFieldEnum[] | RestaurantScalarFieldEnum
    having?: restaurantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RestaurantCountAggregateInputType | true
    _avg?: RestaurantAvgAggregateInputType
    _sum?: RestaurantSumAggregateInputType
    _min?: RestaurantMinAggregateInputType
    _max?: RestaurantMaxAggregateInputType
  }

  export type RestaurantGroupByOutputType = {
    id: number
    owner_id: number
    name: string
    address: string | null
    opening_hours: string | null
    genre: string | null
    siret: string
    description: string | null
    image_url: string
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: RestaurantCountAggregateOutputType | null
    _avg: RestaurantAvgAggregateOutputType | null
    _sum: RestaurantSumAggregateOutputType | null
    _min: RestaurantMinAggregateOutputType | null
    _max: RestaurantMaxAggregateOutputType | null
  }

  type GetRestaurantGroupByPayload<T extends restaurantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RestaurantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RestaurantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RestaurantGroupByOutputType[P]>
            : GetScalarType<T[P], RestaurantGroupByOutputType[P]>
        }
      >
    >


  export type restaurantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    owner_id?: boolean
    name?: boolean
    address?: boolean
    opening_hours?: boolean
    genre?: boolean
    siret?: boolean
    description?: boolean
    image_url?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    menu?: boolean | restaurant$menuArgs<ExtArgs>
    message?: boolean | restaurant$messageArgs<ExtArgs>
    reservation?: boolean | restaurant$reservationArgs<ExtArgs>
    restaurant_has_item?: boolean | restaurant$restaurant_has_itemArgs<ExtArgs>
    timeslot?: boolean | restaurant$timeslotArgs<ExtArgs>
    owner?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | RestaurantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant"]>

  export type restaurantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    owner_id?: boolean
    name?: boolean
    address?: boolean
    opening_hours?: boolean
    genre?: boolean
    siret?: boolean
    description?: boolean
    image_url?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    owner?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant"]>

  export type restaurantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    owner_id?: boolean
    name?: boolean
    address?: boolean
    opening_hours?: boolean
    genre?: boolean
    siret?: boolean
    description?: boolean
    image_url?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    owner?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant"]>

  export type restaurantSelectScalar = {
    id?: boolean
    owner_id?: boolean
    name?: boolean
    address?: boolean
    opening_hours?: boolean
    genre?: boolean
    siret?: boolean
    description?: boolean
    image_url?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type restaurantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "owner_id" | "name" | "address" | "opening_hours" | "genre" | "siret" | "description" | "image_url" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["restaurant"]>
  export type restaurantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menu?: boolean | restaurant$menuArgs<ExtArgs>
    message?: boolean | restaurant$messageArgs<ExtArgs>
    reservation?: boolean | restaurant$reservationArgs<ExtArgs>
    restaurant_has_item?: boolean | restaurant$restaurant_has_itemArgs<ExtArgs>
    timeslot?: boolean | restaurant$timeslotArgs<ExtArgs>
    owner?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | RestaurantCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type restaurantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | userDefaultArgs<ExtArgs>
  }
  export type restaurantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $restaurantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "restaurant"
    objects: {
      menu: Prisma.$menuPayload<ExtArgs>[]
      message: Prisma.$messagePayload<ExtArgs>[]
      reservation: Prisma.$reservationPayload<ExtArgs>[]
      restaurant_has_item: Prisma.$restaurant_has_itemPayload<ExtArgs>[]
      timeslot: Prisma.$timeslotPayload<ExtArgs>[]
      owner: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      owner_id: number
      name: string
      address: string | null
      opening_hours: string | null
      genre: string | null
      siret: string
      description: string | null
      image_url: string
      is_active: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["restaurant"]>
    composites: {}
  }

  type restaurantGetPayload<S extends boolean | null | undefined | restaurantDefaultArgs> = $Result.GetResult<Prisma.$restaurantPayload, S>

  type restaurantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<restaurantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RestaurantCountAggregateInputType | true
    }

  export interface restaurantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['restaurant'], meta: { name: 'restaurant' } }
    /**
     * Find zero or one Restaurant that matches the filter.
     * @param {restaurantFindUniqueArgs} args - Arguments to find a Restaurant
     * @example
     * // Get one Restaurant
     * const restaurant = await prisma.restaurant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends restaurantFindUniqueArgs>(args: SelectSubset<T, restaurantFindUniqueArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Restaurant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {restaurantFindUniqueOrThrowArgs} args - Arguments to find a Restaurant
     * @example
     * // Get one Restaurant
     * const restaurant = await prisma.restaurant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends restaurantFindUniqueOrThrowArgs>(args: SelectSubset<T, restaurantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantFindFirstArgs} args - Arguments to find a Restaurant
     * @example
     * // Get one Restaurant
     * const restaurant = await prisma.restaurant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends restaurantFindFirstArgs>(args?: SelectSubset<T, restaurantFindFirstArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantFindFirstOrThrowArgs} args - Arguments to find a Restaurant
     * @example
     * // Get one Restaurant
     * const restaurant = await prisma.restaurant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends restaurantFindFirstOrThrowArgs>(args?: SelectSubset<T, restaurantFindFirstOrThrowArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Restaurants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Restaurants
     * const restaurants = await prisma.restaurant.findMany()
     * 
     * // Get first 10 Restaurants
     * const restaurants = await prisma.restaurant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const restaurantWithIdOnly = await prisma.restaurant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends restaurantFindManyArgs>(args?: SelectSubset<T, restaurantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Restaurant.
     * @param {restaurantCreateArgs} args - Arguments to create a Restaurant.
     * @example
     * // Create one Restaurant
     * const Restaurant = await prisma.restaurant.create({
     *   data: {
     *     // ... data to create a Restaurant
     *   }
     * })
     * 
     */
    create<T extends restaurantCreateArgs>(args: SelectSubset<T, restaurantCreateArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Restaurants.
     * @param {restaurantCreateManyArgs} args - Arguments to create many Restaurants.
     * @example
     * // Create many Restaurants
     * const restaurant = await prisma.restaurant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends restaurantCreateManyArgs>(args?: SelectSubset<T, restaurantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Restaurants and returns the data saved in the database.
     * @param {restaurantCreateManyAndReturnArgs} args - Arguments to create many Restaurants.
     * @example
     * // Create many Restaurants
     * const restaurant = await prisma.restaurant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Restaurants and only return the `id`
     * const restaurantWithIdOnly = await prisma.restaurant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends restaurantCreateManyAndReturnArgs>(args?: SelectSubset<T, restaurantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Restaurant.
     * @param {restaurantDeleteArgs} args - Arguments to delete one Restaurant.
     * @example
     * // Delete one Restaurant
     * const Restaurant = await prisma.restaurant.delete({
     *   where: {
     *     // ... filter to delete one Restaurant
     *   }
     * })
     * 
     */
    delete<T extends restaurantDeleteArgs>(args: SelectSubset<T, restaurantDeleteArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Restaurant.
     * @param {restaurantUpdateArgs} args - Arguments to update one Restaurant.
     * @example
     * // Update one Restaurant
     * const restaurant = await prisma.restaurant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends restaurantUpdateArgs>(args: SelectSubset<T, restaurantUpdateArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Restaurants.
     * @param {restaurantDeleteManyArgs} args - Arguments to filter Restaurants to delete.
     * @example
     * // Delete a few Restaurants
     * const { count } = await prisma.restaurant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends restaurantDeleteManyArgs>(args?: SelectSubset<T, restaurantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Restaurants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Restaurants
     * const restaurant = await prisma.restaurant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends restaurantUpdateManyArgs>(args: SelectSubset<T, restaurantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Restaurants and returns the data updated in the database.
     * @param {restaurantUpdateManyAndReturnArgs} args - Arguments to update many Restaurants.
     * @example
     * // Update many Restaurants
     * const restaurant = await prisma.restaurant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Restaurants and only return the `id`
     * const restaurantWithIdOnly = await prisma.restaurant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends restaurantUpdateManyAndReturnArgs>(args: SelectSubset<T, restaurantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Restaurant.
     * @param {restaurantUpsertArgs} args - Arguments to update or create a Restaurant.
     * @example
     * // Update or create a Restaurant
     * const restaurant = await prisma.restaurant.upsert({
     *   create: {
     *     // ... data to create a Restaurant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Restaurant we want to update
     *   }
     * })
     */
    upsert<T extends restaurantUpsertArgs>(args: SelectSubset<T, restaurantUpsertArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Restaurants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantCountArgs} args - Arguments to filter Restaurants to count.
     * @example
     * // Count the number of Restaurants
     * const count = await prisma.restaurant.count({
     *   where: {
     *     // ... the filter for the Restaurants we want to count
     *   }
     * })
    **/
    count<T extends restaurantCountArgs>(
      args?: Subset<T, restaurantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RestaurantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Restaurant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestaurantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RestaurantAggregateArgs>(args: Subset<T, RestaurantAggregateArgs>): Prisma.PrismaPromise<GetRestaurantAggregateType<T>>

    /**
     * Group by Restaurant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends restaurantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: restaurantGroupByArgs['orderBy'] }
        : { orderBy?: restaurantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, restaurantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRestaurantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the restaurant model
   */
  readonly fields: restaurantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for restaurant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__restaurantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menu<T extends restaurant$menuArgs<ExtArgs> = {}>(args?: Subset<T, restaurant$menuArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$menuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    message<T extends restaurant$messageArgs<ExtArgs> = {}>(args?: Subset<T, restaurant$messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservation<T extends restaurant$reservationArgs<ExtArgs> = {}>(args?: Subset<T, restaurant$reservationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    restaurant_has_item<T extends restaurant$restaurant_has_itemArgs<ExtArgs> = {}>(args?: Subset<T, restaurant$restaurant_has_itemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    timeslot<T extends restaurant$timeslotArgs<ExtArgs> = {}>(args?: Subset<T, restaurant$timeslotArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    owner<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the restaurant model
   */
  interface restaurantFieldRefs {
    readonly id: FieldRef<"restaurant", 'Int'>
    readonly owner_id: FieldRef<"restaurant", 'Int'>
    readonly name: FieldRef<"restaurant", 'String'>
    readonly address: FieldRef<"restaurant", 'String'>
    readonly opening_hours: FieldRef<"restaurant", 'String'>
    readonly genre: FieldRef<"restaurant", 'String'>
    readonly siret: FieldRef<"restaurant", 'String'>
    readonly description: FieldRef<"restaurant", 'String'>
    readonly image_url: FieldRef<"restaurant", 'String'>
    readonly is_active: FieldRef<"restaurant", 'Boolean'>
    readonly created_at: FieldRef<"restaurant", 'DateTime'>
    readonly updated_at: FieldRef<"restaurant", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * restaurant findUnique
   */
  export type restaurantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter, which restaurant to fetch.
     */
    where: restaurantWhereUniqueInput
  }

  /**
   * restaurant findUniqueOrThrow
   */
  export type restaurantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter, which restaurant to fetch.
     */
    where: restaurantWhereUniqueInput
  }

  /**
   * restaurant findFirst
   */
  export type restaurantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter, which restaurant to fetch.
     */
    where?: restaurantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurants to fetch.
     */
    orderBy?: restaurantOrderByWithRelationInput | restaurantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for restaurants.
     */
    cursor?: restaurantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of restaurants.
     */
    distinct?: RestaurantScalarFieldEnum | RestaurantScalarFieldEnum[]
  }

  /**
   * restaurant findFirstOrThrow
   */
  export type restaurantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter, which restaurant to fetch.
     */
    where?: restaurantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurants to fetch.
     */
    orderBy?: restaurantOrderByWithRelationInput | restaurantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for restaurants.
     */
    cursor?: restaurantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of restaurants.
     */
    distinct?: RestaurantScalarFieldEnum | RestaurantScalarFieldEnum[]
  }

  /**
   * restaurant findMany
   */
  export type restaurantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter, which restaurants to fetch.
     */
    where?: restaurantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurants to fetch.
     */
    orderBy?: restaurantOrderByWithRelationInput | restaurantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing restaurants.
     */
    cursor?: restaurantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurants.
     */
    skip?: number
    distinct?: RestaurantScalarFieldEnum | RestaurantScalarFieldEnum[]
  }

  /**
   * restaurant create
   */
  export type restaurantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * The data needed to create a restaurant.
     */
    data: XOR<restaurantCreateInput, restaurantUncheckedCreateInput>
  }

  /**
   * restaurant createMany
   */
  export type restaurantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many restaurants.
     */
    data: restaurantCreateManyInput | restaurantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * restaurant createManyAndReturn
   */
  export type restaurantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * The data used to create many restaurants.
     */
    data: restaurantCreateManyInput | restaurantCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * restaurant update
   */
  export type restaurantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * The data needed to update a restaurant.
     */
    data: XOR<restaurantUpdateInput, restaurantUncheckedUpdateInput>
    /**
     * Choose, which restaurant to update.
     */
    where: restaurantWhereUniqueInput
  }

  /**
   * restaurant updateMany
   */
  export type restaurantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update restaurants.
     */
    data: XOR<restaurantUpdateManyMutationInput, restaurantUncheckedUpdateManyInput>
    /**
     * Filter which restaurants to update
     */
    where?: restaurantWhereInput
    /**
     * Limit how many restaurants to update.
     */
    limit?: number
  }

  /**
   * restaurant updateManyAndReturn
   */
  export type restaurantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * The data used to update restaurants.
     */
    data: XOR<restaurantUpdateManyMutationInput, restaurantUncheckedUpdateManyInput>
    /**
     * Filter which restaurants to update
     */
    where?: restaurantWhereInput
    /**
     * Limit how many restaurants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * restaurant upsert
   */
  export type restaurantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * The filter to search for the restaurant to update in case it exists.
     */
    where: restaurantWhereUniqueInput
    /**
     * In case the restaurant found by the `where` argument doesn't exist, create a new restaurant with this data.
     */
    create: XOR<restaurantCreateInput, restaurantUncheckedCreateInput>
    /**
     * In case the restaurant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<restaurantUpdateInput, restaurantUncheckedUpdateInput>
  }

  /**
   * restaurant delete
   */
  export type restaurantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    /**
     * Filter which restaurant to delete.
     */
    where: restaurantWhereUniqueInput
  }

  /**
   * restaurant deleteMany
   */
  export type restaurantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which restaurants to delete
     */
    where?: restaurantWhereInput
    /**
     * Limit how many restaurants to delete.
     */
    limit?: number
  }

  /**
   * restaurant.menu
   */
  export type restaurant$menuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the menu
     */
    select?: menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the menu
     */
    omit?: menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: menuInclude<ExtArgs> | null
    where?: menuWhereInput
    orderBy?: menuOrderByWithRelationInput | menuOrderByWithRelationInput[]
    cursor?: menuWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * restaurant.message
   */
  export type restaurant$messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    where?: messageWhereInput
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    cursor?: messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * restaurant.reservation
   */
  export type restaurant$reservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    where?: reservationWhereInput
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    cursor?: reservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * restaurant.restaurant_has_item
   */
  export type restaurant$restaurant_has_itemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    where?: restaurant_has_itemWhereInput
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    cursor?: restaurant_has_itemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Restaurant_has_itemScalarFieldEnum | Restaurant_has_itemScalarFieldEnum[]
  }

  /**
   * restaurant.timeslot
   */
  export type restaurant$timeslotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    where?: timeslotWhereInput
    orderBy?: timeslotOrderByWithRelationInput | timeslotOrderByWithRelationInput[]
    cursor?: timeslotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TimeslotScalarFieldEnum | TimeslotScalarFieldEnum[]
  }

  /**
   * restaurant without action
   */
  export type restaurantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
  }


  /**
   * Model restaurant_has_item
   */

  export type AggregateRestaurant_has_item = {
    _count: Restaurant_has_itemCountAggregateOutputType | null
    _avg: Restaurant_has_itemAvgAggregateOutputType | null
    _sum: Restaurant_has_itemSumAggregateOutputType | null
    _min: Restaurant_has_itemMinAggregateOutputType | null
    _max: Restaurant_has_itemMaxAggregateOutputType | null
  }

  export type Restaurant_has_itemAvgAggregateOutputType = {
    restaurant_id: number | null
    item_id: number | null
    current_price: Decimal | null
    stock: number | null
  }

  export type Restaurant_has_itemSumAggregateOutputType = {
    restaurant_id: number | null
    item_id: number | null
    current_price: Decimal | null
    stock: number | null
  }

  export type Restaurant_has_itemMinAggregateOutputType = {
    restaurant_id: number | null
    item_id: number | null
    current_price: Decimal | null
    stock: number | null
    is_available: boolean | null
  }

  export type Restaurant_has_itemMaxAggregateOutputType = {
    restaurant_id: number | null
    item_id: number | null
    current_price: Decimal | null
    stock: number | null
    is_available: boolean | null
  }

  export type Restaurant_has_itemCountAggregateOutputType = {
    restaurant_id: number
    item_id: number
    current_price: number
    stock: number
    is_available: number
    _all: number
  }


  export type Restaurant_has_itemAvgAggregateInputType = {
    restaurant_id?: true
    item_id?: true
    current_price?: true
    stock?: true
  }

  export type Restaurant_has_itemSumAggregateInputType = {
    restaurant_id?: true
    item_id?: true
    current_price?: true
    stock?: true
  }

  export type Restaurant_has_itemMinAggregateInputType = {
    restaurant_id?: true
    item_id?: true
    current_price?: true
    stock?: true
    is_available?: true
  }

  export type Restaurant_has_itemMaxAggregateInputType = {
    restaurant_id?: true
    item_id?: true
    current_price?: true
    stock?: true
    is_available?: true
  }

  export type Restaurant_has_itemCountAggregateInputType = {
    restaurant_id?: true
    item_id?: true
    current_price?: true
    stock?: true
    is_available?: true
    _all?: true
  }

  export type Restaurant_has_itemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which restaurant_has_item to aggregate.
     */
    where?: restaurant_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurant_has_items to fetch.
     */
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: restaurant_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurant_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurant_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned restaurant_has_items
    **/
    _count?: true | Restaurant_has_itemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Restaurant_has_itemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Restaurant_has_itemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Restaurant_has_itemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Restaurant_has_itemMaxAggregateInputType
  }

  export type GetRestaurant_has_itemAggregateType<T extends Restaurant_has_itemAggregateArgs> = {
        [P in keyof T & keyof AggregateRestaurant_has_item]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRestaurant_has_item[P]>
      : GetScalarType<T[P], AggregateRestaurant_has_item[P]>
  }




  export type restaurant_has_itemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: restaurant_has_itemWhereInput
    orderBy?: restaurant_has_itemOrderByWithAggregationInput | restaurant_has_itemOrderByWithAggregationInput[]
    by: Restaurant_has_itemScalarFieldEnum[] | Restaurant_has_itemScalarFieldEnum
    having?: restaurant_has_itemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Restaurant_has_itemCountAggregateInputType | true
    _avg?: Restaurant_has_itemAvgAggregateInputType
    _sum?: Restaurant_has_itemSumAggregateInputType
    _min?: Restaurant_has_itemMinAggregateInputType
    _max?: Restaurant_has_itemMaxAggregateInputType
  }

  export type Restaurant_has_itemGroupByOutputType = {
    restaurant_id: number
    item_id: number
    current_price: Decimal
    stock: number
    is_available: boolean | null
    _count: Restaurant_has_itemCountAggregateOutputType | null
    _avg: Restaurant_has_itemAvgAggregateOutputType | null
    _sum: Restaurant_has_itemSumAggregateOutputType | null
    _min: Restaurant_has_itemMinAggregateOutputType | null
    _max: Restaurant_has_itemMaxAggregateOutputType | null
  }

  type GetRestaurant_has_itemGroupByPayload<T extends restaurant_has_itemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Restaurant_has_itemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Restaurant_has_itemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Restaurant_has_itemGroupByOutputType[P]>
            : GetScalarType<T[P], Restaurant_has_itemGroupByOutputType[P]>
        }
      >
    >


  export type restaurant_has_itemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    restaurant_id?: boolean
    item_id?: boolean
    current_price?: boolean
    stock?: boolean
    is_available?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant_has_item"]>

  export type restaurant_has_itemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    restaurant_id?: boolean
    item_id?: boolean
    current_price?: boolean
    stock?: boolean
    is_available?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant_has_item"]>

  export type restaurant_has_itemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    restaurant_id?: boolean
    item_id?: boolean
    current_price?: boolean
    stock?: boolean
    is_available?: boolean
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurant_has_item"]>

  export type restaurant_has_itemSelectScalar = {
    restaurant_id?: boolean
    item_id?: boolean
    current_price?: boolean
    stock?: boolean
    is_available?: boolean
  }

  export type restaurant_has_itemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"restaurant_id" | "item_id" | "current_price" | "stock" | "is_available", ExtArgs["result"]["restaurant_has_item"]>
  export type restaurant_has_itemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }
  export type restaurant_has_itemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }
  export type restaurant_has_itemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | itemDefaultArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }

  export type $restaurant_has_itemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "restaurant_has_item"
    objects: {
      item: Prisma.$itemPayload<ExtArgs>
      restaurant: Prisma.$restaurantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      restaurant_id: number
      item_id: number
      current_price: Prisma.Decimal
      stock: number
      is_available: boolean | null
    }, ExtArgs["result"]["restaurant_has_item"]>
    composites: {}
  }

  type restaurant_has_itemGetPayload<S extends boolean | null | undefined | restaurant_has_itemDefaultArgs> = $Result.GetResult<Prisma.$restaurant_has_itemPayload, S>

  type restaurant_has_itemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<restaurant_has_itemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Restaurant_has_itemCountAggregateInputType | true
    }

  export interface restaurant_has_itemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['restaurant_has_item'], meta: { name: 'restaurant_has_item' } }
    /**
     * Find zero or one Restaurant_has_item that matches the filter.
     * @param {restaurant_has_itemFindUniqueArgs} args - Arguments to find a Restaurant_has_item
     * @example
     * // Get one Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends restaurant_has_itemFindUniqueArgs>(args: SelectSubset<T, restaurant_has_itemFindUniqueArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Restaurant_has_item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {restaurant_has_itemFindUniqueOrThrowArgs} args - Arguments to find a Restaurant_has_item
     * @example
     * // Get one Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends restaurant_has_itemFindUniqueOrThrowArgs>(args: SelectSubset<T, restaurant_has_itemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurant_has_item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemFindFirstArgs} args - Arguments to find a Restaurant_has_item
     * @example
     * // Get one Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends restaurant_has_itemFindFirstArgs>(args?: SelectSubset<T, restaurant_has_itemFindFirstArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurant_has_item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemFindFirstOrThrowArgs} args - Arguments to find a Restaurant_has_item
     * @example
     * // Get one Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends restaurant_has_itemFindFirstOrThrowArgs>(args?: SelectSubset<T, restaurant_has_itemFindFirstOrThrowArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Restaurant_has_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Restaurant_has_items
     * const restaurant_has_items = await prisma.restaurant_has_item.findMany()
     * 
     * // Get first 10 Restaurant_has_items
     * const restaurant_has_items = await prisma.restaurant_has_item.findMany({ take: 10 })
     * 
     * // Only select the `restaurant_id`
     * const restaurant_has_itemWithRestaurant_idOnly = await prisma.restaurant_has_item.findMany({ select: { restaurant_id: true } })
     * 
     */
    findMany<T extends restaurant_has_itemFindManyArgs>(args?: SelectSubset<T, restaurant_has_itemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Restaurant_has_item.
     * @param {restaurant_has_itemCreateArgs} args - Arguments to create a Restaurant_has_item.
     * @example
     * // Create one Restaurant_has_item
     * const Restaurant_has_item = await prisma.restaurant_has_item.create({
     *   data: {
     *     // ... data to create a Restaurant_has_item
     *   }
     * })
     * 
     */
    create<T extends restaurant_has_itemCreateArgs>(args: SelectSubset<T, restaurant_has_itemCreateArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Restaurant_has_items.
     * @param {restaurant_has_itemCreateManyArgs} args - Arguments to create many Restaurant_has_items.
     * @example
     * // Create many Restaurant_has_items
     * const restaurant_has_item = await prisma.restaurant_has_item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends restaurant_has_itemCreateManyArgs>(args?: SelectSubset<T, restaurant_has_itemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Restaurant_has_items and returns the data saved in the database.
     * @param {restaurant_has_itemCreateManyAndReturnArgs} args - Arguments to create many Restaurant_has_items.
     * @example
     * // Create many Restaurant_has_items
     * const restaurant_has_item = await prisma.restaurant_has_item.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Restaurant_has_items and only return the `restaurant_id`
     * const restaurant_has_itemWithRestaurant_idOnly = await prisma.restaurant_has_item.createManyAndReturn({
     *   select: { restaurant_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends restaurant_has_itemCreateManyAndReturnArgs>(args?: SelectSubset<T, restaurant_has_itemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Restaurant_has_item.
     * @param {restaurant_has_itemDeleteArgs} args - Arguments to delete one Restaurant_has_item.
     * @example
     * // Delete one Restaurant_has_item
     * const Restaurant_has_item = await prisma.restaurant_has_item.delete({
     *   where: {
     *     // ... filter to delete one Restaurant_has_item
     *   }
     * })
     * 
     */
    delete<T extends restaurant_has_itemDeleteArgs>(args: SelectSubset<T, restaurant_has_itemDeleteArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Restaurant_has_item.
     * @param {restaurant_has_itemUpdateArgs} args - Arguments to update one Restaurant_has_item.
     * @example
     * // Update one Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends restaurant_has_itemUpdateArgs>(args: SelectSubset<T, restaurant_has_itemUpdateArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Restaurant_has_items.
     * @param {restaurant_has_itemDeleteManyArgs} args - Arguments to filter Restaurant_has_items to delete.
     * @example
     * // Delete a few Restaurant_has_items
     * const { count } = await prisma.restaurant_has_item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends restaurant_has_itemDeleteManyArgs>(args?: SelectSubset<T, restaurant_has_itemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Restaurant_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Restaurant_has_items
     * const restaurant_has_item = await prisma.restaurant_has_item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends restaurant_has_itemUpdateManyArgs>(args: SelectSubset<T, restaurant_has_itemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Restaurant_has_items and returns the data updated in the database.
     * @param {restaurant_has_itemUpdateManyAndReturnArgs} args - Arguments to update many Restaurant_has_items.
     * @example
     * // Update many Restaurant_has_items
     * const restaurant_has_item = await prisma.restaurant_has_item.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Restaurant_has_items and only return the `restaurant_id`
     * const restaurant_has_itemWithRestaurant_idOnly = await prisma.restaurant_has_item.updateManyAndReturn({
     *   select: { restaurant_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends restaurant_has_itemUpdateManyAndReturnArgs>(args: SelectSubset<T, restaurant_has_itemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Restaurant_has_item.
     * @param {restaurant_has_itemUpsertArgs} args - Arguments to update or create a Restaurant_has_item.
     * @example
     * // Update or create a Restaurant_has_item
     * const restaurant_has_item = await prisma.restaurant_has_item.upsert({
     *   create: {
     *     // ... data to create a Restaurant_has_item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Restaurant_has_item we want to update
     *   }
     * })
     */
    upsert<T extends restaurant_has_itemUpsertArgs>(args: SelectSubset<T, restaurant_has_itemUpsertArgs<ExtArgs>>): Prisma__restaurant_has_itemClient<$Result.GetResult<Prisma.$restaurant_has_itemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Restaurant_has_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemCountArgs} args - Arguments to filter Restaurant_has_items to count.
     * @example
     * // Count the number of Restaurant_has_items
     * const count = await prisma.restaurant_has_item.count({
     *   where: {
     *     // ... the filter for the Restaurant_has_items we want to count
     *   }
     * })
    **/
    count<T extends restaurant_has_itemCountArgs>(
      args?: Subset<T, restaurant_has_itemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Restaurant_has_itemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Restaurant_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Restaurant_has_itemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Restaurant_has_itemAggregateArgs>(args: Subset<T, Restaurant_has_itemAggregateArgs>): Prisma.PrismaPromise<GetRestaurant_has_itemAggregateType<T>>

    /**
     * Group by Restaurant_has_item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {restaurant_has_itemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends restaurant_has_itemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: restaurant_has_itemGroupByArgs['orderBy'] }
        : { orderBy?: restaurant_has_itemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, restaurant_has_itemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRestaurant_has_itemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the restaurant_has_item model
   */
  readonly fields: restaurant_has_itemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for restaurant_has_item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__restaurant_has_itemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends itemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, itemDefaultArgs<ExtArgs>>): Prisma__itemClient<$Result.GetResult<Prisma.$itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    restaurant<T extends restaurantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, restaurantDefaultArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the restaurant_has_item model
   */
  interface restaurant_has_itemFieldRefs {
    readonly restaurant_id: FieldRef<"restaurant_has_item", 'Int'>
    readonly item_id: FieldRef<"restaurant_has_item", 'Int'>
    readonly current_price: FieldRef<"restaurant_has_item", 'Decimal'>
    readonly stock: FieldRef<"restaurant_has_item", 'Int'>
    readonly is_available: FieldRef<"restaurant_has_item", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * restaurant_has_item findUnique
   */
  export type restaurant_has_itemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which restaurant_has_item to fetch.
     */
    where: restaurant_has_itemWhereUniqueInput
  }

  /**
   * restaurant_has_item findUniqueOrThrow
   */
  export type restaurant_has_itemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which restaurant_has_item to fetch.
     */
    where: restaurant_has_itemWhereUniqueInput
  }

  /**
   * restaurant_has_item findFirst
   */
  export type restaurant_has_itemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which restaurant_has_item to fetch.
     */
    where?: restaurant_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurant_has_items to fetch.
     */
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for restaurant_has_items.
     */
    cursor?: restaurant_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurant_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurant_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of restaurant_has_items.
     */
    distinct?: Restaurant_has_itemScalarFieldEnum | Restaurant_has_itemScalarFieldEnum[]
  }

  /**
   * restaurant_has_item findFirstOrThrow
   */
  export type restaurant_has_itemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which restaurant_has_item to fetch.
     */
    where?: restaurant_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurant_has_items to fetch.
     */
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for restaurant_has_items.
     */
    cursor?: restaurant_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurant_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurant_has_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of restaurant_has_items.
     */
    distinct?: Restaurant_has_itemScalarFieldEnum | Restaurant_has_itemScalarFieldEnum[]
  }

  /**
   * restaurant_has_item findMany
   */
  export type restaurant_has_itemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter, which restaurant_has_items to fetch.
     */
    where?: restaurant_has_itemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of restaurant_has_items to fetch.
     */
    orderBy?: restaurant_has_itemOrderByWithRelationInput | restaurant_has_itemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing restaurant_has_items.
     */
    cursor?: restaurant_has_itemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` restaurant_has_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` restaurant_has_items.
     */
    skip?: number
    distinct?: Restaurant_has_itemScalarFieldEnum | Restaurant_has_itemScalarFieldEnum[]
  }

  /**
   * restaurant_has_item create
   */
  export type restaurant_has_itemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to create a restaurant_has_item.
     */
    data: XOR<restaurant_has_itemCreateInput, restaurant_has_itemUncheckedCreateInput>
  }

  /**
   * restaurant_has_item createMany
   */
  export type restaurant_has_itemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many restaurant_has_items.
     */
    data: restaurant_has_itemCreateManyInput | restaurant_has_itemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * restaurant_has_item createManyAndReturn
   */
  export type restaurant_has_itemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * The data used to create many restaurant_has_items.
     */
    data: restaurant_has_itemCreateManyInput | restaurant_has_itemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * restaurant_has_item update
   */
  export type restaurant_has_itemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * The data needed to update a restaurant_has_item.
     */
    data: XOR<restaurant_has_itemUpdateInput, restaurant_has_itemUncheckedUpdateInput>
    /**
     * Choose, which restaurant_has_item to update.
     */
    where: restaurant_has_itemWhereUniqueInput
  }

  /**
   * restaurant_has_item updateMany
   */
  export type restaurant_has_itemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update restaurant_has_items.
     */
    data: XOR<restaurant_has_itemUpdateManyMutationInput, restaurant_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which restaurant_has_items to update
     */
    where?: restaurant_has_itemWhereInput
    /**
     * Limit how many restaurant_has_items to update.
     */
    limit?: number
  }

  /**
   * restaurant_has_item updateManyAndReturn
   */
  export type restaurant_has_itemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * The data used to update restaurant_has_items.
     */
    data: XOR<restaurant_has_itemUpdateManyMutationInput, restaurant_has_itemUncheckedUpdateManyInput>
    /**
     * Filter which restaurant_has_items to update
     */
    where?: restaurant_has_itemWhereInput
    /**
     * Limit how many restaurant_has_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * restaurant_has_item upsert
   */
  export type restaurant_has_itemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * The filter to search for the restaurant_has_item to update in case it exists.
     */
    where: restaurant_has_itemWhereUniqueInput
    /**
     * In case the restaurant_has_item found by the `where` argument doesn't exist, create a new restaurant_has_item with this data.
     */
    create: XOR<restaurant_has_itemCreateInput, restaurant_has_itemUncheckedCreateInput>
    /**
     * In case the restaurant_has_item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<restaurant_has_itemUpdateInput, restaurant_has_itemUncheckedUpdateInput>
  }

  /**
   * restaurant_has_item delete
   */
  export type restaurant_has_itemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
    /**
     * Filter which restaurant_has_item to delete.
     */
    where: restaurant_has_itemWhereUniqueInput
  }

  /**
   * restaurant_has_item deleteMany
   */
  export type restaurant_has_itemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which restaurant_has_items to delete
     */
    where?: restaurant_has_itemWhereInput
    /**
     * Limit how many restaurant_has_items to delete.
     */
    limit?: number
  }

  /**
   * restaurant_has_item without action
   */
  export type restaurant_has_itemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant_has_item
     */
    select?: restaurant_has_itemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant_has_item
     */
    omit?: restaurant_has_itemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurant_has_itemInclude<ExtArgs> | null
  }


  /**
   * Model timeslot
   */

  export type AggregateTimeslot = {
    _count: TimeslotCountAggregateOutputType | null
    _avg: TimeslotAvgAggregateOutputType | null
    _sum: TimeslotSumAggregateOutputType | null
    _min: TimeslotMinAggregateOutputType | null
    _max: TimeslotMaxAggregateOutputType | null
  }

  export type TimeslotAvgAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    capacity: number | null
  }

  export type TimeslotSumAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    capacity: number | null
  }

  export type TimeslotMinAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    date: Date | null
    start_at: Date | null
    end_at: Date | null
    capacity: number | null
    status: $Enums.TimeslotStatus | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TimeslotMaxAggregateOutputType = {
    id: number | null
    restaurant_id: number | null
    date: Date | null
    start_at: Date | null
    end_at: Date | null
    capacity: number | null
    status: $Enums.TimeslotStatus | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TimeslotCountAggregateOutputType = {
    id: number
    restaurant_id: number
    date: number
    start_at: number
    end_at: number
    capacity: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TimeslotAvgAggregateInputType = {
    id?: true
    restaurant_id?: true
    capacity?: true
  }

  export type TimeslotSumAggregateInputType = {
    id?: true
    restaurant_id?: true
    capacity?: true
  }

  export type TimeslotMinAggregateInputType = {
    id?: true
    restaurant_id?: true
    date?: true
    start_at?: true
    end_at?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type TimeslotMaxAggregateInputType = {
    id?: true
    restaurant_id?: true
    date?: true
    start_at?: true
    end_at?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type TimeslotCountAggregateInputType = {
    id?: true
    restaurant_id?: true
    date?: true
    start_at?: true
    end_at?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TimeslotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which timeslot to aggregate.
     */
    where?: timeslotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of timeslots to fetch.
     */
    orderBy?: timeslotOrderByWithRelationInput | timeslotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: timeslotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` timeslots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` timeslots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned timeslots
    **/
    _count?: true | TimeslotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TimeslotAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TimeslotSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TimeslotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TimeslotMaxAggregateInputType
  }

  export type GetTimeslotAggregateType<T extends TimeslotAggregateArgs> = {
        [P in keyof T & keyof AggregateTimeslot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTimeslot[P]>
      : GetScalarType<T[P], AggregateTimeslot[P]>
  }




  export type timeslotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: timeslotWhereInput
    orderBy?: timeslotOrderByWithAggregationInput | timeslotOrderByWithAggregationInput[]
    by: TimeslotScalarFieldEnum[] | TimeslotScalarFieldEnum
    having?: timeslotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TimeslotCountAggregateInputType | true
    _avg?: TimeslotAvgAggregateInputType
    _sum?: TimeslotSumAggregateInputType
    _min?: TimeslotMinAggregateInputType
    _max?: TimeslotMaxAggregateInputType
  }

  export type TimeslotGroupByOutputType = {
    id: number
    restaurant_id: number
    date: Date
    start_at: Date
    end_at: Date
    capacity: number
    status: $Enums.TimeslotStatus
    created_at: Date | null
    updated_at: Date | null
    _count: TimeslotCountAggregateOutputType | null
    _avg: TimeslotAvgAggregateOutputType | null
    _sum: TimeslotSumAggregateOutputType | null
    _min: TimeslotMinAggregateOutputType | null
    _max: TimeslotMaxAggregateOutputType | null
  }

  type GetTimeslotGroupByPayload<T extends timeslotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TimeslotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TimeslotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TimeslotGroupByOutputType[P]>
            : GetScalarType<T[P], TimeslotGroupByOutputType[P]>
        }
      >
    >


  export type timeslotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    date?: boolean
    start_at?: boolean
    end_at?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    reservation?: boolean | timeslot$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    _count?: boolean | TimeslotCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["timeslot"]>

  export type timeslotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    date?: boolean
    start_at?: boolean
    end_at?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["timeslot"]>

  export type timeslotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    restaurant_id?: boolean
    date?: boolean
    start_at?: boolean
    end_at?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["timeslot"]>

  export type timeslotSelectScalar = {
    id?: boolean
    restaurant_id?: boolean
    date?: boolean
    start_at?: boolean
    end_at?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type timeslotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "restaurant_id" | "date" | "start_at" | "end_at" | "capacity" | "status" | "created_at" | "updated_at", ExtArgs["result"]["timeslot"]>
  export type timeslotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservation?: boolean | timeslot$reservationArgs<ExtArgs>
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
    _count?: boolean | TimeslotCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type timeslotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }
  export type timeslotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurant?: boolean | restaurantDefaultArgs<ExtArgs>
  }

  export type $timeslotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "timeslot"
    objects: {
      reservation: Prisma.$reservationPayload<ExtArgs>[]
      restaurant: Prisma.$restaurantPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      restaurant_id: number
      date: Date
      start_at: Date
      end_at: Date
      capacity: number
      status: $Enums.TimeslotStatus
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["timeslot"]>
    composites: {}
  }

  type timeslotGetPayload<S extends boolean | null | undefined | timeslotDefaultArgs> = $Result.GetResult<Prisma.$timeslotPayload, S>

  type timeslotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<timeslotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TimeslotCountAggregateInputType | true
    }

  export interface timeslotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['timeslot'], meta: { name: 'timeslot' } }
    /**
     * Find zero or one Timeslot that matches the filter.
     * @param {timeslotFindUniqueArgs} args - Arguments to find a Timeslot
     * @example
     * // Get one Timeslot
     * const timeslot = await prisma.timeslot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends timeslotFindUniqueArgs>(args: SelectSubset<T, timeslotFindUniqueArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Timeslot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {timeslotFindUniqueOrThrowArgs} args - Arguments to find a Timeslot
     * @example
     * // Get one Timeslot
     * const timeslot = await prisma.timeslot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends timeslotFindUniqueOrThrowArgs>(args: SelectSubset<T, timeslotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Timeslot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotFindFirstArgs} args - Arguments to find a Timeslot
     * @example
     * // Get one Timeslot
     * const timeslot = await prisma.timeslot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends timeslotFindFirstArgs>(args?: SelectSubset<T, timeslotFindFirstArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Timeslot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotFindFirstOrThrowArgs} args - Arguments to find a Timeslot
     * @example
     * // Get one Timeslot
     * const timeslot = await prisma.timeslot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends timeslotFindFirstOrThrowArgs>(args?: SelectSubset<T, timeslotFindFirstOrThrowArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Timeslots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Timeslots
     * const timeslots = await prisma.timeslot.findMany()
     * 
     * // Get first 10 Timeslots
     * const timeslots = await prisma.timeslot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const timeslotWithIdOnly = await prisma.timeslot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends timeslotFindManyArgs>(args?: SelectSubset<T, timeslotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Timeslot.
     * @param {timeslotCreateArgs} args - Arguments to create a Timeslot.
     * @example
     * // Create one Timeslot
     * const Timeslot = await prisma.timeslot.create({
     *   data: {
     *     // ... data to create a Timeslot
     *   }
     * })
     * 
     */
    create<T extends timeslotCreateArgs>(args: SelectSubset<T, timeslotCreateArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Timeslots.
     * @param {timeslotCreateManyArgs} args - Arguments to create many Timeslots.
     * @example
     * // Create many Timeslots
     * const timeslot = await prisma.timeslot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends timeslotCreateManyArgs>(args?: SelectSubset<T, timeslotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Timeslots and returns the data saved in the database.
     * @param {timeslotCreateManyAndReturnArgs} args - Arguments to create many Timeslots.
     * @example
     * // Create many Timeslots
     * const timeslot = await prisma.timeslot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Timeslots and only return the `id`
     * const timeslotWithIdOnly = await prisma.timeslot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends timeslotCreateManyAndReturnArgs>(args?: SelectSubset<T, timeslotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Timeslot.
     * @param {timeslotDeleteArgs} args - Arguments to delete one Timeslot.
     * @example
     * // Delete one Timeslot
     * const Timeslot = await prisma.timeslot.delete({
     *   where: {
     *     // ... filter to delete one Timeslot
     *   }
     * })
     * 
     */
    delete<T extends timeslotDeleteArgs>(args: SelectSubset<T, timeslotDeleteArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Timeslot.
     * @param {timeslotUpdateArgs} args - Arguments to update one Timeslot.
     * @example
     * // Update one Timeslot
     * const timeslot = await prisma.timeslot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends timeslotUpdateArgs>(args: SelectSubset<T, timeslotUpdateArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Timeslots.
     * @param {timeslotDeleteManyArgs} args - Arguments to filter Timeslots to delete.
     * @example
     * // Delete a few Timeslots
     * const { count } = await prisma.timeslot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends timeslotDeleteManyArgs>(args?: SelectSubset<T, timeslotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Timeslots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Timeslots
     * const timeslot = await prisma.timeslot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends timeslotUpdateManyArgs>(args: SelectSubset<T, timeslotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Timeslots and returns the data updated in the database.
     * @param {timeslotUpdateManyAndReturnArgs} args - Arguments to update many Timeslots.
     * @example
     * // Update many Timeslots
     * const timeslot = await prisma.timeslot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Timeslots and only return the `id`
     * const timeslotWithIdOnly = await prisma.timeslot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends timeslotUpdateManyAndReturnArgs>(args: SelectSubset<T, timeslotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Timeslot.
     * @param {timeslotUpsertArgs} args - Arguments to update or create a Timeslot.
     * @example
     * // Update or create a Timeslot
     * const timeslot = await prisma.timeslot.upsert({
     *   create: {
     *     // ... data to create a Timeslot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Timeslot we want to update
     *   }
     * })
     */
    upsert<T extends timeslotUpsertArgs>(args: SelectSubset<T, timeslotUpsertArgs<ExtArgs>>): Prisma__timeslotClient<$Result.GetResult<Prisma.$timeslotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Timeslots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotCountArgs} args - Arguments to filter Timeslots to count.
     * @example
     * // Count the number of Timeslots
     * const count = await prisma.timeslot.count({
     *   where: {
     *     // ... the filter for the Timeslots we want to count
     *   }
     * })
    **/
    count<T extends timeslotCountArgs>(
      args?: Subset<T, timeslotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TimeslotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Timeslot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeslotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TimeslotAggregateArgs>(args: Subset<T, TimeslotAggregateArgs>): Prisma.PrismaPromise<GetTimeslotAggregateType<T>>

    /**
     * Group by Timeslot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {timeslotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends timeslotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: timeslotGroupByArgs['orderBy'] }
        : { orderBy?: timeslotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, timeslotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTimeslotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the timeslot model
   */
  readonly fields: timeslotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for timeslot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__timeslotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservation<T extends timeslot$reservationArgs<ExtArgs> = {}>(args?: Subset<T, timeslot$reservationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    restaurant<T extends restaurantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, restaurantDefaultArgs<ExtArgs>>): Prisma__restaurantClient<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the timeslot model
   */
  interface timeslotFieldRefs {
    readonly id: FieldRef<"timeslot", 'Int'>
    readonly restaurant_id: FieldRef<"timeslot", 'Int'>
    readonly date: FieldRef<"timeslot", 'DateTime'>
    readonly start_at: FieldRef<"timeslot", 'DateTime'>
    readonly end_at: FieldRef<"timeslot", 'DateTime'>
    readonly capacity: FieldRef<"timeslot", 'Int'>
    readonly status: FieldRef<"timeslot", 'TimeslotStatus'>
    readonly created_at: FieldRef<"timeslot", 'DateTime'>
    readonly updated_at: FieldRef<"timeslot", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * timeslot findUnique
   */
  export type timeslotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter, which timeslot to fetch.
     */
    where: timeslotWhereUniqueInput
  }

  /**
   * timeslot findUniqueOrThrow
   */
  export type timeslotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter, which timeslot to fetch.
     */
    where: timeslotWhereUniqueInput
  }

  /**
   * timeslot findFirst
   */
  export type timeslotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter, which timeslot to fetch.
     */
    where?: timeslotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of timeslots to fetch.
     */
    orderBy?: timeslotOrderByWithRelationInput | timeslotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for timeslots.
     */
    cursor?: timeslotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` timeslots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` timeslots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of timeslots.
     */
    distinct?: TimeslotScalarFieldEnum | TimeslotScalarFieldEnum[]
  }

  /**
   * timeslot findFirstOrThrow
   */
  export type timeslotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter, which timeslot to fetch.
     */
    where?: timeslotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of timeslots to fetch.
     */
    orderBy?: timeslotOrderByWithRelationInput | timeslotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for timeslots.
     */
    cursor?: timeslotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` timeslots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` timeslots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of timeslots.
     */
    distinct?: TimeslotScalarFieldEnum | TimeslotScalarFieldEnum[]
  }

  /**
   * timeslot findMany
   */
  export type timeslotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter, which timeslots to fetch.
     */
    where?: timeslotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of timeslots to fetch.
     */
    orderBy?: timeslotOrderByWithRelationInput | timeslotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing timeslots.
     */
    cursor?: timeslotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` timeslots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` timeslots.
     */
    skip?: number
    distinct?: TimeslotScalarFieldEnum | TimeslotScalarFieldEnum[]
  }

  /**
   * timeslot create
   */
  export type timeslotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * The data needed to create a timeslot.
     */
    data: XOR<timeslotCreateInput, timeslotUncheckedCreateInput>
  }

  /**
   * timeslot createMany
   */
  export type timeslotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many timeslots.
     */
    data: timeslotCreateManyInput | timeslotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * timeslot createManyAndReturn
   */
  export type timeslotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * The data used to create many timeslots.
     */
    data: timeslotCreateManyInput | timeslotCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * timeslot update
   */
  export type timeslotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * The data needed to update a timeslot.
     */
    data: XOR<timeslotUpdateInput, timeslotUncheckedUpdateInput>
    /**
     * Choose, which timeslot to update.
     */
    where: timeslotWhereUniqueInput
  }

  /**
   * timeslot updateMany
   */
  export type timeslotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update timeslots.
     */
    data: XOR<timeslotUpdateManyMutationInput, timeslotUncheckedUpdateManyInput>
    /**
     * Filter which timeslots to update
     */
    where?: timeslotWhereInput
    /**
     * Limit how many timeslots to update.
     */
    limit?: number
  }

  /**
   * timeslot updateManyAndReturn
   */
  export type timeslotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * The data used to update timeslots.
     */
    data: XOR<timeslotUpdateManyMutationInput, timeslotUncheckedUpdateManyInput>
    /**
     * Filter which timeslots to update
     */
    where?: timeslotWhereInput
    /**
     * Limit how many timeslots to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * timeslot upsert
   */
  export type timeslotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * The filter to search for the timeslot to update in case it exists.
     */
    where: timeslotWhereUniqueInput
    /**
     * In case the timeslot found by the `where` argument doesn't exist, create a new timeslot with this data.
     */
    create: XOR<timeslotCreateInput, timeslotUncheckedCreateInput>
    /**
     * In case the timeslot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<timeslotUpdateInput, timeslotUncheckedUpdateInput>
  }

  /**
   * timeslot delete
   */
  export type timeslotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
    /**
     * Filter which timeslot to delete.
     */
    where: timeslotWhereUniqueInput
  }

  /**
   * timeslot deleteMany
   */
  export type timeslotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which timeslots to delete
     */
    where?: timeslotWhereInput
    /**
     * Limit how many timeslots to delete.
     */
    limit?: number
  }

  /**
   * timeslot.reservation
   */
  export type timeslot$reservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    where?: reservationWhereInput
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    cursor?: reservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * timeslot without action
   */
  export type timeslotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the timeslot
     */
    select?: timeslotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the timeslot
     */
    omit?: timeslotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: timeslotInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    type_user: $Enums.UserType | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone_number: string | null
    password_hash: string | null
    resetToken: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    type_user: $Enums.UserType | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone_number: string | null
    password_hash: string | null
    resetToken: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    type_user: number
    first_name: number
    last_name: number
    email: number
    phone_number: number
    password_hash: number
    resetToken: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    type_user?: true
    first_name?: true
    last_name?: true
    email?: true
    phone_number?: true
    password_hash?: true
    resetToken?: true
    created_at?: true
    updated_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    type_user?: true
    first_name?: true
    last_name?: true
    email?: true
    phone_number?: true
    password_hash?: true
    resetToken?: true
    created_at?: true
    updated_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    type_user?: true
    first_name?: true
    last_name?: true
    email?: true
    phone_number?: true
    password_hash?: true
    resetToken?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    type_user: $Enums.UserType
    first_name: string
    last_name: string | null
    email: string
    phone_number: string | null
    password_hash: string
    resetToken: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_user?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone_number?: boolean
    password_hash?: boolean
    resetToken?: boolean
    created_at?: boolean
    updated_at?: boolean
    message?: boolean | user$messageArgs<ExtArgs>
    reservation?: boolean | user$reservationArgs<ExtArgs>
    restaurants?: boolean | user$restaurantsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_user?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone_number?: boolean
    password_hash?: boolean
    resetToken?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type_user?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone_number?: boolean
    password_hash?: boolean
    resetToken?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    type_user?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone_number?: boolean
    password_hash?: boolean
    resetToken?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type_user" | "first_name" | "last_name" | "email" | "phone_number" | "password_hash" | "resetToken" | "created_at" | "updated_at", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | user$messageArgs<ExtArgs>
    reservation?: boolean | user$reservationArgs<ExtArgs>
    restaurants?: boolean | user$restaurantsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      message: Prisma.$messagePayload<ExtArgs>[]
      reservation: Prisma.$reservationPayload<ExtArgs>[]
      restaurants: Prisma.$restaurantPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type_user: $Enums.UserType
      first_name: string
      last_name: string | null
      email: string
      phone_number: string | null
      password_hash: string
      resetToken: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userCreateManyAndReturnArgs>(args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {userUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userUpdateManyAndReturnArgs>(args: SelectSubset<T, userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    message<T extends user$messageArgs<ExtArgs> = {}>(args?: Subset<T, user$messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservation<T extends user$reservationArgs<ExtArgs> = {}>(args?: Subset<T, user$reservationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    restaurants<T extends user$restaurantsArgs<ExtArgs> = {}>(args?: Subset<T, user$restaurantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$restaurantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly type_user: FieldRef<"user", 'UserType'>
    readonly first_name: FieldRef<"user", 'String'>
    readonly last_name: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly phone_number: FieldRef<"user", 'String'>
    readonly password_hash: FieldRef<"user", 'String'>
    readonly resetToken: FieldRef<"user", 'String'>
    readonly created_at: FieldRef<"user", 'DateTime'>
    readonly updated_at: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user updateManyAndReturn
   */
  export type userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * user.message
   */
  export type user$messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message
     */
    select?: messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message
     */
    omit?: messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messageInclude<ExtArgs> | null
    where?: messageWhereInput
    orderBy?: messageOrderByWithRelationInput | messageOrderByWithRelationInput[]
    cursor?: messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * user.reservation
   */
  export type user$reservationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reservation
     */
    select?: reservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reservation
     */
    omit?: reservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reservationInclude<ExtArgs> | null
    where?: reservationWhereInput
    orderBy?: reservationOrderByWithRelationInput | reservationOrderByWithRelationInput[]
    cursor?: reservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * user.restaurants
   */
  export type user$restaurantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the restaurant
     */
    select?: restaurantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the restaurant
     */
    omit?: restaurantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: restaurantInclude<ExtArgs> | null
    where?: restaurantWhereInput
    orderBy?: restaurantOrderByWithRelationInput | restaurantOrderByWithRelationInput[]
    cursor?: restaurantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RestaurantScalarFieldEnum | RestaurantScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    category: 'category',
    base_price: 'base_price'
  };

  export type ItemScalarFieldEnum = (typeof ItemScalarFieldEnum)[keyof typeof ItemScalarFieldEnum]


  export const MenuScalarFieldEnum: {
    id: 'id',
    restaurant_id: 'restaurant_id',
    name: 'name',
    description: 'description',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type MenuScalarFieldEnum = (typeof MenuScalarFieldEnum)[keyof typeof MenuScalarFieldEnum]


  export const Menu_has_itemScalarFieldEnum: {
    menu_id: 'menu_id',
    item_id: 'item_id'
  };

  export type Menu_has_itemScalarFieldEnum = (typeof Menu_has_itemScalarFieldEnum)[keyof typeof Menu_has_itemScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    restaurant_id: 'restaurant_id',
    reservation_id: 'reservation_id',
    content: 'content',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const ReservationScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    restaurant_id: 'restaurant_id',
    timeslot_id: 'timeslot_id',
    status: 'status',
    special_requests: 'special_requests',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ReservationScalarFieldEnum = (typeof ReservationScalarFieldEnum)[keyof typeof ReservationScalarFieldEnum]


  export const Reservation_has_itemScalarFieldEnum: {
    reservation_id: 'reservation_id',
    item_id: 'item_id',
    quantity: 'quantity',
    item_price: 'item_price'
  };

  export type Reservation_has_itemScalarFieldEnum = (typeof Reservation_has_itemScalarFieldEnum)[keyof typeof Reservation_has_itemScalarFieldEnum]


  export const RestaurantScalarFieldEnum: {
    id: 'id',
    owner_id: 'owner_id',
    name: 'name',
    address: 'address',
    opening_hours: 'opening_hours',
    genre: 'genre',
    siret: 'siret',
    description: 'description',
    image_url: 'image_url',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type RestaurantScalarFieldEnum = (typeof RestaurantScalarFieldEnum)[keyof typeof RestaurantScalarFieldEnum]


  export const Restaurant_has_itemScalarFieldEnum: {
    restaurant_id: 'restaurant_id',
    item_id: 'item_id',
    current_price: 'current_price',
    stock: 'stock',
    is_available: 'is_available'
  };

  export type Restaurant_has_itemScalarFieldEnum = (typeof Restaurant_has_itemScalarFieldEnum)[keyof typeof Restaurant_has_itemScalarFieldEnum]


  export const TimeslotScalarFieldEnum: {
    id: 'id',
    restaurant_id: 'restaurant_id',
    date: 'date',
    start_at: 'start_at',
    end_at: 'end_at',
    capacity: 'capacity',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TimeslotScalarFieldEnum = (typeof TimeslotScalarFieldEnum)[keyof typeof TimeslotScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    type_user: 'type_user',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    phone_number: 'phone_number',
    password_hash: 'password_hash',
    resetToken: 'resetToken',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'ItemCategory'
   */
  export type EnumItemCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ItemCategory'>
    


  /**
   * Reference to a field of type 'ItemCategory[]'
   */
  export type ListEnumItemCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ItemCategory[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'ReservationStatus'
   */
  export type EnumReservationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationStatus'>
    


  /**
   * Reference to a field of type 'ReservationStatus[]'
   */
  export type ListEnumReservationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReservationStatus[]'>
    


  /**
   * Reference to a field of type 'TimeslotStatus'
   */
  export type EnumTimeslotStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TimeslotStatus'>
    


  /**
   * Reference to a field of type 'TimeslotStatus[]'
   */
  export type ListEnumTimeslotStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TimeslotStatus[]'>
    


  /**
   * Reference to a field of type 'UserType'
   */
  export type EnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType'>
    


  /**
   * Reference to a field of type 'UserType[]'
   */
  export type ListEnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type itemWhereInput = {
    AND?: itemWhereInput | itemWhereInput[]
    OR?: itemWhereInput[]
    NOT?: itemWhereInput | itemWhereInput[]
    id?: IntFilter<"item"> | number
    name?: StringFilter<"item"> | string
    description?: StringNullableFilter<"item"> | string | null
    category?: EnumItemCategoryFilter<"item"> | $Enums.ItemCategory
    base_price?: DecimalFilter<"item"> | Decimal | DecimalJsLike | number | string
    reservation_has_item?: Reservation_has_itemListRelationFilter
    restaurant_has_item?: Restaurant_has_itemListRelationFilter
    menu_has_item?: Menu_has_itemListRelationFilter
  }

  export type itemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    base_price?: SortOrder
    reservation_has_item?: reservation_has_itemOrderByRelationAggregateInput
    restaurant_has_item?: restaurant_has_itemOrderByRelationAggregateInput
    menu_has_item?: menu_has_itemOrderByRelationAggregateInput
  }

  export type itemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: itemWhereInput | itemWhereInput[]
    OR?: itemWhereInput[]
    NOT?: itemWhereInput | itemWhereInput[]
    name?: StringFilter<"item"> | string
    description?: StringNullableFilter<"item"> | string | null
    category?: EnumItemCategoryFilter<"item"> | $Enums.ItemCategory
    base_price?: DecimalFilter<"item"> | Decimal | DecimalJsLike | number | string
    reservation_has_item?: Reservation_has_itemListRelationFilter
    restaurant_has_item?: Restaurant_has_itemListRelationFilter
    menu_has_item?: Menu_has_itemListRelationFilter
  }, "id">

  export type itemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    base_price?: SortOrder
    _count?: itemCountOrderByAggregateInput
    _avg?: itemAvgOrderByAggregateInput
    _max?: itemMaxOrderByAggregateInput
    _min?: itemMinOrderByAggregateInput
    _sum?: itemSumOrderByAggregateInput
  }

  export type itemScalarWhereWithAggregatesInput = {
    AND?: itemScalarWhereWithAggregatesInput | itemScalarWhereWithAggregatesInput[]
    OR?: itemScalarWhereWithAggregatesInput[]
    NOT?: itemScalarWhereWithAggregatesInput | itemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"item"> | number
    name?: StringWithAggregatesFilter<"item"> | string
    description?: StringNullableWithAggregatesFilter<"item"> | string | null
    category?: EnumItemCategoryWithAggregatesFilter<"item"> | $Enums.ItemCategory
    base_price?: DecimalWithAggregatesFilter<"item"> | Decimal | DecimalJsLike | number | string
  }

  export type menuWhereInput = {
    AND?: menuWhereInput | menuWhereInput[]
    OR?: menuWhereInput[]
    NOT?: menuWhereInput | menuWhereInput[]
    id?: IntFilter<"menu"> | number
    restaurant_id?: IntFilter<"menu"> | number
    name?: StringFilter<"menu"> | string
    description?: StringNullableFilter<"menu"> | string | null
    is_active?: BoolNullableFilter<"menu"> | boolean | null
    created_at?: DateTimeNullableFilter<"menu"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"menu"> | Date | string | null
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    menu_has_item?: Menu_has_itemListRelationFilter
  }

  export type menuOrderByWithRelationInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    restaurant?: restaurantOrderByWithRelationInput
    menu_has_item?: menu_has_itemOrderByRelationAggregateInput
  }

  export type menuWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: menuWhereInput | menuWhereInput[]
    OR?: menuWhereInput[]
    NOT?: menuWhereInput | menuWhereInput[]
    restaurant_id?: IntFilter<"menu"> | number
    name?: StringFilter<"menu"> | string
    description?: StringNullableFilter<"menu"> | string | null
    is_active?: BoolNullableFilter<"menu"> | boolean | null
    created_at?: DateTimeNullableFilter<"menu"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"menu"> | Date | string | null
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    menu_has_item?: Menu_has_itemListRelationFilter
  }, "id">

  export type menuOrderByWithAggregationInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: menuCountOrderByAggregateInput
    _avg?: menuAvgOrderByAggregateInput
    _max?: menuMaxOrderByAggregateInput
    _min?: menuMinOrderByAggregateInput
    _sum?: menuSumOrderByAggregateInput
  }

  export type menuScalarWhereWithAggregatesInput = {
    AND?: menuScalarWhereWithAggregatesInput | menuScalarWhereWithAggregatesInput[]
    OR?: menuScalarWhereWithAggregatesInput[]
    NOT?: menuScalarWhereWithAggregatesInput | menuScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"menu"> | number
    restaurant_id?: IntWithAggregatesFilter<"menu"> | number
    name?: StringWithAggregatesFilter<"menu"> | string
    description?: StringNullableWithAggregatesFilter<"menu"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"menu"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"menu"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"menu"> | Date | string | null
  }

  export type menu_has_itemWhereInput = {
    AND?: menu_has_itemWhereInput | menu_has_itemWhereInput[]
    OR?: menu_has_itemWhereInput[]
    NOT?: menu_has_itemWhereInput | menu_has_itemWhereInput[]
    menu_id?: IntFilter<"menu_has_item"> | number
    item_id?: IntFilter<"menu_has_item"> | number
    menu?: XOR<MenuScalarRelationFilter, menuWhereInput>
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
  }

  export type menu_has_itemOrderByWithRelationInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
    menu?: menuOrderByWithRelationInput
    item?: itemOrderByWithRelationInput
  }

  export type menu_has_itemWhereUniqueInput = Prisma.AtLeast<{
    menu_id_item_id?: menu_has_itemMenu_idItem_idCompoundUniqueInput
    AND?: menu_has_itemWhereInput | menu_has_itemWhereInput[]
    OR?: menu_has_itemWhereInput[]
    NOT?: menu_has_itemWhereInput | menu_has_itemWhereInput[]
    menu_id?: IntFilter<"menu_has_item"> | number
    item_id?: IntFilter<"menu_has_item"> | number
    menu?: XOR<MenuScalarRelationFilter, menuWhereInput>
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
  }, "menu_id_item_id">

  export type menu_has_itemOrderByWithAggregationInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
    _count?: menu_has_itemCountOrderByAggregateInput
    _avg?: menu_has_itemAvgOrderByAggregateInput
    _max?: menu_has_itemMaxOrderByAggregateInput
    _min?: menu_has_itemMinOrderByAggregateInput
    _sum?: menu_has_itemSumOrderByAggregateInput
  }

  export type menu_has_itemScalarWhereWithAggregatesInput = {
    AND?: menu_has_itemScalarWhereWithAggregatesInput | menu_has_itemScalarWhereWithAggregatesInput[]
    OR?: menu_has_itemScalarWhereWithAggregatesInput[]
    NOT?: menu_has_itemScalarWhereWithAggregatesInput | menu_has_itemScalarWhereWithAggregatesInput[]
    menu_id?: IntWithAggregatesFilter<"menu_has_item"> | number
    item_id?: IntWithAggregatesFilter<"menu_has_item"> | number
  }

  export type messageWhereInput = {
    AND?: messageWhereInput | messageWhereInput[]
    OR?: messageWhereInput[]
    NOT?: messageWhereInput | messageWhereInput[]
    id?: IntFilter<"message"> | number
    user_id?: IntFilter<"message"> | number
    restaurant_id?: IntFilter<"message"> | number
    reservation_id?: IntNullableFilter<"message"> | number | null
    content?: StringFilter<"message"> | string
    status?: StringNullableFilter<"message"> | string | null
    created_at?: DateTimeNullableFilter<"message"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"message"> | Date | string | null
    reservation?: XOR<ReservationNullableScalarRelationFilter, reservationWhereInput> | null
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type messageOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrderInput | SortOrder
    content?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    reservation?: reservationOrderByWithRelationInput
    restaurant?: restaurantOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type messageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: messageWhereInput | messageWhereInput[]
    OR?: messageWhereInput[]
    NOT?: messageWhereInput | messageWhereInput[]
    user_id?: IntFilter<"message"> | number
    restaurant_id?: IntFilter<"message"> | number
    reservation_id?: IntNullableFilter<"message"> | number | null
    content?: StringFilter<"message"> | string
    status?: StringNullableFilter<"message"> | string | null
    created_at?: DateTimeNullableFilter<"message"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"message"> | Date | string | null
    reservation?: XOR<ReservationNullableScalarRelationFilter, reservationWhereInput> | null
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type messageOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrderInput | SortOrder
    content?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: messageCountOrderByAggregateInput
    _avg?: messageAvgOrderByAggregateInput
    _max?: messageMaxOrderByAggregateInput
    _min?: messageMinOrderByAggregateInput
    _sum?: messageSumOrderByAggregateInput
  }

  export type messageScalarWhereWithAggregatesInput = {
    AND?: messageScalarWhereWithAggregatesInput | messageScalarWhereWithAggregatesInput[]
    OR?: messageScalarWhereWithAggregatesInput[]
    NOT?: messageScalarWhereWithAggregatesInput | messageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"message"> | number
    user_id?: IntWithAggregatesFilter<"message"> | number
    restaurant_id?: IntWithAggregatesFilter<"message"> | number
    reservation_id?: IntNullableWithAggregatesFilter<"message"> | number | null
    content?: StringWithAggregatesFilter<"message"> | string
    status?: StringNullableWithAggregatesFilter<"message"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"message"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"message"> | Date | string | null
  }

  export type reservationWhereInput = {
    AND?: reservationWhereInput | reservationWhereInput[]
    OR?: reservationWhereInput[]
    NOT?: reservationWhereInput | reservationWhereInput[]
    id?: IntFilter<"reservation"> | number
    user_id?: IntFilter<"reservation"> | number
    restaurant_id?: IntFilter<"reservation"> | number
    timeslot_id?: IntFilter<"reservation"> | number
    status?: EnumReservationStatusFilter<"reservation"> | $Enums.ReservationStatus
    special_requests?: StringNullableFilter<"reservation"> | string | null
    created_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
    message?: MessageListRelationFilter
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    timeslot?: XOR<TimeslotScalarRelationFilter, timeslotWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    reservation_has_item?: Reservation_has_itemListRelationFilter
  }

  export type reservationOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
    status?: SortOrder
    special_requests?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    message?: messageOrderByRelationAggregateInput
    restaurant?: restaurantOrderByWithRelationInput
    timeslot?: timeslotOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    reservation_has_item?: reservation_has_itemOrderByRelationAggregateInput
  }

  export type reservationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: reservationWhereInput | reservationWhereInput[]
    OR?: reservationWhereInput[]
    NOT?: reservationWhereInput | reservationWhereInput[]
    user_id?: IntFilter<"reservation"> | number
    restaurant_id?: IntFilter<"reservation"> | number
    timeslot_id?: IntFilter<"reservation"> | number
    status?: EnumReservationStatusFilter<"reservation"> | $Enums.ReservationStatus
    special_requests?: StringNullableFilter<"reservation"> | string | null
    created_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
    message?: MessageListRelationFilter
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
    timeslot?: XOR<TimeslotScalarRelationFilter, timeslotWhereInput>
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    reservation_has_item?: Reservation_has_itemListRelationFilter
  }, "id">

  export type reservationOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
    status?: SortOrder
    special_requests?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: reservationCountOrderByAggregateInput
    _avg?: reservationAvgOrderByAggregateInput
    _max?: reservationMaxOrderByAggregateInput
    _min?: reservationMinOrderByAggregateInput
    _sum?: reservationSumOrderByAggregateInput
  }

  export type reservationScalarWhereWithAggregatesInput = {
    AND?: reservationScalarWhereWithAggregatesInput | reservationScalarWhereWithAggregatesInput[]
    OR?: reservationScalarWhereWithAggregatesInput[]
    NOT?: reservationScalarWhereWithAggregatesInput | reservationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"reservation"> | number
    user_id?: IntWithAggregatesFilter<"reservation"> | number
    restaurant_id?: IntWithAggregatesFilter<"reservation"> | number
    timeslot_id?: IntWithAggregatesFilter<"reservation"> | number
    status?: EnumReservationStatusWithAggregatesFilter<"reservation"> | $Enums.ReservationStatus
    special_requests?: StringNullableWithAggregatesFilter<"reservation"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"reservation"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"reservation"> | Date | string | null
  }

  export type reservation_has_itemWhereInput = {
    AND?: reservation_has_itemWhereInput | reservation_has_itemWhereInput[]
    OR?: reservation_has_itemWhereInput[]
    NOT?: reservation_has_itemWhereInput | reservation_has_itemWhereInput[]
    reservation_id?: IntFilter<"reservation_has_item"> | number
    item_id?: IntFilter<"reservation_has_item"> | number
    quantity?: IntFilter<"reservation_has_item"> | number
    item_price?: DecimalFilter<"reservation_has_item"> | Decimal | DecimalJsLike | number | string
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
    reservation?: XOR<ReservationScalarRelationFilter, reservationWhereInput>
  }

  export type reservation_has_itemOrderByWithRelationInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
    item?: itemOrderByWithRelationInput
    reservation?: reservationOrderByWithRelationInput
  }

  export type reservation_has_itemWhereUniqueInput = Prisma.AtLeast<{
    reservation_id_item_id?: reservation_has_itemReservation_idItem_idCompoundUniqueInput
    AND?: reservation_has_itemWhereInput | reservation_has_itemWhereInput[]
    OR?: reservation_has_itemWhereInput[]
    NOT?: reservation_has_itemWhereInput | reservation_has_itemWhereInput[]
    reservation_id?: IntFilter<"reservation_has_item"> | number
    item_id?: IntFilter<"reservation_has_item"> | number
    quantity?: IntFilter<"reservation_has_item"> | number
    item_price?: DecimalFilter<"reservation_has_item"> | Decimal | DecimalJsLike | number | string
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
    reservation?: XOR<ReservationScalarRelationFilter, reservationWhereInput>
  }, "reservation_id_item_id">

  export type reservation_has_itemOrderByWithAggregationInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
    _count?: reservation_has_itemCountOrderByAggregateInput
    _avg?: reservation_has_itemAvgOrderByAggregateInput
    _max?: reservation_has_itemMaxOrderByAggregateInput
    _min?: reservation_has_itemMinOrderByAggregateInput
    _sum?: reservation_has_itemSumOrderByAggregateInput
  }

  export type reservation_has_itemScalarWhereWithAggregatesInput = {
    AND?: reservation_has_itemScalarWhereWithAggregatesInput | reservation_has_itemScalarWhereWithAggregatesInput[]
    OR?: reservation_has_itemScalarWhereWithAggregatesInput[]
    NOT?: reservation_has_itemScalarWhereWithAggregatesInput | reservation_has_itemScalarWhereWithAggregatesInput[]
    reservation_id?: IntWithAggregatesFilter<"reservation_has_item"> | number
    item_id?: IntWithAggregatesFilter<"reservation_has_item"> | number
    quantity?: IntWithAggregatesFilter<"reservation_has_item"> | number
    item_price?: DecimalWithAggregatesFilter<"reservation_has_item"> | Decimal | DecimalJsLike | number | string
  }

  export type restaurantWhereInput = {
    AND?: restaurantWhereInput | restaurantWhereInput[]
    OR?: restaurantWhereInput[]
    NOT?: restaurantWhereInput | restaurantWhereInput[]
    id?: IntFilter<"restaurant"> | number
    owner_id?: IntFilter<"restaurant"> | number
    name?: StringFilter<"restaurant"> | string
    address?: StringNullableFilter<"restaurant"> | string | null
    opening_hours?: StringNullableFilter<"restaurant"> | string | null
    genre?: StringNullableFilter<"restaurant"> | string | null
    siret?: StringFilter<"restaurant"> | string
    description?: StringNullableFilter<"restaurant"> | string | null
    image_url?: StringFilter<"restaurant"> | string
    is_active?: BoolNullableFilter<"restaurant"> | boolean | null
    created_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
    menu?: MenuListRelationFilter
    message?: MessageListRelationFilter
    reservation?: ReservationListRelationFilter
    restaurant_has_item?: Restaurant_has_itemListRelationFilter
    timeslot?: TimeslotListRelationFilter
    owner?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type restaurantOrderByWithRelationInput = {
    id?: SortOrder
    owner_id?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    opening_hours?: SortOrderInput | SortOrder
    genre?: SortOrderInput | SortOrder
    siret?: SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    menu?: menuOrderByRelationAggregateInput
    message?: messageOrderByRelationAggregateInput
    reservation?: reservationOrderByRelationAggregateInput
    restaurant_has_item?: restaurant_has_itemOrderByRelationAggregateInput
    timeslot?: timeslotOrderByRelationAggregateInput
    owner?: userOrderByWithRelationInput
  }

  export type restaurantWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    siret?: string
    AND?: restaurantWhereInput | restaurantWhereInput[]
    OR?: restaurantWhereInput[]
    NOT?: restaurantWhereInput | restaurantWhereInput[]
    owner_id?: IntFilter<"restaurant"> | number
    name?: StringFilter<"restaurant"> | string
    address?: StringNullableFilter<"restaurant"> | string | null
    opening_hours?: StringNullableFilter<"restaurant"> | string | null
    genre?: StringNullableFilter<"restaurant"> | string | null
    description?: StringNullableFilter<"restaurant"> | string | null
    image_url?: StringFilter<"restaurant"> | string
    is_active?: BoolNullableFilter<"restaurant"> | boolean | null
    created_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
    menu?: MenuListRelationFilter
    message?: MessageListRelationFilter
    reservation?: ReservationListRelationFilter
    restaurant_has_item?: Restaurant_has_itemListRelationFilter
    timeslot?: TimeslotListRelationFilter
    owner?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "id" | "siret">

  export type restaurantOrderByWithAggregationInput = {
    id?: SortOrder
    owner_id?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    opening_hours?: SortOrderInput | SortOrder
    genre?: SortOrderInput | SortOrder
    siret?: SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: restaurantCountOrderByAggregateInput
    _avg?: restaurantAvgOrderByAggregateInput
    _max?: restaurantMaxOrderByAggregateInput
    _min?: restaurantMinOrderByAggregateInput
    _sum?: restaurantSumOrderByAggregateInput
  }

  export type restaurantScalarWhereWithAggregatesInput = {
    AND?: restaurantScalarWhereWithAggregatesInput | restaurantScalarWhereWithAggregatesInput[]
    OR?: restaurantScalarWhereWithAggregatesInput[]
    NOT?: restaurantScalarWhereWithAggregatesInput | restaurantScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"restaurant"> | number
    owner_id?: IntWithAggregatesFilter<"restaurant"> | number
    name?: StringWithAggregatesFilter<"restaurant"> | string
    address?: StringNullableWithAggregatesFilter<"restaurant"> | string | null
    opening_hours?: StringNullableWithAggregatesFilter<"restaurant"> | string | null
    genre?: StringNullableWithAggregatesFilter<"restaurant"> | string | null
    siret?: StringWithAggregatesFilter<"restaurant"> | string
    description?: StringNullableWithAggregatesFilter<"restaurant"> | string | null
    image_url?: StringWithAggregatesFilter<"restaurant"> | string
    is_active?: BoolNullableWithAggregatesFilter<"restaurant"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"restaurant"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"restaurant"> | Date | string | null
  }

  export type restaurant_has_itemWhereInput = {
    AND?: restaurant_has_itemWhereInput | restaurant_has_itemWhereInput[]
    OR?: restaurant_has_itemWhereInput[]
    NOT?: restaurant_has_itemWhereInput | restaurant_has_itemWhereInput[]
    restaurant_id?: IntFilter<"restaurant_has_item"> | number
    item_id?: IntFilter<"restaurant_has_item"> | number
    current_price?: DecimalFilter<"restaurant_has_item"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"restaurant_has_item"> | number
    is_available?: BoolNullableFilter<"restaurant_has_item"> | boolean | null
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
  }

  export type restaurant_has_itemOrderByWithRelationInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
    is_available?: SortOrderInput | SortOrder
    item?: itemOrderByWithRelationInput
    restaurant?: restaurantOrderByWithRelationInput
  }

  export type restaurant_has_itemWhereUniqueInput = Prisma.AtLeast<{
    restaurant_id_item_id?: restaurant_has_itemRestaurant_idItem_idCompoundUniqueInput
    AND?: restaurant_has_itemWhereInput | restaurant_has_itemWhereInput[]
    OR?: restaurant_has_itemWhereInput[]
    NOT?: restaurant_has_itemWhereInput | restaurant_has_itemWhereInput[]
    restaurant_id?: IntFilter<"restaurant_has_item"> | number
    item_id?: IntFilter<"restaurant_has_item"> | number
    current_price?: DecimalFilter<"restaurant_has_item"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"restaurant_has_item"> | number
    is_available?: BoolNullableFilter<"restaurant_has_item"> | boolean | null
    item?: XOR<ItemScalarRelationFilter, itemWhereInput>
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
  }, "restaurant_id_item_id">

  export type restaurant_has_itemOrderByWithAggregationInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
    is_available?: SortOrderInput | SortOrder
    _count?: restaurant_has_itemCountOrderByAggregateInput
    _avg?: restaurant_has_itemAvgOrderByAggregateInput
    _max?: restaurant_has_itemMaxOrderByAggregateInput
    _min?: restaurant_has_itemMinOrderByAggregateInput
    _sum?: restaurant_has_itemSumOrderByAggregateInput
  }

  export type restaurant_has_itemScalarWhereWithAggregatesInput = {
    AND?: restaurant_has_itemScalarWhereWithAggregatesInput | restaurant_has_itemScalarWhereWithAggregatesInput[]
    OR?: restaurant_has_itemScalarWhereWithAggregatesInput[]
    NOT?: restaurant_has_itemScalarWhereWithAggregatesInput | restaurant_has_itemScalarWhereWithAggregatesInput[]
    restaurant_id?: IntWithAggregatesFilter<"restaurant_has_item"> | number
    item_id?: IntWithAggregatesFilter<"restaurant_has_item"> | number
    current_price?: DecimalWithAggregatesFilter<"restaurant_has_item"> | Decimal | DecimalJsLike | number | string
    stock?: IntWithAggregatesFilter<"restaurant_has_item"> | number
    is_available?: BoolNullableWithAggregatesFilter<"restaurant_has_item"> | boolean | null
  }

  export type timeslotWhereInput = {
    AND?: timeslotWhereInput | timeslotWhereInput[]
    OR?: timeslotWhereInput[]
    NOT?: timeslotWhereInput | timeslotWhereInput[]
    id?: IntFilter<"timeslot"> | number
    restaurant_id?: IntFilter<"timeslot"> | number
    date?: DateTimeFilter<"timeslot"> | Date | string
    start_at?: DateTimeFilter<"timeslot"> | Date | string
    end_at?: DateTimeFilter<"timeslot"> | Date | string
    capacity?: IntFilter<"timeslot"> | number
    status?: EnumTimeslotStatusFilter<"timeslot"> | $Enums.TimeslotStatus
    created_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
    reservation?: ReservationListRelationFilter
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
  }

  export type timeslotOrderByWithRelationInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    date?: SortOrder
    start_at?: SortOrder
    end_at?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    reservation?: reservationOrderByRelationAggregateInput
    restaurant?: restaurantOrderByWithRelationInput
  }

  export type timeslotWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: timeslotWhereInput | timeslotWhereInput[]
    OR?: timeslotWhereInput[]
    NOT?: timeslotWhereInput | timeslotWhereInput[]
    restaurant_id?: IntFilter<"timeslot"> | number
    date?: DateTimeFilter<"timeslot"> | Date | string
    start_at?: DateTimeFilter<"timeslot"> | Date | string
    end_at?: DateTimeFilter<"timeslot"> | Date | string
    capacity?: IntFilter<"timeslot"> | number
    status?: EnumTimeslotStatusFilter<"timeslot"> | $Enums.TimeslotStatus
    created_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
    reservation?: ReservationListRelationFilter
    restaurant?: XOR<RestaurantScalarRelationFilter, restaurantWhereInput>
  }, "id">

  export type timeslotOrderByWithAggregationInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    date?: SortOrder
    start_at?: SortOrder
    end_at?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: timeslotCountOrderByAggregateInput
    _avg?: timeslotAvgOrderByAggregateInput
    _max?: timeslotMaxOrderByAggregateInput
    _min?: timeslotMinOrderByAggregateInput
    _sum?: timeslotSumOrderByAggregateInput
  }

  export type timeslotScalarWhereWithAggregatesInput = {
    AND?: timeslotScalarWhereWithAggregatesInput | timeslotScalarWhereWithAggregatesInput[]
    OR?: timeslotScalarWhereWithAggregatesInput[]
    NOT?: timeslotScalarWhereWithAggregatesInput | timeslotScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"timeslot"> | number
    restaurant_id?: IntWithAggregatesFilter<"timeslot"> | number
    date?: DateTimeWithAggregatesFilter<"timeslot"> | Date | string
    start_at?: DateTimeWithAggregatesFilter<"timeslot"> | Date | string
    end_at?: DateTimeWithAggregatesFilter<"timeslot"> | Date | string
    capacity?: IntWithAggregatesFilter<"timeslot"> | number
    status?: EnumTimeslotStatusWithAggregatesFilter<"timeslot"> | $Enums.TimeslotStatus
    created_at?: DateTimeNullableWithAggregatesFilter<"timeslot"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"timeslot"> | Date | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    type_user?: EnumUserTypeFilter<"user"> | $Enums.UserType
    first_name?: StringFilter<"user"> | string
    last_name?: StringNullableFilter<"user"> | string | null
    email?: StringFilter<"user"> | string
    phone_number?: StringNullableFilter<"user"> | string | null
    password_hash?: StringFilter<"user"> | string
    resetToken?: StringNullableFilter<"user"> | string | null
    created_at?: DateTimeNullableFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"user"> | Date | string | null
    message?: MessageListRelationFilter
    reservation?: ReservationListRelationFilter
    restaurants?: RestaurantListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    type_user?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    resetToken?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    message?: messageOrderByRelationAggregateInput
    reservation?: reservationOrderByRelationAggregateInput
    restaurants?: restaurantOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    resetToken?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    type_user?: EnumUserTypeFilter<"user"> | $Enums.UserType
    first_name?: StringFilter<"user"> | string
    last_name?: StringNullableFilter<"user"> | string | null
    phone_number?: StringNullableFilter<"user"> | string | null
    password_hash?: StringFilter<"user"> | string
    created_at?: DateTimeNullableFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"user"> | Date | string | null
    message?: MessageListRelationFilter
    reservation?: ReservationListRelationFilter
    restaurants?: RestaurantListRelationFilter
  }, "id" | "email" | "resetToken">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    type_user?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrder
    phone_number?: SortOrderInput | SortOrder
    password_hash?: SortOrder
    resetToken?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    type_user?: EnumUserTypeWithAggregatesFilter<"user"> | $Enums.UserType
    first_name?: StringWithAggregatesFilter<"user"> | string
    last_name?: StringNullableWithAggregatesFilter<"user"> | string | null
    email?: StringWithAggregatesFilter<"user"> | string
    phone_number?: StringNullableWithAggregatesFilter<"user"> | string | null
    password_hash?: StringWithAggregatesFilter<"user"> | string
    resetToken?: StringNullableWithAggregatesFilter<"user"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"user"> | Date | string | null
  }

  export type itemCreateInput = {
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutItemInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemCreateNestedManyWithoutItemInput
  }

  export type itemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutItemInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemUncheckedCreateNestedManyWithoutItemInput
  }

  export type itemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUpdateManyWithoutItemNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUpdateManyWithoutItemNestedInput
  }

  export type itemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutItemNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type itemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
  }

  export type itemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type itemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type menuCreateInput = {
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    restaurant: restaurantCreateNestedOneWithoutMenuInput
    menu_has_item?: menu_has_itemCreateNestedManyWithoutMenuInput
  }

  export type menuUncheckedCreateInput = {
    id?: number
    restaurant_id: number
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu_has_item?: menu_has_itemUncheckedCreateNestedManyWithoutMenuInput
  }

  export type menuUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    restaurant?: restaurantUpdateOneRequiredWithoutMenuNestedInput
    menu_has_item?: menu_has_itemUpdateManyWithoutMenuNestedInput
  }

  export type menuUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu_has_item?: menu_has_itemUncheckedUpdateManyWithoutMenuNestedInput
  }

  export type menuCreateManyInput = {
    id?: number
    restaurant_id: number
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type menuUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menuUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type menu_has_itemCreateInput = {
    menu: menuCreateNestedOneWithoutMenu_has_itemInput
    item: itemCreateNestedOneWithoutMenu_has_itemInput
  }

  export type menu_has_itemUncheckedCreateInput = {
    menu_id: number
    item_id: number
  }

  export type menu_has_itemUpdateInput = {
    menu?: menuUpdateOneRequiredWithoutMenu_has_itemNestedInput
    item?: itemUpdateOneRequiredWithoutMenu_has_itemNestedInput
  }

  export type menu_has_itemUncheckedUpdateInput = {
    menu_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type menu_has_itemCreateManyInput = {
    menu_id: number
    item_id: number
  }

  export type menu_has_itemUpdateManyMutationInput = {

  }

  export type menu_has_itemUncheckedUpdateManyInput = {
    menu_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type messageCreateInput = {
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedOneWithoutMessageInput
    restaurant: restaurantCreateNestedOneWithoutMessageInput
    user: userCreateNestedOneWithoutMessageInput
  }

  export type messageUncheckedCreateInput = {
    id?: number
    user_id: number
    restaurant_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateOneWithoutMessageNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutMessageNestedInput
    user?: userUpdateOneRequiredWithoutMessageNestedInput
  }

  export type messageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageCreateManyInput = {
    id?: number
    user_id: number
    restaurant_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservationCreateInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutReservationInput
    restaurant: restaurantCreateNestedOneWithoutReservationInput
    timeslot: timeslotCreateNestedOneWithoutReservationInput
    user: userCreateNestedOneWithoutReservationInput
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutReservationInput
  }

  export type reservationUncheckedCreateInput = {
    id?: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutReservationInput
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationUpdateInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutReservationNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutReservationNestedInput
    timeslot?: timeslotUpdateOneRequiredWithoutReservationNestedInput
    user?: userUpdateOneRequiredWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type reservationCreateManyInput = {
    id?: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reservationUpdateManyMutationInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservation_has_itemCreateInput = {
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
    item: itemCreateNestedOneWithoutReservation_has_itemInput
    reservation: reservationCreateNestedOneWithoutReservation_has_itemInput
  }

  export type reservation_has_itemUncheckedCreateInput = {
    reservation_id: number
    item_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    item?: itemUpdateOneRequiredWithoutReservation_has_itemNestedInput
    reservation?: reservationUpdateOneRequiredWithoutReservation_has_itemNestedInput
  }

  export type reservation_has_itemUncheckedUpdateInput = {
    reservation_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemCreateManyInput = {
    reservation_id: number
    item_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUncheckedUpdateManyInput = {
    reservation_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type restaurantCreateInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    message?: messageCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: JsonObject | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    message?: messageUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type restaurantCreateManyInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type restaurantUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type restaurantUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type restaurant_has_itemCreateInput = {
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
    item: itemCreateNestedOneWithoutRestaurant_has_itemInput
    restaurant: restaurantCreateNestedOneWithoutRestaurant_has_itemInput
  }

  export type restaurant_has_itemUncheckedCreateInput = {
    restaurant_id: number
    item_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type restaurant_has_itemUpdateInput = {
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    item?: itemUpdateOneRequiredWithoutRestaurant_has_itemNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutRestaurant_has_itemNestedInput
  }

  export type restaurant_has_itemUncheckedUpdateInput = {
    restaurant_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type restaurant_has_itemCreateManyInput = {
    restaurant_id: number
    item_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type restaurant_has_itemUpdateManyMutationInput = {
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type restaurant_has_itemUncheckedUpdateManyInput = {
    restaurant_id?: IntFieldUpdateOperationsInput | number
    item_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type timeslotCreateInput = {
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedManyWithoutTimeslotInput
    restaurant: restaurantCreateNestedOneWithoutTimeslotInput
  }

  export type timeslotUncheckedCreateInput = {
    id?: number
    restaurant_id: number
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationUncheckedCreateNestedManyWithoutTimeslotInput
  }

  export type timeslotUpdateInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateManyWithoutTimeslotNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutTimeslotNestedInput
  }

  export type timeslotUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUncheckedUpdateManyWithoutTimeslotNestedInput
  }

  export type timeslotCreateManyInput = {
    id?: number
    restaurant_id: number
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type timeslotUpdateManyMutationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type timeslotUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateInput = {
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutUserInput
    reservation?: reservationCreateNestedManyWithoutUserInput
    restaurants?: restaurantCreateNestedManyWithoutOwnerInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutUserInput
    reservation?: reservationUncheckedCreateNestedManyWithoutUserInput
    restaurants?: restaurantUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type userUpdateInput = {
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutUserNestedInput
    reservation?: reservationUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUpdateManyWithoutOwnerNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutUserNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type userUpdateManyMutationInput = {
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumItemCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ItemCategory | EnumItemCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumItemCategoryFilter<$PrismaModel> | $Enums.ItemCategory
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Reservation_has_itemListRelationFilter = {
    every?: reservation_has_itemWhereInput
    some?: reservation_has_itemWhereInput
    none?: reservation_has_itemWhereInput
  }

  export type Restaurant_has_itemListRelationFilter = {
    every?: restaurant_has_itemWhereInput
    some?: restaurant_has_itemWhereInput
    none?: restaurant_has_itemWhereInput
  }

  export type Menu_has_itemListRelationFilter = {
    every?: menu_has_itemWhereInput
    some?: menu_has_itemWhereInput
    none?: menu_has_itemWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type reservation_has_itemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type restaurant_has_itemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type menu_has_itemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type itemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    base_price?: SortOrder
  }

  export type itemAvgOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
  }

  export type itemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    base_price?: SortOrder
  }

  export type itemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    base_price?: SortOrder
  }

  export type itemSumOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumItemCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ItemCategory | EnumItemCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumItemCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ItemCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumItemCategoryFilter<$PrismaModel>
    _max?: NestedEnumItemCategoryFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type RestaurantScalarRelationFilter = {
    is?: restaurantWhereInput
    isNot?: restaurantWhereInput
  }

  export type menuCountOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type menuAvgOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
  }

  export type menuMaxOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type menuMinOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type menuSumOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type MenuScalarRelationFilter = {
    is?: menuWhereInput
    isNot?: menuWhereInput
  }

  export type ItemScalarRelationFilter = {
    is?: itemWhereInput
    isNot?: itemWhereInput
  }

  export type menu_has_itemMenu_idItem_idCompoundUniqueInput = {
    menu_id: number
    item_id: number
  }

  export type menu_has_itemCountOrderByAggregateInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
  }

  export type menu_has_itemAvgOrderByAggregateInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
  }

  export type menu_has_itemMaxOrderByAggregateInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
  }

  export type menu_has_itemMinOrderByAggregateInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
  }

  export type menu_has_itemSumOrderByAggregateInput = {
    menu_id?: SortOrder
    item_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ReservationNullableScalarRelationFilter = {
    is?: reservationWhereInput | null
    isNot?: reservationWhereInput | null
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type messageCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrder
    content?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type messageAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrder
  }

  export type messageMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrder
    content?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type messageMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrder
    content?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type messageSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    reservation_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumReservationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusFilter<$PrismaModel> | $Enums.ReservationStatus
  }

  export type MessageListRelationFilter = {
    every?: messageWhereInput
    some?: messageWhereInput
    none?: messageWhereInput
  }

  export type TimeslotScalarRelationFilter = {
    is?: timeslotWhereInput
    isNot?: timeslotWhereInput
  }

  export type messageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reservationCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
    status?: SortOrder
    special_requests?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reservationAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
  }

  export type reservationMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
    status?: SortOrder
    special_requests?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reservationMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
    status?: SortOrder
    special_requests?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reservationSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    restaurant_id?: SortOrder
    timeslot_id?: SortOrder
  }

  export type EnumReservationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationStatusFilter<$PrismaModel>
    _max?: NestedEnumReservationStatusFilter<$PrismaModel>
  }

  export type ReservationScalarRelationFilter = {
    is?: reservationWhereInput
    isNot?: reservationWhereInput
  }

  export type reservation_has_itemReservation_idItem_idCompoundUniqueInput = {
    reservation_id: number
    item_id: number
  }

  export type reservation_has_itemCountOrderByAggregateInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
  }

  export type reservation_has_itemAvgOrderByAggregateInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
  }

  export type reservation_has_itemMaxOrderByAggregateInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
  }

  export type reservation_has_itemMinOrderByAggregateInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
  }

  export type reservation_has_itemSumOrderByAggregateInput = {
    reservation_id?: SortOrder
    item_id?: SortOrder
    quantity?: SortOrder
    item_price?: SortOrder
  }

  export type MenuListRelationFilter = {
    every?: menuWhereInput
    some?: menuWhereInput
    none?: menuWhereInput
  }

  export type ReservationListRelationFilter = {
    every?: reservationWhereInput
    some?: reservationWhereInput
    none?: reservationWhereInput
  }

  export type TimeslotListRelationFilter = {
    every?: timeslotWhereInput
    some?: timeslotWhereInput
    none?: timeslotWhereInput
  }

  export type menuOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type timeslotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type restaurantCountOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    opening_hours?: SortOrder
    genre?: SortOrder
    siret?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type restaurantAvgOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
  }

  export type restaurantMaxOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    opening_hours?: SortOrder
    genre?: SortOrder
    siret?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type restaurantMinOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    opening_hours?: SortOrder
    genre?: SortOrder
    siret?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type restaurantSumOrderByAggregateInput = {
    id?: SortOrder
    owner_id?: SortOrder
  }

  export type restaurant_has_itemRestaurant_idItem_idCompoundUniqueInput = {
    restaurant_id: number
    item_id: number
  }

  export type restaurant_has_itemCountOrderByAggregateInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
    is_available?: SortOrder
  }

  export type restaurant_has_itemAvgOrderByAggregateInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
  }

  export type restaurant_has_itemMaxOrderByAggregateInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
    is_available?: SortOrder
  }

  export type restaurant_has_itemMinOrderByAggregateInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
    is_available?: SortOrder
  }

  export type restaurant_has_itemSumOrderByAggregateInput = {
    restaurant_id?: SortOrder
    item_id?: SortOrder
    current_price?: SortOrder
    stock?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EnumTimeslotStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeslotStatus | EnumTimeslotStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeslotStatusFilter<$PrismaModel> | $Enums.TimeslotStatus
  }

  export type timeslotCountOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    date?: SortOrder
    start_at?: SortOrder
    end_at?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type timeslotAvgOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    capacity?: SortOrder
  }

  export type timeslotMaxOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    date?: SortOrder
    start_at?: SortOrder
    end_at?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type timeslotMinOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    date?: SortOrder
    start_at?: SortOrder
    end_at?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type timeslotSumOrderByAggregateInput = {
    id?: SortOrder
    restaurant_id?: SortOrder
    capacity?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumTimeslotStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeslotStatus | EnumTimeslotStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeslotStatusWithAggregatesFilter<$PrismaModel> | $Enums.TimeslotStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTimeslotStatusFilter<$PrismaModel>
    _max?: NestedEnumTimeslotStatusFilter<$PrismaModel>
  }

  export type EnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type RestaurantListRelationFilter = {
    every?: restaurantWhereInput
    some?: restaurantWhereInput
    none?: restaurantWhereInput
  }

  export type restaurantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    type_user?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    password_hash?: SortOrder
    resetToken?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    type_user?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    password_hash?: SortOrder
    resetToken?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    type_user?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone_number?: SortOrder
    password_hash?: SortOrder
    resetToken?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type reservation_has_itemCreateNestedManyWithoutItemInput = {
    create?: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput> | reservation_has_itemCreateWithoutItemInput[] | reservation_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutItemInput | reservation_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: reservation_has_itemCreateManyItemInputEnvelope
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
  }

  export type restaurant_has_itemCreateNestedManyWithoutItemInput = {
    create?: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput> | restaurant_has_itemCreateWithoutItemInput[] | restaurant_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutItemInput | restaurant_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: restaurant_has_itemCreateManyItemInputEnvelope
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
  }

  export type menu_has_itemCreateNestedManyWithoutItemInput = {
    create?: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput> | menu_has_itemCreateWithoutItemInput[] | menu_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutItemInput | menu_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: menu_has_itemCreateManyItemInputEnvelope
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
  }

  export type reservation_has_itemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput> | reservation_has_itemCreateWithoutItemInput[] | reservation_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutItemInput | reservation_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: reservation_has_itemCreateManyItemInputEnvelope
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
  }

  export type restaurant_has_itemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput> | restaurant_has_itemCreateWithoutItemInput[] | restaurant_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutItemInput | restaurant_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: restaurant_has_itemCreateManyItemInputEnvelope
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
  }

  export type menu_has_itemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput> | menu_has_itemCreateWithoutItemInput[] | menu_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutItemInput | menu_has_itemCreateOrConnectWithoutItemInput[]
    createMany?: menu_has_itemCreateManyItemInputEnvelope
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumItemCategoryFieldUpdateOperationsInput = {
    set?: $Enums.ItemCategory
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUpdateManyWithoutItemNestedInput = {
    create?: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput> | reservation_has_itemCreateWithoutItemInput[] | reservation_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutItemInput | reservation_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: reservation_has_itemUpsertWithWhereUniqueWithoutItemInput | reservation_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: reservation_has_itemCreateManyItemInputEnvelope
    set?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    disconnect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    delete?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    update?: reservation_has_itemUpdateWithWhereUniqueWithoutItemInput | reservation_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: reservation_has_itemUpdateManyWithWhereWithoutItemInput | reservation_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
  }

  export type restaurant_has_itemUpdateManyWithoutItemNestedInput = {
    create?: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput> | restaurant_has_itemCreateWithoutItemInput[] | restaurant_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutItemInput | restaurant_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: restaurant_has_itemUpsertWithWhereUniqueWithoutItemInput | restaurant_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: restaurant_has_itemCreateManyItemInputEnvelope
    set?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    disconnect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    delete?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    update?: restaurant_has_itemUpdateWithWhereUniqueWithoutItemInput | restaurant_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: restaurant_has_itemUpdateManyWithWhereWithoutItemInput | restaurant_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
  }

  export type menu_has_itemUpdateManyWithoutItemNestedInput = {
    create?: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput> | menu_has_itemCreateWithoutItemInput[] | menu_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutItemInput | menu_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: menu_has_itemUpsertWithWhereUniqueWithoutItemInput | menu_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: menu_has_itemCreateManyItemInputEnvelope
    set?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    disconnect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    delete?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    update?: menu_has_itemUpdateWithWhereUniqueWithoutItemInput | menu_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: menu_has_itemUpdateManyWithWhereWithoutItemInput | menu_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type reservation_has_itemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput> | reservation_has_itemCreateWithoutItemInput[] | reservation_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutItemInput | reservation_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: reservation_has_itemUpsertWithWhereUniqueWithoutItemInput | reservation_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: reservation_has_itemCreateManyItemInputEnvelope
    set?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    disconnect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    delete?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    update?: reservation_has_itemUpdateWithWhereUniqueWithoutItemInput | reservation_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: reservation_has_itemUpdateManyWithWhereWithoutItemInput | reservation_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
  }

  export type restaurant_has_itemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput> | restaurant_has_itemCreateWithoutItemInput[] | restaurant_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutItemInput | restaurant_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: restaurant_has_itemUpsertWithWhereUniqueWithoutItemInput | restaurant_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: restaurant_has_itemCreateManyItemInputEnvelope
    set?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    disconnect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    delete?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    update?: restaurant_has_itemUpdateWithWhereUniqueWithoutItemInput | restaurant_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: restaurant_has_itemUpdateManyWithWhereWithoutItemInput | restaurant_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
  }

  export type menu_has_itemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput> | menu_has_itemCreateWithoutItemInput[] | menu_has_itemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutItemInput | menu_has_itemCreateOrConnectWithoutItemInput[]
    upsert?: menu_has_itemUpsertWithWhereUniqueWithoutItemInput | menu_has_itemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: menu_has_itemCreateManyItemInputEnvelope
    set?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    disconnect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    delete?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    update?: menu_has_itemUpdateWithWhereUniqueWithoutItemInput | menu_has_itemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: menu_has_itemUpdateManyWithWhereWithoutItemInput | menu_has_itemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
  }

  export type restaurantCreateNestedOneWithoutMenuInput = {
    create?: XOR<restaurantCreateWithoutMenuInput, restaurantUncheckedCreateWithoutMenuInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutMenuInput
    connect?: restaurantWhereUniqueInput
  }

  export type menu_has_itemCreateNestedManyWithoutMenuInput = {
    create?: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput> | menu_has_itemCreateWithoutMenuInput[] | menu_has_itemUncheckedCreateWithoutMenuInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutMenuInput | menu_has_itemCreateOrConnectWithoutMenuInput[]
    createMany?: menu_has_itemCreateManyMenuInputEnvelope
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
  }

  export type menu_has_itemUncheckedCreateNestedManyWithoutMenuInput = {
    create?: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput> | menu_has_itemCreateWithoutMenuInput[] | menu_has_itemUncheckedCreateWithoutMenuInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutMenuInput | menu_has_itemCreateOrConnectWithoutMenuInput[]
    createMany?: menu_has_itemCreateManyMenuInputEnvelope
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type restaurantUpdateOneRequiredWithoutMenuNestedInput = {
    create?: XOR<restaurantCreateWithoutMenuInput, restaurantUncheckedCreateWithoutMenuInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutMenuInput
    upsert?: restaurantUpsertWithoutMenuInput
    connect?: restaurantWhereUniqueInput
    update?: XOR<XOR<restaurantUpdateToOneWithWhereWithoutMenuInput, restaurantUpdateWithoutMenuInput>, restaurantUncheckedUpdateWithoutMenuInput>
  }

  export type menu_has_itemUpdateManyWithoutMenuNestedInput = {
    create?: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput> | menu_has_itemCreateWithoutMenuInput[] | menu_has_itemUncheckedCreateWithoutMenuInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutMenuInput | menu_has_itemCreateOrConnectWithoutMenuInput[]
    upsert?: menu_has_itemUpsertWithWhereUniqueWithoutMenuInput | menu_has_itemUpsertWithWhereUniqueWithoutMenuInput[]
    createMany?: menu_has_itemCreateManyMenuInputEnvelope
    set?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    disconnect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    delete?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    update?: menu_has_itemUpdateWithWhereUniqueWithoutMenuInput | menu_has_itemUpdateWithWhereUniqueWithoutMenuInput[]
    updateMany?: menu_has_itemUpdateManyWithWhereWithoutMenuInput | menu_has_itemUpdateManyWithWhereWithoutMenuInput[]
    deleteMany?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
  }

  export type menu_has_itemUncheckedUpdateManyWithoutMenuNestedInput = {
    create?: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput> | menu_has_itemCreateWithoutMenuInput[] | menu_has_itemUncheckedCreateWithoutMenuInput[]
    connectOrCreate?: menu_has_itemCreateOrConnectWithoutMenuInput | menu_has_itemCreateOrConnectWithoutMenuInput[]
    upsert?: menu_has_itemUpsertWithWhereUniqueWithoutMenuInput | menu_has_itemUpsertWithWhereUniqueWithoutMenuInput[]
    createMany?: menu_has_itemCreateManyMenuInputEnvelope
    set?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    disconnect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    delete?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    connect?: menu_has_itemWhereUniqueInput | menu_has_itemWhereUniqueInput[]
    update?: menu_has_itemUpdateWithWhereUniqueWithoutMenuInput | menu_has_itemUpdateWithWhereUniqueWithoutMenuInput[]
    updateMany?: menu_has_itemUpdateManyWithWhereWithoutMenuInput | menu_has_itemUpdateManyWithWhereWithoutMenuInput[]
    deleteMany?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
  }

  export type menuCreateNestedOneWithoutMenu_has_itemInput = {
    create?: XOR<menuCreateWithoutMenu_has_itemInput, menuUncheckedCreateWithoutMenu_has_itemInput>
    connectOrCreate?: menuCreateOrConnectWithoutMenu_has_itemInput
    connect?: menuWhereUniqueInput
  }

  export type itemCreateNestedOneWithoutMenu_has_itemInput = {
    create?: XOR<itemCreateWithoutMenu_has_itemInput, itemUncheckedCreateWithoutMenu_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutMenu_has_itemInput
    connect?: itemWhereUniqueInput
  }

  export type menuUpdateOneRequiredWithoutMenu_has_itemNestedInput = {
    create?: XOR<menuCreateWithoutMenu_has_itemInput, menuUncheckedCreateWithoutMenu_has_itemInput>
    connectOrCreate?: menuCreateOrConnectWithoutMenu_has_itemInput
    upsert?: menuUpsertWithoutMenu_has_itemInput
    connect?: menuWhereUniqueInput
    update?: XOR<XOR<menuUpdateToOneWithWhereWithoutMenu_has_itemInput, menuUpdateWithoutMenu_has_itemInput>, menuUncheckedUpdateWithoutMenu_has_itemInput>
  }

  export type itemUpdateOneRequiredWithoutMenu_has_itemNestedInput = {
    create?: XOR<itemCreateWithoutMenu_has_itemInput, itemUncheckedCreateWithoutMenu_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutMenu_has_itemInput
    upsert?: itemUpsertWithoutMenu_has_itemInput
    connect?: itemWhereUniqueInput
    update?: XOR<XOR<itemUpdateToOneWithWhereWithoutMenu_has_itemInput, itemUpdateWithoutMenu_has_itemInput>, itemUncheckedUpdateWithoutMenu_has_itemInput>
  }

  export type reservationCreateNestedOneWithoutMessageInput = {
    create?: XOR<reservationCreateWithoutMessageInput, reservationUncheckedCreateWithoutMessageInput>
    connectOrCreate?: reservationCreateOrConnectWithoutMessageInput
    connect?: reservationWhereUniqueInput
  }

  export type restaurantCreateNestedOneWithoutMessageInput = {
    create?: XOR<restaurantCreateWithoutMessageInput, restaurantUncheckedCreateWithoutMessageInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutMessageInput
    connect?: restaurantWhereUniqueInput
  }

  export type userCreateNestedOneWithoutMessageInput = {
    create?: XOR<userCreateWithoutMessageInput, userUncheckedCreateWithoutMessageInput>
    connectOrCreate?: userCreateOrConnectWithoutMessageInput
    connect?: userWhereUniqueInput
  }

  export type reservationUpdateOneWithoutMessageNestedInput = {
    create?: XOR<reservationCreateWithoutMessageInput, reservationUncheckedCreateWithoutMessageInput>
    connectOrCreate?: reservationCreateOrConnectWithoutMessageInput
    upsert?: reservationUpsertWithoutMessageInput
    disconnect?: reservationWhereInput | boolean
    delete?: reservationWhereInput | boolean
    connect?: reservationWhereUniqueInput
    update?: XOR<XOR<reservationUpdateToOneWithWhereWithoutMessageInput, reservationUpdateWithoutMessageInput>, reservationUncheckedUpdateWithoutMessageInput>
  }

  export type restaurantUpdateOneRequiredWithoutMessageNestedInput = {
    create?: XOR<restaurantCreateWithoutMessageInput, restaurantUncheckedCreateWithoutMessageInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutMessageInput
    upsert?: restaurantUpsertWithoutMessageInput
    connect?: restaurantWhereUniqueInput
    update?: XOR<XOR<restaurantUpdateToOneWithWhereWithoutMessageInput, restaurantUpdateWithoutMessageInput>, restaurantUncheckedUpdateWithoutMessageInput>
  }

  export type userUpdateOneRequiredWithoutMessageNestedInput = {
    create?: XOR<userCreateWithoutMessageInput, userUncheckedCreateWithoutMessageInput>
    connectOrCreate?: userCreateOrConnectWithoutMessageInput
    upsert?: userUpsertWithoutMessageInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutMessageInput, userUpdateWithoutMessageInput>, userUncheckedUpdateWithoutMessageInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type messageCreateNestedManyWithoutReservationInput = {
    create?: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput> | messageCreateWithoutReservationInput[] | messageUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: messageCreateOrConnectWithoutReservationInput | messageCreateOrConnectWithoutReservationInput[]
    createMany?: messageCreateManyReservationInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type restaurantCreateNestedOneWithoutReservationInput = {
    create?: XOR<restaurantCreateWithoutReservationInput, restaurantUncheckedCreateWithoutReservationInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutReservationInput
    connect?: restaurantWhereUniqueInput
  }

  export type timeslotCreateNestedOneWithoutReservationInput = {
    create?: XOR<timeslotCreateWithoutReservationInput, timeslotUncheckedCreateWithoutReservationInput>
    connectOrCreate?: timeslotCreateOrConnectWithoutReservationInput
    connect?: timeslotWhereUniqueInput
  }

  export type userCreateNestedOneWithoutReservationInput = {
    create?: XOR<userCreateWithoutReservationInput, userUncheckedCreateWithoutReservationInput>
    connectOrCreate?: userCreateOrConnectWithoutReservationInput
    connect?: userWhereUniqueInput
  }

  export type reservation_has_itemCreateNestedManyWithoutReservationInput = {
    create?: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput> | reservation_has_itemCreateWithoutReservationInput[] | reservation_has_itemUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutReservationInput | reservation_has_itemCreateOrConnectWithoutReservationInput[]
    createMany?: reservation_has_itemCreateManyReservationInputEnvelope
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
  }

  export type messageUncheckedCreateNestedManyWithoutReservationInput = {
    create?: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput> | messageCreateWithoutReservationInput[] | messageUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: messageCreateOrConnectWithoutReservationInput | messageCreateOrConnectWithoutReservationInput[]
    createMany?: messageCreateManyReservationInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput = {
    create?: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput> | reservation_has_itemCreateWithoutReservationInput[] | reservation_has_itemUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutReservationInput | reservation_has_itemCreateOrConnectWithoutReservationInput[]
    createMany?: reservation_has_itemCreateManyReservationInputEnvelope
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
  }

  export type EnumReservationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReservationStatus
  }

  export type messageUpdateManyWithoutReservationNestedInput = {
    create?: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput> | messageCreateWithoutReservationInput[] | messageUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: messageCreateOrConnectWithoutReservationInput | messageCreateOrConnectWithoutReservationInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutReservationInput | messageUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: messageCreateManyReservationInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutReservationInput | messageUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: messageUpdateManyWithWhereWithoutReservationInput | messageUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type restaurantUpdateOneRequiredWithoutReservationNestedInput = {
    create?: XOR<restaurantCreateWithoutReservationInput, restaurantUncheckedCreateWithoutReservationInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutReservationInput
    upsert?: restaurantUpsertWithoutReservationInput
    connect?: restaurantWhereUniqueInput
    update?: XOR<XOR<restaurantUpdateToOneWithWhereWithoutReservationInput, restaurantUpdateWithoutReservationInput>, restaurantUncheckedUpdateWithoutReservationInput>
  }

  export type timeslotUpdateOneRequiredWithoutReservationNestedInput = {
    create?: XOR<timeslotCreateWithoutReservationInput, timeslotUncheckedCreateWithoutReservationInput>
    connectOrCreate?: timeslotCreateOrConnectWithoutReservationInput
    upsert?: timeslotUpsertWithoutReservationInput
    connect?: timeslotWhereUniqueInput
    update?: XOR<XOR<timeslotUpdateToOneWithWhereWithoutReservationInput, timeslotUpdateWithoutReservationInput>, timeslotUncheckedUpdateWithoutReservationInput>
  }

  export type userUpdateOneRequiredWithoutReservationNestedInput = {
    create?: XOR<userCreateWithoutReservationInput, userUncheckedCreateWithoutReservationInput>
    connectOrCreate?: userCreateOrConnectWithoutReservationInput
    upsert?: userUpsertWithoutReservationInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutReservationInput, userUpdateWithoutReservationInput>, userUncheckedUpdateWithoutReservationInput>
  }

  export type reservation_has_itemUpdateManyWithoutReservationNestedInput = {
    create?: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput> | reservation_has_itemCreateWithoutReservationInput[] | reservation_has_itemUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutReservationInput | reservation_has_itemCreateOrConnectWithoutReservationInput[]
    upsert?: reservation_has_itemUpsertWithWhereUniqueWithoutReservationInput | reservation_has_itemUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: reservation_has_itemCreateManyReservationInputEnvelope
    set?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    disconnect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    delete?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    update?: reservation_has_itemUpdateWithWhereUniqueWithoutReservationInput | reservation_has_itemUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: reservation_has_itemUpdateManyWithWhereWithoutReservationInput | reservation_has_itemUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
  }

  export type messageUncheckedUpdateManyWithoutReservationNestedInput = {
    create?: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput> | messageCreateWithoutReservationInput[] | messageUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: messageCreateOrConnectWithoutReservationInput | messageCreateOrConnectWithoutReservationInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutReservationInput | messageUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: messageCreateManyReservationInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutReservationInput | messageUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: messageUpdateManyWithWhereWithoutReservationInput | messageUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput = {
    create?: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput> | reservation_has_itemCreateWithoutReservationInput[] | reservation_has_itemUncheckedCreateWithoutReservationInput[]
    connectOrCreate?: reservation_has_itemCreateOrConnectWithoutReservationInput | reservation_has_itemCreateOrConnectWithoutReservationInput[]
    upsert?: reservation_has_itemUpsertWithWhereUniqueWithoutReservationInput | reservation_has_itemUpsertWithWhereUniqueWithoutReservationInput[]
    createMany?: reservation_has_itemCreateManyReservationInputEnvelope
    set?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    disconnect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    delete?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    connect?: reservation_has_itemWhereUniqueInput | reservation_has_itemWhereUniqueInput[]
    update?: reservation_has_itemUpdateWithWhereUniqueWithoutReservationInput | reservation_has_itemUpdateWithWhereUniqueWithoutReservationInput[]
    updateMany?: reservation_has_itemUpdateManyWithWhereWithoutReservationInput | reservation_has_itemUpdateManyWithWhereWithoutReservationInput[]
    deleteMany?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
  }

  export type itemCreateNestedOneWithoutReservation_has_itemInput = {
    create?: XOR<itemCreateWithoutReservation_has_itemInput, itemUncheckedCreateWithoutReservation_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutReservation_has_itemInput
    connect?: itemWhereUniqueInput
  }

  export type reservationCreateNestedOneWithoutReservation_has_itemInput = {
    create?: XOR<reservationCreateWithoutReservation_has_itemInput, reservationUncheckedCreateWithoutReservation_has_itemInput>
    connectOrCreate?: reservationCreateOrConnectWithoutReservation_has_itemInput
    connect?: reservationWhereUniqueInput
  }

  export type itemUpdateOneRequiredWithoutReservation_has_itemNestedInput = {
    create?: XOR<itemCreateWithoutReservation_has_itemInput, itemUncheckedCreateWithoutReservation_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutReservation_has_itemInput
    upsert?: itemUpsertWithoutReservation_has_itemInput
    connect?: itemWhereUniqueInput
    update?: XOR<XOR<itemUpdateToOneWithWhereWithoutReservation_has_itemInput, itemUpdateWithoutReservation_has_itemInput>, itemUncheckedUpdateWithoutReservation_has_itemInput>
  }

  export type reservationUpdateOneRequiredWithoutReservation_has_itemNestedInput = {
    create?: XOR<reservationCreateWithoutReservation_has_itemInput, reservationUncheckedCreateWithoutReservation_has_itemInput>
    connectOrCreate?: reservationCreateOrConnectWithoutReservation_has_itemInput
    upsert?: reservationUpsertWithoutReservation_has_itemInput
    connect?: reservationWhereUniqueInput
    update?: XOR<XOR<reservationUpdateToOneWithWhereWithoutReservation_has_itemInput, reservationUpdateWithoutReservation_has_itemInput>, reservationUncheckedUpdateWithoutReservation_has_itemInput>
  }

  export type menuCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput> | menuCreateWithoutRestaurantInput[] | menuUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: menuCreateOrConnectWithoutRestaurantInput | menuCreateOrConnectWithoutRestaurantInput[]
    createMany?: menuCreateManyRestaurantInputEnvelope
    connect?: menuWhereUniqueInput | menuWhereUniqueInput[]
  }

  export type messageCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput> | messageCreateWithoutRestaurantInput[] | messageUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: messageCreateOrConnectWithoutRestaurantInput | messageCreateOrConnectWithoutRestaurantInput[]
    createMany?: messageCreateManyRestaurantInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type reservationCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput> | reservationCreateWithoutRestaurantInput[] | reservationUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutRestaurantInput | reservationCreateOrConnectWithoutRestaurantInput[]
    createMany?: reservationCreateManyRestaurantInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type restaurant_has_itemCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput> | restaurant_has_itemCreateWithoutRestaurantInput[] | restaurant_has_itemUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutRestaurantInput | restaurant_has_itemCreateOrConnectWithoutRestaurantInput[]
    createMany?: restaurant_has_itemCreateManyRestaurantInputEnvelope
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
  }

  export type timeslotCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput> | timeslotCreateWithoutRestaurantInput[] | timeslotUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: timeslotCreateOrConnectWithoutRestaurantInput | timeslotCreateOrConnectWithoutRestaurantInput[]
    createMany?: timeslotCreateManyRestaurantInputEnvelope
    connect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutRestaurantsInput = {
    create?: XOR<userCreateWithoutRestaurantsInput, userUncheckedCreateWithoutRestaurantsInput>
    connectOrCreate?: userCreateOrConnectWithoutRestaurantsInput
    connect?: userWhereUniqueInput
  }

  export type menuUncheckedCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput> | menuCreateWithoutRestaurantInput[] | menuUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: menuCreateOrConnectWithoutRestaurantInput | menuCreateOrConnectWithoutRestaurantInput[]
    createMany?: menuCreateManyRestaurantInputEnvelope
    connect?: menuWhereUniqueInput | menuWhereUniqueInput[]
  }

  export type messageUncheckedCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput> | messageCreateWithoutRestaurantInput[] | messageUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: messageCreateOrConnectWithoutRestaurantInput | messageCreateOrConnectWithoutRestaurantInput[]
    createMany?: messageCreateManyRestaurantInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type reservationUncheckedCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput> | reservationCreateWithoutRestaurantInput[] | reservationUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutRestaurantInput | reservationCreateOrConnectWithoutRestaurantInput[]
    createMany?: reservationCreateManyRestaurantInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput> | restaurant_has_itemCreateWithoutRestaurantInput[] | restaurant_has_itemUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutRestaurantInput | restaurant_has_itemCreateOrConnectWithoutRestaurantInput[]
    createMany?: restaurant_has_itemCreateManyRestaurantInputEnvelope
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
  }

  export type timeslotUncheckedCreateNestedManyWithoutRestaurantInput = {
    create?: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput> | timeslotCreateWithoutRestaurantInput[] | timeslotUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: timeslotCreateOrConnectWithoutRestaurantInput | timeslotCreateOrConnectWithoutRestaurantInput[]
    createMany?: timeslotCreateManyRestaurantInputEnvelope
    connect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
  }

  export type menuUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput> | menuCreateWithoutRestaurantInput[] | menuUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: menuCreateOrConnectWithoutRestaurantInput | menuCreateOrConnectWithoutRestaurantInput[]
    upsert?: menuUpsertWithWhereUniqueWithoutRestaurantInput | menuUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: menuCreateManyRestaurantInputEnvelope
    set?: menuWhereUniqueInput | menuWhereUniqueInput[]
    disconnect?: menuWhereUniqueInput | menuWhereUniqueInput[]
    delete?: menuWhereUniqueInput | menuWhereUniqueInput[]
    connect?: menuWhereUniqueInput | menuWhereUniqueInput[]
    update?: menuUpdateWithWhereUniqueWithoutRestaurantInput | menuUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: menuUpdateManyWithWhereWithoutRestaurantInput | menuUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: menuScalarWhereInput | menuScalarWhereInput[]
  }

  export type messageUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput> | messageCreateWithoutRestaurantInput[] | messageUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: messageCreateOrConnectWithoutRestaurantInput | messageCreateOrConnectWithoutRestaurantInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutRestaurantInput | messageUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: messageCreateManyRestaurantInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutRestaurantInput | messageUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: messageUpdateManyWithWhereWithoutRestaurantInput | messageUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type reservationUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput> | reservationCreateWithoutRestaurantInput[] | reservationUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutRestaurantInput | reservationCreateOrConnectWithoutRestaurantInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutRestaurantInput | reservationUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: reservationCreateManyRestaurantInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutRestaurantInput | reservationUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutRestaurantInput | reservationUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type restaurant_has_itemUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput> | restaurant_has_itemCreateWithoutRestaurantInput[] | restaurant_has_itemUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutRestaurantInput | restaurant_has_itemCreateOrConnectWithoutRestaurantInput[]
    upsert?: restaurant_has_itemUpsertWithWhereUniqueWithoutRestaurantInput | restaurant_has_itemUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: restaurant_has_itemCreateManyRestaurantInputEnvelope
    set?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    disconnect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    delete?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    update?: restaurant_has_itemUpdateWithWhereUniqueWithoutRestaurantInput | restaurant_has_itemUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: restaurant_has_itemUpdateManyWithWhereWithoutRestaurantInput | restaurant_has_itemUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
  }

  export type timeslotUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput> | timeslotCreateWithoutRestaurantInput[] | timeslotUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: timeslotCreateOrConnectWithoutRestaurantInput | timeslotCreateOrConnectWithoutRestaurantInput[]
    upsert?: timeslotUpsertWithWhereUniqueWithoutRestaurantInput | timeslotUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: timeslotCreateManyRestaurantInputEnvelope
    set?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    disconnect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    delete?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    connect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    update?: timeslotUpdateWithWhereUniqueWithoutRestaurantInput | timeslotUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: timeslotUpdateManyWithWhereWithoutRestaurantInput | timeslotUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: timeslotScalarWhereInput | timeslotScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutRestaurantsNestedInput = {
    create?: XOR<userCreateWithoutRestaurantsInput, userUncheckedCreateWithoutRestaurantsInput>
    connectOrCreate?: userCreateOrConnectWithoutRestaurantsInput
    upsert?: userUpsertWithoutRestaurantsInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutRestaurantsInput, userUpdateWithoutRestaurantsInput>, userUncheckedUpdateWithoutRestaurantsInput>
  }

  export type menuUncheckedUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput> | menuCreateWithoutRestaurantInput[] | menuUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: menuCreateOrConnectWithoutRestaurantInput | menuCreateOrConnectWithoutRestaurantInput[]
    upsert?: menuUpsertWithWhereUniqueWithoutRestaurantInput | menuUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: menuCreateManyRestaurantInputEnvelope
    set?: menuWhereUniqueInput | menuWhereUniqueInput[]
    disconnect?: menuWhereUniqueInput | menuWhereUniqueInput[]
    delete?: menuWhereUniqueInput | menuWhereUniqueInput[]
    connect?: menuWhereUniqueInput | menuWhereUniqueInput[]
    update?: menuUpdateWithWhereUniqueWithoutRestaurantInput | menuUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: menuUpdateManyWithWhereWithoutRestaurantInput | menuUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: menuScalarWhereInput | menuScalarWhereInput[]
  }

  export type messageUncheckedUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput> | messageCreateWithoutRestaurantInput[] | messageUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: messageCreateOrConnectWithoutRestaurantInput | messageCreateOrConnectWithoutRestaurantInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutRestaurantInput | messageUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: messageCreateManyRestaurantInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutRestaurantInput | messageUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: messageUpdateManyWithWhereWithoutRestaurantInput | messageUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type reservationUncheckedUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput> | reservationCreateWithoutRestaurantInput[] | reservationUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutRestaurantInput | reservationCreateOrConnectWithoutRestaurantInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutRestaurantInput | reservationUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: reservationCreateManyRestaurantInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutRestaurantInput | reservationUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutRestaurantInput | reservationUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput> | restaurant_has_itemCreateWithoutRestaurantInput[] | restaurant_has_itemUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: restaurant_has_itemCreateOrConnectWithoutRestaurantInput | restaurant_has_itemCreateOrConnectWithoutRestaurantInput[]
    upsert?: restaurant_has_itemUpsertWithWhereUniqueWithoutRestaurantInput | restaurant_has_itemUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: restaurant_has_itemCreateManyRestaurantInputEnvelope
    set?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    disconnect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    delete?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    connect?: restaurant_has_itemWhereUniqueInput | restaurant_has_itemWhereUniqueInput[]
    update?: restaurant_has_itemUpdateWithWhereUniqueWithoutRestaurantInput | restaurant_has_itemUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: restaurant_has_itemUpdateManyWithWhereWithoutRestaurantInput | restaurant_has_itemUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
  }

  export type timeslotUncheckedUpdateManyWithoutRestaurantNestedInput = {
    create?: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput> | timeslotCreateWithoutRestaurantInput[] | timeslotUncheckedCreateWithoutRestaurantInput[]
    connectOrCreate?: timeslotCreateOrConnectWithoutRestaurantInput | timeslotCreateOrConnectWithoutRestaurantInput[]
    upsert?: timeslotUpsertWithWhereUniqueWithoutRestaurantInput | timeslotUpsertWithWhereUniqueWithoutRestaurantInput[]
    createMany?: timeslotCreateManyRestaurantInputEnvelope
    set?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    disconnect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    delete?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    connect?: timeslotWhereUniqueInput | timeslotWhereUniqueInput[]
    update?: timeslotUpdateWithWhereUniqueWithoutRestaurantInput | timeslotUpdateWithWhereUniqueWithoutRestaurantInput[]
    updateMany?: timeslotUpdateManyWithWhereWithoutRestaurantInput | timeslotUpdateManyWithWhereWithoutRestaurantInput[]
    deleteMany?: timeslotScalarWhereInput | timeslotScalarWhereInput[]
  }

  export type itemCreateNestedOneWithoutRestaurant_has_itemInput = {
    create?: XOR<itemCreateWithoutRestaurant_has_itemInput, itemUncheckedCreateWithoutRestaurant_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutRestaurant_has_itemInput
    connect?: itemWhereUniqueInput
  }

  export type restaurantCreateNestedOneWithoutRestaurant_has_itemInput = {
    create?: XOR<restaurantCreateWithoutRestaurant_has_itemInput, restaurantUncheckedCreateWithoutRestaurant_has_itemInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutRestaurant_has_itemInput
    connect?: restaurantWhereUniqueInput
  }

  export type itemUpdateOneRequiredWithoutRestaurant_has_itemNestedInput = {
    create?: XOR<itemCreateWithoutRestaurant_has_itemInput, itemUncheckedCreateWithoutRestaurant_has_itemInput>
    connectOrCreate?: itemCreateOrConnectWithoutRestaurant_has_itemInput
    upsert?: itemUpsertWithoutRestaurant_has_itemInput
    connect?: itemWhereUniqueInput
    update?: XOR<XOR<itemUpdateToOneWithWhereWithoutRestaurant_has_itemInput, itemUpdateWithoutRestaurant_has_itemInput>, itemUncheckedUpdateWithoutRestaurant_has_itemInput>
  }

  export type restaurantUpdateOneRequiredWithoutRestaurant_has_itemNestedInput = {
    create?: XOR<restaurantCreateWithoutRestaurant_has_itemInput, restaurantUncheckedCreateWithoutRestaurant_has_itemInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutRestaurant_has_itemInput
    upsert?: restaurantUpsertWithoutRestaurant_has_itemInput
    connect?: restaurantWhereUniqueInput
    update?: XOR<XOR<restaurantUpdateToOneWithWhereWithoutRestaurant_has_itemInput, restaurantUpdateWithoutRestaurant_has_itemInput>, restaurantUncheckedUpdateWithoutRestaurant_has_itemInput>
  }

  export type reservationCreateNestedManyWithoutTimeslotInput = {
    create?: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput> | reservationCreateWithoutTimeslotInput[] | reservationUncheckedCreateWithoutTimeslotInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutTimeslotInput | reservationCreateOrConnectWithoutTimeslotInput[]
    createMany?: reservationCreateManyTimeslotInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type restaurantCreateNestedOneWithoutTimeslotInput = {
    create?: XOR<restaurantCreateWithoutTimeslotInput, restaurantUncheckedCreateWithoutTimeslotInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutTimeslotInput
    connect?: restaurantWhereUniqueInput
  }

  export type reservationUncheckedCreateNestedManyWithoutTimeslotInput = {
    create?: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput> | reservationCreateWithoutTimeslotInput[] | reservationUncheckedCreateWithoutTimeslotInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutTimeslotInput | reservationCreateOrConnectWithoutTimeslotInput[]
    createMany?: reservationCreateManyTimeslotInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EnumTimeslotStatusFieldUpdateOperationsInput = {
    set?: $Enums.TimeslotStatus
  }

  export type reservationUpdateManyWithoutTimeslotNestedInput = {
    create?: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput> | reservationCreateWithoutTimeslotInput[] | reservationUncheckedCreateWithoutTimeslotInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutTimeslotInput | reservationCreateOrConnectWithoutTimeslotInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutTimeslotInput | reservationUpsertWithWhereUniqueWithoutTimeslotInput[]
    createMany?: reservationCreateManyTimeslotInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutTimeslotInput | reservationUpdateWithWhereUniqueWithoutTimeslotInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutTimeslotInput | reservationUpdateManyWithWhereWithoutTimeslotInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type restaurantUpdateOneRequiredWithoutTimeslotNestedInput = {
    create?: XOR<restaurantCreateWithoutTimeslotInput, restaurantUncheckedCreateWithoutTimeslotInput>
    connectOrCreate?: restaurantCreateOrConnectWithoutTimeslotInput
    upsert?: restaurantUpsertWithoutTimeslotInput
    connect?: restaurantWhereUniqueInput
    update?: XOR<XOR<restaurantUpdateToOneWithWhereWithoutTimeslotInput, restaurantUpdateWithoutTimeslotInput>, restaurantUncheckedUpdateWithoutTimeslotInput>
  }

  export type reservationUncheckedUpdateManyWithoutTimeslotNestedInput = {
    create?: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput> | reservationCreateWithoutTimeslotInput[] | reservationUncheckedCreateWithoutTimeslotInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutTimeslotInput | reservationCreateOrConnectWithoutTimeslotInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutTimeslotInput | reservationUpsertWithWhereUniqueWithoutTimeslotInput[]
    createMany?: reservationCreateManyTimeslotInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutTimeslotInput | reservationUpdateWithWhereUniqueWithoutTimeslotInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutTimeslotInput | reservationUpdateManyWithWhereWithoutTimeslotInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type messageCreateNestedManyWithoutUserInput = {
    create?: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput> | messageCreateWithoutUserInput[] | messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: messageCreateOrConnectWithoutUserInput | messageCreateOrConnectWithoutUserInput[]
    createMany?: messageCreateManyUserInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type reservationCreateNestedManyWithoutUserInput = {
    create?: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput> | reservationCreateWithoutUserInput[] | reservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutUserInput | reservationCreateOrConnectWithoutUserInput[]
    createMany?: reservationCreateManyUserInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type restaurantCreateNestedManyWithoutOwnerInput = {
    create?: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput> | restaurantCreateWithoutOwnerInput[] | restaurantUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: restaurantCreateOrConnectWithoutOwnerInput | restaurantCreateOrConnectWithoutOwnerInput[]
    createMany?: restaurantCreateManyOwnerInputEnvelope
    connect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
  }

  export type messageUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput> | messageCreateWithoutUserInput[] | messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: messageCreateOrConnectWithoutUserInput | messageCreateOrConnectWithoutUserInput[]
    createMany?: messageCreateManyUserInputEnvelope
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
  }

  export type reservationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput> | reservationCreateWithoutUserInput[] | reservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutUserInput | reservationCreateOrConnectWithoutUserInput[]
    createMany?: reservationCreateManyUserInputEnvelope
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
  }

  export type restaurantUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput> | restaurantCreateWithoutOwnerInput[] | restaurantUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: restaurantCreateOrConnectWithoutOwnerInput | restaurantCreateOrConnectWithoutOwnerInput[]
    createMany?: restaurantCreateManyOwnerInputEnvelope
    connect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
  }

  export type EnumUserTypeFieldUpdateOperationsInput = {
    set?: $Enums.UserType
  }

  export type messageUpdateManyWithoutUserNestedInput = {
    create?: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput> | messageCreateWithoutUserInput[] | messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: messageCreateOrConnectWithoutUserInput | messageCreateOrConnectWithoutUserInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutUserInput | messageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: messageCreateManyUserInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutUserInput | messageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: messageUpdateManyWithWhereWithoutUserInput | messageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type reservationUpdateManyWithoutUserNestedInput = {
    create?: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput> | reservationCreateWithoutUserInput[] | reservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutUserInput | reservationCreateOrConnectWithoutUserInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutUserInput | reservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reservationCreateManyUserInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutUserInput | reservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutUserInput | reservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type restaurantUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput> | restaurantCreateWithoutOwnerInput[] | restaurantUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: restaurantCreateOrConnectWithoutOwnerInput | restaurantCreateOrConnectWithoutOwnerInput[]
    upsert?: restaurantUpsertWithWhereUniqueWithoutOwnerInput | restaurantUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: restaurantCreateManyOwnerInputEnvelope
    set?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    disconnect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    delete?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    connect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    update?: restaurantUpdateWithWhereUniqueWithoutOwnerInput | restaurantUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: restaurantUpdateManyWithWhereWithoutOwnerInput | restaurantUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: restaurantScalarWhereInput | restaurantScalarWhereInput[]
  }

  export type messageUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput> | messageCreateWithoutUserInput[] | messageUncheckedCreateWithoutUserInput[]
    connectOrCreate?: messageCreateOrConnectWithoutUserInput | messageCreateOrConnectWithoutUserInput[]
    upsert?: messageUpsertWithWhereUniqueWithoutUserInput | messageUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: messageCreateManyUserInputEnvelope
    set?: messageWhereUniqueInput | messageWhereUniqueInput[]
    disconnect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    delete?: messageWhereUniqueInput | messageWhereUniqueInput[]
    connect?: messageWhereUniqueInput | messageWhereUniqueInput[]
    update?: messageUpdateWithWhereUniqueWithoutUserInput | messageUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: messageUpdateManyWithWhereWithoutUserInput | messageUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: messageScalarWhereInput | messageScalarWhereInput[]
  }

  export type reservationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput> | reservationCreateWithoutUserInput[] | reservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: reservationCreateOrConnectWithoutUserInput | reservationCreateOrConnectWithoutUserInput[]
    upsert?: reservationUpsertWithWhereUniqueWithoutUserInput | reservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: reservationCreateManyUserInputEnvelope
    set?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    disconnect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    delete?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    connect?: reservationWhereUniqueInput | reservationWhereUniqueInput[]
    update?: reservationUpdateWithWhereUniqueWithoutUserInput | reservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: reservationUpdateManyWithWhereWithoutUserInput | reservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: reservationScalarWhereInput | reservationScalarWhereInput[]
  }

  export type restaurantUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput> | restaurantCreateWithoutOwnerInput[] | restaurantUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: restaurantCreateOrConnectWithoutOwnerInput | restaurantCreateOrConnectWithoutOwnerInput[]
    upsert?: restaurantUpsertWithWhereUniqueWithoutOwnerInput | restaurantUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: restaurantCreateManyOwnerInputEnvelope
    set?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    disconnect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    delete?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    connect?: restaurantWhereUniqueInput | restaurantWhereUniqueInput[]
    update?: restaurantUpdateWithWhereUniqueWithoutOwnerInput | restaurantUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: restaurantUpdateManyWithWhereWithoutOwnerInput | restaurantUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: restaurantScalarWhereInput | restaurantScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumItemCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ItemCategory | EnumItemCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumItemCategoryFilter<$PrismaModel> | $Enums.ItemCategory
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumItemCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ItemCategory | EnumItemCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ItemCategory[] | ListEnumItemCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumItemCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ItemCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumItemCategoryFilter<$PrismaModel>
    _max?: NestedEnumItemCategoryFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumReservationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusFilter<$PrismaModel> | $Enums.ReservationStatus
  }

  export type NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReservationStatus | EnumReservationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReservationStatus[] | ListEnumReservationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReservationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReservationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReservationStatusFilter<$PrismaModel>
    _max?: NestedEnumReservationStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumTimeslotStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeslotStatus | EnumTimeslotStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeslotStatusFilter<$PrismaModel> | $Enums.TimeslotStatus
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumTimeslotStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TimeslotStatus | EnumTimeslotStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TimeslotStatus[] | ListEnumTimeslotStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTimeslotStatusWithAggregatesFilter<$PrismaModel> | $Enums.TimeslotStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTimeslotStatusFilter<$PrismaModel>
    _max?: NestedEnumTimeslotStatusFilter<$PrismaModel>
  }

  export type NestedEnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type NestedEnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type reservation_has_itemCreateWithoutItemInput = {
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
    reservation: reservationCreateNestedOneWithoutReservation_has_itemInput
  }

  export type reservation_has_itemUncheckedCreateWithoutItemInput = {
    reservation_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemCreateOrConnectWithoutItemInput = {
    where: reservation_has_itemWhereUniqueInput
    create: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput>
  }

  export type reservation_has_itemCreateManyItemInputEnvelope = {
    data: reservation_has_itemCreateManyItemInput | reservation_has_itemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type restaurant_has_itemCreateWithoutItemInput = {
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
    restaurant: restaurantCreateNestedOneWithoutRestaurant_has_itemInput
  }

  export type restaurant_has_itemUncheckedCreateWithoutItemInput = {
    restaurant_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type restaurant_has_itemCreateOrConnectWithoutItemInput = {
    where: restaurant_has_itemWhereUniqueInput
    create: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput>
  }

  export type restaurant_has_itemCreateManyItemInputEnvelope = {
    data: restaurant_has_itemCreateManyItemInput | restaurant_has_itemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type menu_has_itemCreateWithoutItemInput = {
    menu: menuCreateNestedOneWithoutMenu_has_itemInput
  }

  export type menu_has_itemUncheckedCreateWithoutItemInput = {
    menu_id: number
  }

  export type menu_has_itemCreateOrConnectWithoutItemInput = {
    where: menu_has_itemWhereUniqueInput
    create: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput>
  }

  export type menu_has_itemCreateManyItemInputEnvelope = {
    data: menu_has_itemCreateManyItemInput | menu_has_itemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type reservation_has_itemUpsertWithWhereUniqueWithoutItemInput = {
    where: reservation_has_itemWhereUniqueInput
    update: XOR<reservation_has_itemUpdateWithoutItemInput, reservation_has_itemUncheckedUpdateWithoutItemInput>
    create: XOR<reservation_has_itemCreateWithoutItemInput, reservation_has_itemUncheckedCreateWithoutItemInput>
  }

  export type reservation_has_itemUpdateWithWhereUniqueWithoutItemInput = {
    where: reservation_has_itemWhereUniqueInput
    data: XOR<reservation_has_itemUpdateWithoutItemInput, reservation_has_itemUncheckedUpdateWithoutItemInput>
  }

  export type reservation_has_itemUpdateManyWithWhereWithoutItemInput = {
    where: reservation_has_itemScalarWhereInput
    data: XOR<reservation_has_itemUpdateManyMutationInput, reservation_has_itemUncheckedUpdateManyWithoutItemInput>
  }

  export type reservation_has_itemScalarWhereInput = {
    AND?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
    OR?: reservation_has_itemScalarWhereInput[]
    NOT?: reservation_has_itemScalarWhereInput | reservation_has_itemScalarWhereInput[]
    reservation_id?: IntFilter<"reservation_has_item"> | number
    item_id?: IntFilter<"reservation_has_item"> | number
    quantity?: IntFilter<"reservation_has_item"> | number
    item_price?: DecimalFilter<"reservation_has_item"> | Decimal | DecimalJsLike | number | string
  }

  export type restaurant_has_itemUpsertWithWhereUniqueWithoutItemInput = {
    where: restaurant_has_itemWhereUniqueInput
    update: XOR<restaurant_has_itemUpdateWithoutItemInput, restaurant_has_itemUncheckedUpdateWithoutItemInput>
    create: XOR<restaurant_has_itemCreateWithoutItemInput, restaurant_has_itemUncheckedCreateWithoutItemInput>
  }

  export type restaurant_has_itemUpdateWithWhereUniqueWithoutItemInput = {
    where: restaurant_has_itemWhereUniqueInput
    data: XOR<restaurant_has_itemUpdateWithoutItemInput, restaurant_has_itemUncheckedUpdateWithoutItemInput>
  }

  export type restaurant_has_itemUpdateManyWithWhereWithoutItemInput = {
    where: restaurant_has_itemScalarWhereInput
    data: XOR<restaurant_has_itemUpdateManyMutationInput, restaurant_has_itemUncheckedUpdateManyWithoutItemInput>
  }

  export type restaurant_has_itemScalarWhereInput = {
    AND?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
    OR?: restaurant_has_itemScalarWhereInput[]
    NOT?: restaurant_has_itemScalarWhereInput | restaurant_has_itemScalarWhereInput[]
    restaurant_id?: IntFilter<"restaurant_has_item"> | number
    item_id?: IntFilter<"restaurant_has_item"> | number
    current_price?: DecimalFilter<"restaurant_has_item"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"restaurant_has_item"> | number
    is_available?: BoolNullableFilter<"restaurant_has_item"> | boolean | null
  }

  export type menu_has_itemUpsertWithWhereUniqueWithoutItemInput = {
    where: menu_has_itemWhereUniqueInput
    update: XOR<menu_has_itemUpdateWithoutItemInput, menu_has_itemUncheckedUpdateWithoutItemInput>
    create: XOR<menu_has_itemCreateWithoutItemInput, menu_has_itemUncheckedCreateWithoutItemInput>
  }

  export type menu_has_itemUpdateWithWhereUniqueWithoutItemInput = {
    where: menu_has_itemWhereUniqueInput
    data: XOR<menu_has_itemUpdateWithoutItemInput, menu_has_itemUncheckedUpdateWithoutItemInput>
  }

  export type menu_has_itemUpdateManyWithWhereWithoutItemInput = {
    where: menu_has_itemScalarWhereInput
    data: XOR<menu_has_itemUpdateManyMutationInput, menu_has_itemUncheckedUpdateManyWithoutItemInput>
  }

  export type menu_has_itemScalarWhereInput = {
    AND?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
    OR?: menu_has_itemScalarWhereInput[]
    NOT?: menu_has_itemScalarWhereInput | menu_has_itemScalarWhereInput[]
    menu_id?: IntFilter<"menu_has_item"> | number
    item_id?: IntFilter<"menu_has_item"> | number
  }

  export type restaurantCreateWithoutMenuInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateWithoutMenuInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutMenuInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutMenuInput, restaurantUncheckedCreateWithoutMenuInput>
  }

  export type menu_has_itemCreateWithoutMenuInput = {
    item: itemCreateNestedOneWithoutMenu_has_itemInput
  }

  export type menu_has_itemUncheckedCreateWithoutMenuInput = {
    item_id: number
  }

  export type menu_has_itemCreateOrConnectWithoutMenuInput = {
    where: menu_has_itemWhereUniqueInput
    create: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput>
  }

  export type menu_has_itemCreateManyMenuInputEnvelope = {
    data: menu_has_itemCreateManyMenuInput | menu_has_itemCreateManyMenuInput[]
    skipDuplicates?: boolean
  }

  export type restaurantUpsertWithoutMenuInput = {
    update: XOR<restaurantUpdateWithoutMenuInput, restaurantUncheckedUpdateWithoutMenuInput>
    create: XOR<restaurantCreateWithoutMenuInput, restaurantUncheckedCreateWithoutMenuInput>
    where?: restaurantWhereInput
  }

  export type restaurantUpdateToOneWithWhereWithoutMenuInput = {
    where?: restaurantWhereInput
    data: XOR<restaurantUpdateWithoutMenuInput, restaurantUncheckedUpdateWithoutMenuInput>
  }

  export type restaurantUpdateWithoutMenuInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateWithoutMenuInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type menu_has_itemUpsertWithWhereUniqueWithoutMenuInput = {
    where: menu_has_itemWhereUniqueInput
    update: XOR<menu_has_itemUpdateWithoutMenuInput, menu_has_itemUncheckedUpdateWithoutMenuInput>
    create: XOR<menu_has_itemCreateWithoutMenuInput, menu_has_itemUncheckedCreateWithoutMenuInput>
  }

  export type menu_has_itemUpdateWithWhereUniqueWithoutMenuInput = {
    where: menu_has_itemWhereUniqueInput
    data: XOR<menu_has_itemUpdateWithoutMenuInput, menu_has_itemUncheckedUpdateWithoutMenuInput>
  }

  export type menu_has_itemUpdateManyWithWhereWithoutMenuInput = {
    where: menu_has_itemScalarWhereInput
    data: XOR<menu_has_itemUpdateManyMutationInput, menu_has_itemUncheckedUpdateManyWithoutMenuInput>
  }

  export type menuCreateWithoutMenu_has_itemInput = {
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    restaurant: restaurantCreateNestedOneWithoutMenuInput
  }

  export type menuUncheckedCreateWithoutMenu_has_itemInput = {
    id?: number
    restaurant_id: number
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type menuCreateOrConnectWithoutMenu_has_itemInput = {
    where: menuWhereUniqueInput
    create: XOR<menuCreateWithoutMenu_has_itemInput, menuUncheckedCreateWithoutMenu_has_itemInput>
  }

  export type itemCreateWithoutMenu_has_itemInput = {
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutItemInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutItemInput
  }

  export type itemUncheckedCreateWithoutMenu_has_itemInput = {
    id?: number
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutItemInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutItemInput
  }

  export type itemCreateOrConnectWithoutMenu_has_itemInput = {
    where: itemWhereUniqueInput
    create: XOR<itemCreateWithoutMenu_has_itemInput, itemUncheckedCreateWithoutMenu_has_itemInput>
  }

  export type menuUpsertWithoutMenu_has_itemInput = {
    update: XOR<menuUpdateWithoutMenu_has_itemInput, menuUncheckedUpdateWithoutMenu_has_itemInput>
    create: XOR<menuCreateWithoutMenu_has_itemInput, menuUncheckedCreateWithoutMenu_has_itemInput>
    where?: menuWhereInput
  }

  export type menuUpdateToOneWithWhereWithoutMenu_has_itemInput = {
    where?: menuWhereInput
    data: XOR<menuUpdateWithoutMenu_has_itemInput, menuUncheckedUpdateWithoutMenu_has_itemInput>
  }

  export type menuUpdateWithoutMenu_has_itemInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    restaurant?: restaurantUpdateOneRequiredWithoutMenuNestedInput
  }

  export type menuUncheckedUpdateWithoutMenu_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type itemUpsertWithoutMenu_has_itemInput = {
    update: XOR<itemUpdateWithoutMenu_has_itemInput, itemUncheckedUpdateWithoutMenu_has_itemInput>
    create: XOR<itemCreateWithoutMenu_has_itemInput, itemUncheckedCreateWithoutMenu_has_itemInput>
    where?: itemWhereInput
  }

  export type itemUpdateToOneWithWhereWithoutMenu_has_itemInput = {
    where?: itemWhereInput
    data: XOR<itemUpdateWithoutMenu_has_itemInput, itemUncheckedUpdateWithoutMenu_has_itemInput>
  }

  export type itemUpdateWithoutMenu_has_itemInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUpdateManyWithoutItemNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutItemNestedInput
  }

  export type itemUncheckedUpdateWithoutMenu_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutItemNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type reservationCreateWithoutMessageInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    restaurant: restaurantCreateNestedOneWithoutReservationInput
    timeslot: timeslotCreateNestedOneWithoutReservationInput
    user: userCreateNestedOneWithoutReservationInput
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutReservationInput
  }

  export type reservationUncheckedCreateWithoutMessageInput = {
    id?: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationCreateOrConnectWithoutMessageInput = {
    where: reservationWhereUniqueInput
    create: XOR<reservationCreateWithoutMessageInput, reservationUncheckedCreateWithoutMessageInput>
  }

  export type restaurantCreateWithoutMessageInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateWithoutMessageInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutMessageInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutMessageInput, restaurantUncheckedCreateWithoutMessageInput>
  }

  export type userCreateWithoutMessageInput = {
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedManyWithoutUserInput
    restaurants?: restaurantCreateNestedManyWithoutOwnerInput
  }

  export type userUncheckedCreateWithoutMessageInput = {
    id?: number
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationUncheckedCreateNestedManyWithoutUserInput
    restaurants?: restaurantUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type userCreateOrConnectWithoutMessageInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutMessageInput, userUncheckedCreateWithoutMessageInput>
  }

  export type reservationUpsertWithoutMessageInput = {
    update: XOR<reservationUpdateWithoutMessageInput, reservationUncheckedUpdateWithoutMessageInput>
    create: XOR<reservationCreateWithoutMessageInput, reservationUncheckedCreateWithoutMessageInput>
    where?: reservationWhereInput
  }

  export type reservationUpdateToOneWithWhereWithoutMessageInput = {
    where?: reservationWhereInput
    data: XOR<reservationUpdateWithoutMessageInput, reservationUncheckedUpdateWithoutMessageInput>
  }

  export type reservationUpdateWithoutMessageInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    restaurant?: restaurantUpdateOneRequiredWithoutReservationNestedInput
    timeslot?: timeslotUpdateOneRequiredWithoutReservationNestedInput
    user?: userUpdateOneRequiredWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateWithoutMessageInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type restaurantUpsertWithoutMessageInput = {
    update: XOR<restaurantUpdateWithoutMessageInput, restaurantUncheckedUpdateWithoutMessageInput>
    create: XOR<restaurantCreateWithoutMessageInput, restaurantUncheckedCreateWithoutMessageInput>
    where?: restaurantWhereInput
  }

  export type restaurantUpdateToOneWithWhereWithoutMessageInput = {
    where?: restaurantWhereInput
    data: XOR<restaurantUpdateWithoutMessageInput, restaurantUncheckedUpdateWithoutMessageInput>
  }

  export type restaurantUpdateWithoutMessageInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateWithoutMessageInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type userUpsertWithoutMessageInput = {
    update: XOR<userUpdateWithoutMessageInput, userUncheckedUpdateWithoutMessageInput>
    create: XOR<userCreateWithoutMessageInput, userUncheckedCreateWithoutMessageInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutMessageInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutMessageInput, userUncheckedUpdateWithoutMessageInput>
  }

  export type userUpdateWithoutMessageInput = {
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUpdateManyWithoutOwnerNestedInput
  }

  export type userUncheckedUpdateWithoutMessageInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUncheckedUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type messageCreateWithoutReservationInput = {
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    restaurant: restaurantCreateNestedOneWithoutMessageInput
    user: userCreateNestedOneWithoutMessageInput
  }

  export type messageUncheckedCreateWithoutReservationInput = {
    id?: number
    user_id: number
    restaurant_id: number
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageCreateOrConnectWithoutReservationInput = {
    where: messageWhereUniqueInput
    create: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput>
  }

  export type messageCreateManyReservationInputEnvelope = {
    data: messageCreateManyReservationInput | messageCreateManyReservationInput[]
    skipDuplicates?: boolean
  }

  export type restaurantCreateWithoutReservationInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    message?: messageCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateWithoutReservationInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutReservationInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutReservationInput, restaurantUncheckedCreateWithoutReservationInput>
  }

  export type timeslotCreateWithoutReservationInput = {
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
    restaurant: restaurantCreateNestedOneWithoutTimeslotInput
  }

  export type timeslotUncheckedCreateWithoutReservationInput = {
    id?: number
    restaurant_id: number
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type timeslotCreateOrConnectWithoutReservationInput = {
    where: timeslotWhereUniqueInput
    create: XOR<timeslotCreateWithoutReservationInput, timeslotUncheckedCreateWithoutReservationInput>
  }

  export type userCreateWithoutReservationInput = {
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutUserInput
    restaurants?: restaurantCreateNestedManyWithoutOwnerInput
  }

  export type userUncheckedCreateWithoutReservationInput = {
    id?: number
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutUserInput
    restaurants?: restaurantUncheckedCreateNestedManyWithoutOwnerInput
  }

  export type userCreateOrConnectWithoutReservationInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutReservationInput, userUncheckedCreateWithoutReservationInput>
  }

  export type reservation_has_itemCreateWithoutReservationInput = {
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
    item: itemCreateNestedOneWithoutReservation_has_itemInput
  }

  export type reservation_has_itemUncheckedCreateWithoutReservationInput = {
    item_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemCreateOrConnectWithoutReservationInput = {
    where: reservation_has_itemWhereUniqueInput
    create: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput>
  }

  export type reservation_has_itemCreateManyReservationInputEnvelope = {
    data: reservation_has_itemCreateManyReservationInput | reservation_has_itemCreateManyReservationInput[]
    skipDuplicates?: boolean
  }

  export type messageUpsertWithWhereUniqueWithoutReservationInput = {
    where: messageWhereUniqueInput
    update: XOR<messageUpdateWithoutReservationInput, messageUncheckedUpdateWithoutReservationInput>
    create: XOR<messageCreateWithoutReservationInput, messageUncheckedCreateWithoutReservationInput>
  }

  export type messageUpdateWithWhereUniqueWithoutReservationInput = {
    where: messageWhereUniqueInput
    data: XOR<messageUpdateWithoutReservationInput, messageUncheckedUpdateWithoutReservationInput>
  }

  export type messageUpdateManyWithWhereWithoutReservationInput = {
    where: messageScalarWhereInput
    data: XOR<messageUpdateManyMutationInput, messageUncheckedUpdateManyWithoutReservationInput>
  }

  export type messageScalarWhereInput = {
    AND?: messageScalarWhereInput | messageScalarWhereInput[]
    OR?: messageScalarWhereInput[]
    NOT?: messageScalarWhereInput | messageScalarWhereInput[]
    id?: IntFilter<"message"> | number
    user_id?: IntFilter<"message"> | number
    restaurant_id?: IntFilter<"message"> | number
    reservation_id?: IntNullableFilter<"message"> | number | null
    content?: StringFilter<"message"> | string
    status?: StringNullableFilter<"message"> | string | null
    created_at?: DateTimeNullableFilter<"message"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"message"> | Date | string | null
  }

  export type restaurantUpsertWithoutReservationInput = {
    update: XOR<restaurantUpdateWithoutReservationInput, restaurantUncheckedUpdateWithoutReservationInput>
    create: XOR<restaurantCreateWithoutReservationInput, restaurantUncheckedCreateWithoutReservationInput>
    where?: restaurantWhereInput
  }

  export type restaurantUpdateToOneWithWhereWithoutReservationInput = {
    where?: restaurantWhereInput
    data: XOR<restaurantUpdateWithoutReservationInput, restaurantUncheckedUpdateWithoutReservationInput>
  }

  export type restaurantUpdateWithoutReservationInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    message?: messageUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateWithoutReservationInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type timeslotUpsertWithoutReservationInput = {
    update: XOR<timeslotUpdateWithoutReservationInput, timeslotUncheckedUpdateWithoutReservationInput>
    create: XOR<timeslotCreateWithoutReservationInput, timeslotUncheckedCreateWithoutReservationInput>
    where?: timeslotWhereInput
  }

  export type timeslotUpdateToOneWithWhereWithoutReservationInput = {
    where?: timeslotWhereInput
    data: XOR<timeslotUpdateWithoutReservationInput, timeslotUncheckedUpdateWithoutReservationInput>
  }

  export type timeslotUpdateWithoutReservationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    restaurant?: restaurantUpdateOneRequiredWithoutTimeslotNestedInput
  }

  export type timeslotUncheckedUpdateWithoutReservationInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userUpsertWithoutReservationInput = {
    update: XOR<userUpdateWithoutReservationInput, userUncheckedUpdateWithoutReservationInput>
    create: XOR<userCreateWithoutReservationInput, userUncheckedCreateWithoutReservationInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutReservationInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutReservationInput, userUncheckedUpdateWithoutReservationInput>
  }

  export type userUpdateWithoutReservationInput = {
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUpdateManyWithoutOwnerNestedInput
  }

  export type userUncheckedUpdateWithoutReservationInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutUserNestedInput
    restaurants?: restaurantUncheckedUpdateManyWithoutOwnerNestedInput
  }

  export type reservation_has_itemUpsertWithWhereUniqueWithoutReservationInput = {
    where: reservation_has_itemWhereUniqueInput
    update: XOR<reservation_has_itemUpdateWithoutReservationInput, reservation_has_itemUncheckedUpdateWithoutReservationInput>
    create: XOR<reservation_has_itemCreateWithoutReservationInput, reservation_has_itemUncheckedCreateWithoutReservationInput>
  }

  export type reservation_has_itemUpdateWithWhereUniqueWithoutReservationInput = {
    where: reservation_has_itemWhereUniqueInput
    data: XOR<reservation_has_itemUpdateWithoutReservationInput, reservation_has_itemUncheckedUpdateWithoutReservationInput>
  }

  export type reservation_has_itemUpdateManyWithWhereWithoutReservationInput = {
    where: reservation_has_itemScalarWhereInput
    data: XOR<reservation_has_itemUpdateManyMutationInput, reservation_has_itemUncheckedUpdateManyWithoutReservationInput>
  }

  export type itemCreateWithoutReservation_has_itemInput = {
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemCreateNestedManyWithoutItemInput
  }

  export type itemUncheckedCreateWithoutReservation_has_itemInput = {
    id?: number
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemUncheckedCreateNestedManyWithoutItemInput
  }

  export type itemCreateOrConnectWithoutReservation_has_itemInput = {
    where: itemWhereUniqueInput
    create: XOR<itemCreateWithoutReservation_has_itemInput, itemUncheckedCreateWithoutReservation_has_itemInput>
  }

  export type reservationCreateWithoutReservation_has_itemInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutReservationInput
    restaurant: restaurantCreateNestedOneWithoutReservationInput
    timeslot: timeslotCreateNestedOneWithoutReservationInput
    user: userCreateNestedOneWithoutReservationInput
  }

  export type reservationUncheckedCreateWithoutReservation_has_itemInput = {
    id?: number
    user_id: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationCreateOrConnectWithoutReservation_has_itemInput = {
    where: reservationWhereUniqueInput
    create: XOR<reservationCreateWithoutReservation_has_itemInput, reservationUncheckedCreateWithoutReservation_has_itemInput>
  }

  export type itemUpsertWithoutReservation_has_itemInput = {
    update: XOR<itemUpdateWithoutReservation_has_itemInput, itemUncheckedUpdateWithoutReservation_has_itemInput>
    create: XOR<itemCreateWithoutReservation_has_itemInput, itemUncheckedCreateWithoutReservation_has_itemInput>
    where?: itemWhereInput
  }

  export type itemUpdateToOneWithWhereWithoutReservation_has_itemInput = {
    where?: itemWhereInput
    data: XOR<itemUpdateWithoutReservation_has_itemInput, itemUncheckedUpdateWithoutReservation_has_itemInput>
  }

  export type itemUpdateWithoutReservation_has_itemInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUpdateManyWithoutItemNestedInput
  }

  export type itemUncheckedUpdateWithoutReservation_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type reservationUpsertWithoutReservation_has_itemInput = {
    update: XOR<reservationUpdateWithoutReservation_has_itemInput, reservationUncheckedUpdateWithoutReservation_has_itemInput>
    create: XOR<reservationCreateWithoutReservation_has_itemInput, reservationUncheckedCreateWithoutReservation_has_itemInput>
    where?: reservationWhereInput
  }

  export type reservationUpdateToOneWithWhereWithoutReservation_has_itemInput = {
    where?: reservationWhereInput
    data: XOR<reservationUpdateWithoutReservation_has_itemInput, reservationUncheckedUpdateWithoutReservation_has_itemInput>
  }

  export type reservationUpdateWithoutReservation_has_itemInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutReservationNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutReservationNestedInput
    timeslot?: timeslotUpdateOneRequiredWithoutReservationNestedInput
    user?: userUpdateOneRequiredWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateWithoutReservation_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type menuCreateWithoutRestaurantInput = {
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu_has_item?: menu_has_itemCreateNestedManyWithoutMenuInput
  }

  export type menuUncheckedCreateWithoutRestaurantInput = {
    id?: number
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu_has_item?: menu_has_itemUncheckedCreateNestedManyWithoutMenuInput
  }

  export type menuCreateOrConnectWithoutRestaurantInput = {
    where: menuWhereUniqueInput
    create: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput>
  }

  export type menuCreateManyRestaurantInputEnvelope = {
    data: menuCreateManyRestaurantInput | menuCreateManyRestaurantInput[]
    skipDuplicates?: boolean
  }

  export type messageCreateWithoutRestaurantInput = {
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedOneWithoutMessageInput
    user: userCreateNestedOneWithoutMessageInput
  }

  export type messageUncheckedCreateWithoutRestaurantInput = {
    id?: number
    user_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageCreateOrConnectWithoutRestaurantInput = {
    where: messageWhereUniqueInput
    create: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput>
  }

  export type messageCreateManyRestaurantInputEnvelope = {
    data: messageCreateManyRestaurantInput | messageCreateManyRestaurantInput[]
    skipDuplicates?: boolean
  }

  export type reservationCreateWithoutRestaurantInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutReservationInput
    timeslot: timeslotCreateNestedOneWithoutReservationInput
    user: userCreateNestedOneWithoutReservationInput
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutReservationInput
  }

  export type reservationUncheckedCreateWithoutRestaurantInput = {
    id?: number
    user_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutReservationInput
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationCreateOrConnectWithoutRestaurantInput = {
    where: reservationWhereUniqueInput
    create: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput>
  }

  export type reservationCreateManyRestaurantInputEnvelope = {
    data: reservationCreateManyRestaurantInput | reservationCreateManyRestaurantInput[]
    skipDuplicates?: boolean
  }

  export type restaurant_has_itemCreateWithoutRestaurantInput = {
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
    item: itemCreateNestedOneWithoutRestaurant_has_itemInput
  }

  export type restaurant_has_itemUncheckedCreateWithoutRestaurantInput = {
    item_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type restaurant_has_itemCreateOrConnectWithoutRestaurantInput = {
    where: restaurant_has_itemWhereUniqueInput
    create: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput>
  }

  export type restaurant_has_itemCreateManyRestaurantInputEnvelope = {
    data: restaurant_has_itemCreateManyRestaurantInput | restaurant_has_itemCreateManyRestaurantInput[]
    skipDuplicates?: boolean
  }

  export type timeslotCreateWithoutRestaurantInput = {
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedManyWithoutTimeslotInput
  }

  export type timeslotUncheckedCreateWithoutRestaurantInput = {
    id?: number
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationUncheckedCreateNestedManyWithoutTimeslotInput
  }

  export type timeslotCreateOrConnectWithoutRestaurantInput = {
    where: timeslotWhereUniqueInput
    create: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput>
  }

  export type timeslotCreateManyRestaurantInputEnvelope = {
    data: timeslotCreateManyRestaurantInput | timeslotCreateManyRestaurantInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutRestaurantsInput = {
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutUserInput
    reservation?: reservationCreateNestedManyWithoutUserInput
  }

  export type userUncheckedCreateWithoutRestaurantsInput = {
    id?: number
    type_user: $Enums.UserType
    first_name: string
    last_name?: string | null
    email: string
    phone_number?: string | null
    password_hash: string
    resetToken?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutUserInput
    reservation?: reservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type userCreateOrConnectWithoutRestaurantsInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutRestaurantsInput, userUncheckedCreateWithoutRestaurantsInput>
  }

  export type menuUpsertWithWhereUniqueWithoutRestaurantInput = {
    where: menuWhereUniqueInput
    update: XOR<menuUpdateWithoutRestaurantInput, menuUncheckedUpdateWithoutRestaurantInput>
    create: XOR<menuCreateWithoutRestaurantInput, menuUncheckedCreateWithoutRestaurantInput>
  }

  export type menuUpdateWithWhereUniqueWithoutRestaurantInput = {
    where: menuWhereUniqueInput
    data: XOR<menuUpdateWithoutRestaurantInput, menuUncheckedUpdateWithoutRestaurantInput>
  }

  export type menuUpdateManyWithWhereWithoutRestaurantInput = {
    where: menuScalarWhereInput
    data: XOR<menuUpdateManyMutationInput, menuUncheckedUpdateManyWithoutRestaurantInput>
  }

  export type menuScalarWhereInput = {
    AND?: menuScalarWhereInput | menuScalarWhereInput[]
    OR?: menuScalarWhereInput[]
    NOT?: menuScalarWhereInput | menuScalarWhereInput[]
    id?: IntFilter<"menu"> | number
    restaurant_id?: IntFilter<"menu"> | number
    name?: StringFilter<"menu"> | string
    description?: StringNullableFilter<"menu"> | string | null
    is_active?: BoolNullableFilter<"menu"> | boolean | null
    created_at?: DateTimeNullableFilter<"menu"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"menu"> | Date | string | null
  }

  export type messageUpsertWithWhereUniqueWithoutRestaurantInput = {
    where: messageWhereUniqueInput
    update: XOR<messageUpdateWithoutRestaurantInput, messageUncheckedUpdateWithoutRestaurantInput>
    create: XOR<messageCreateWithoutRestaurantInput, messageUncheckedCreateWithoutRestaurantInput>
  }

  export type messageUpdateWithWhereUniqueWithoutRestaurantInput = {
    where: messageWhereUniqueInput
    data: XOR<messageUpdateWithoutRestaurantInput, messageUncheckedUpdateWithoutRestaurantInput>
  }

  export type messageUpdateManyWithWhereWithoutRestaurantInput = {
    where: messageScalarWhereInput
    data: XOR<messageUpdateManyMutationInput, messageUncheckedUpdateManyWithoutRestaurantInput>
  }

  export type reservationUpsertWithWhereUniqueWithoutRestaurantInput = {
    where: reservationWhereUniqueInput
    update: XOR<reservationUpdateWithoutRestaurantInput, reservationUncheckedUpdateWithoutRestaurantInput>
    create: XOR<reservationCreateWithoutRestaurantInput, reservationUncheckedCreateWithoutRestaurantInput>
  }

  export type reservationUpdateWithWhereUniqueWithoutRestaurantInput = {
    where: reservationWhereUniqueInput
    data: XOR<reservationUpdateWithoutRestaurantInput, reservationUncheckedUpdateWithoutRestaurantInput>
  }

  export type reservationUpdateManyWithWhereWithoutRestaurantInput = {
    where: reservationScalarWhereInput
    data: XOR<reservationUpdateManyMutationInput, reservationUncheckedUpdateManyWithoutRestaurantInput>
  }

  export type reservationScalarWhereInput = {
    AND?: reservationScalarWhereInput | reservationScalarWhereInput[]
    OR?: reservationScalarWhereInput[]
    NOT?: reservationScalarWhereInput | reservationScalarWhereInput[]
    id?: IntFilter<"reservation"> | number
    user_id?: IntFilter<"reservation"> | number
    restaurant_id?: IntFilter<"reservation"> | number
    timeslot_id?: IntFilter<"reservation"> | number
    status?: EnumReservationStatusFilter<"reservation"> | $Enums.ReservationStatus
    special_requests?: StringNullableFilter<"reservation"> | string | null
    created_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"reservation"> | Date | string | null
  }

  export type restaurant_has_itemUpsertWithWhereUniqueWithoutRestaurantInput = {
    where: restaurant_has_itemWhereUniqueInput
    update: XOR<restaurant_has_itemUpdateWithoutRestaurantInput, restaurant_has_itemUncheckedUpdateWithoutRestaurantInput>
    create: XOR<restaurant_has_itemCreateWithoutRestaurantInput, restaurant_has_itemUncheckedCreateWithoutRestaurantInput>
  }

  export type restaurant_has_itemUpdateWithWhereUniqueWithoutRestaurantInput = {
    where: restaurant_has_itemWhereUniqueInput
    data: XOR<restaurant_has_itemUpdateWithoutRestaurantInput, restaurant_has_itemUncheckedUpdateWithoutRestaurantInput>
  }

  export type restaurant_has_itemUpdateManyWithWhereWithoutRestaurantInput = {
    where: restaurant_has_itemScalarWhereInput
    data: XOR<restaurant_has_itemUpdateManyMutationInput, restaurant_has_itemUncheckedUpdateManyWithoutRestaurantInput>
  }

  export type timeslotUpsertWithWhereUniqueWithoutRestaurantInput = {
    where: timeslotWhereUniqueInput
    update: XOR<timeslotUpdateWithoutRestaurantInput, timeslotUncheckedUpdateWithoutRestaurantInput>
    create: XOR<timeslotCreateWithoutRestaurantInput, timeslotUncheckedCreateWithoutRestaurantInput>
  }

  export type timeslotUpdateWithWhereUniqueWithoutRestaurantInput = {
    where: timeslotWhereUniqueInput
    data: XOR<timeslotUpdateWithoutRestaurantInput, timeslotUncheckedUpdateWithoutRestaurantInput>
  }

  export type timeslotUpdateManyWithWhereWithoutRestaurantInput = {
    where: timeslotScalarWhereInput
    data: XOR<timeslotUpdateManyMutationInput, timeslotUncheckedUpdateManyWithoutRestaurantInput>
  }

  export type timeslotScalarWhereInput = {
    AND?: timeslotScalarWhereInput | timeslotScalarWhereInput[]
    OR?: timeslotScalarWhereInput[]
    NOT?: timeslotScalarWhereInput | timeslotScalarWhereInput[]
    id?: IntFilter<"timeslot"> | number
    restaurant_id?: IntFilter<"timeslot"> | number
    date?: DateTimeFilter<"timeslot"> | Date | string
    start_at?: DateTimeFilter<"timeslot"> | Date | string
    end_at?: DateTimeFilter<"timeslot"> | Date | string
    capacity?: IntFilter<"timeslot"> | number
    status?: EnumTimeslotStatusFilter<"timeslot"> | $Enums.TimeslotStatus
    created_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"timeslot"> | Date | string | null
  }

  export type userUpsertWithoutRestaurantsInput = {
    update: XOR<userUpdateWithoutRestaurantsInput, userUncheckedUpdateWithoutRestaurantsInput>
    create: XOR<userCreateWithoutRestaurantsInput, userUncheckedCreateWithoutRestaurantsInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutRestaurantsInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutRestaurantsInput, userUncheckedUpdateWithoutRestaurantsInput>
  }

  export type userUpdateWithoutRestaurantsInput = {
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutUserNestedInput
    reservation?: reservationUpdateManyWithoutUserNestedInput
  }

  export type userUncheckedUpdateWithoutRestaurantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type_user?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    password_hash?: StringFieldUpdateOperationsInput | string
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutUserNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type itemCreateWithoutRestaurant_has_itemInput = {
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemCreateNestedManyWithoutItemInput
  }

  export type itemUncheckedCreateWithoutRestaurant_has_itemInput = {
    id?: number
    name: string
    description?: string | null
    category: $Enums.ItemCategory
    base_price: Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutItemInput
    menu_has_item?: menu_has_itemUncheckedCreateNestedManyWithoutItemInput
  }

  export type itemCreateOrConnectWithoutRestaurant_has_itemInput = {
    where: itemWhereUniqueInput
    create: XOR<itemCreateWithoutRestaurant_has_itemInput, itemUncheckedCreateWithoutRestaurant_has_itemInput>
  }

  export type restaurantCreateWithoutRestaurant_has_itemInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    message?: messageCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateWithoutRestaurant_has_itemInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutRestaurant_has_itemInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutRestaurant_has_itemInput, restaurantUncheckedCreateWithoutRestaurant_has_itemInput>
  }

  export type itemUpsertWithoutRestaurant_has_itemInput = {
    update: XOR<itemUpdateWithoutRestaurant_has_itemInput, itemUncheckedUpdateWithoutRestaurant_has_itemInput>
    create: XOR<itemCreateWithoutRestaurant_has_itemInput, itemUncheckedCreateWithoutRestaurant_has_itemInput>
    where?: itemWhereInput
  }

  export type itemUpdateToOneWithWhereWithoutRestaurant_has_itemInput = {
    where?: itemWhereInput
    data: XOR<itemUpdateWithoutRestaurant_has_itemInput, itemUncheckedUpdateWithoutRestaurant_has_itemInput>
  }

  export type itemUpdateWithoutRestaurant_has_itemInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUpdateManyWithoutItemNestedInput
  }

  export type itemUncheckedUpdateWithoutRestaurant_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumItemCategoryFieldUpdateOperationsInput | $Enums.ItemCategory
    base_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutItemNestedInput
    menu_has_item?: menu_has_itemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type restaurantUpsertWithoutRestaurant_has_itemInput = {
    update: XOR<restaurantUpdateWithoutRestaurant_has_itemInput, restaurantUncheckedUpdateWithoutRestaurant_has_itemInput>
    create: XOR<restaurantCreateWithoutRestaurant_has_itemInput, restaurantUncheckedCreateWithoutRestaurant_has_itemInput>
    where?: restaurantWhereInput
  }

  export type restaurantUpdateToOneWithWhereWithoutRestaurant_has_itemInput = {
    where?: restaurantWhereInput
    data: XOR<restaurantUpdateWithoutRestaurant_has_itemInput, restaurantUncheckedUpdateWithoutRestaurant_has_itemInput>
  }

  export type restaurantUpdateWithoutRestaurant_has_itemInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    message?: messageUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateWithoutRestaurant_has_itemInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type reservationCreateWithoutTimeslotInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutReservationInput
    restaurant: restaurantCreateNestedOneWithoutReservationInput
    user: userCreateNestedOneWithoutReservationInput
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutReservationInput
  }

  export type reservationUncheckedCreateWithoutTimeslotInput = {
    id?: number
    user_id: number
    restaurant_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutReservationInput
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationCreateOrConnectWithoutTimeslotInput = {
    where: reservationWhereUniqueInput
    create: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput>
  }

  export type reservationCreateManyTimeslotInputEnvelope = {
    data: reservationCreateManyTimeslotInput | reservationCreateManyTimeslotInput[]
    skipDuplicates?: boolean
  }

  export type restaurantCreateWithoutTimeslotInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    message?: messageCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    owner: userCreateNestedOneWithoutRestaurantsInput
  }

  export type restaurantUncheckedCreateWithoutTimeslotInput = {
    id?: number
    owner_id: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutTimeslotInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutTimeslotInput, restaurantUncheckedCreateWithoutTimeslotInput>
  }

  export type reservationUpsertWithWhereUniqueWithoutTimeslotInput = {
    where: reservationWhereUniqueInput
    update: XOR<reservationUpdateWithoutTimeslotInput, reservationUncheckedUpdateWithoutTimeslotInput>
    create: XOR<reservationCreateWithoutTimeslotInput, reservationUncheckedCreateWithoutTimeslotInput>
  }

  export type reservationUpdateWithWhereUniqueWithoutTimeslotInput = {
    where: reservationWhereUniqueInput
    data: XOR<reservationUpdateWithoutTimeslotInput, reservationUncheckedUpdateWithoutTimeslotInput>
  }

  export type reservationUpdateManyWithWhereWithoutTimeslotInput = {
    where: reservationScalarWhereInput
    data: XOR<reservationUpdateManyMutationInput, reservationUncheckedUpdateManyWithoutTimeslotInput>
  }

  export type restaurantUpsertWithoutTimeslotInput = {
    update: XOR<restaurantUpdateWithoutTimeslotInput, restaurantUncheckedUpdateWithoutTimeslotInput>
    create: XOR<restaurantCreateWithoutTimeslotInput, restaurantUncheckedCreateWithoutTimeslotInput>
    where?: restaurantWhereInput
  }

  export type restaurantUpdateToOneWithWhereWithoutTimeslotInput = {
    where?: restaurantWhereInput
    data: XOR<restaurantUpdateWithoutTimeslotInput, restaurantUncheckedUpdateWithoutTimeslotInput>
  }

  export type restaurantUpdateWithoutTimeslotInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    message?: messageUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    owner?: userUpdateOneRequiredWithoutRestaurantsNestedInput
  }

  export type restaurantUncheckedUpdateWithoutTimeslotInput = {
    id?: IntFieldUpdateOperationsInput | number
    owner_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type messageCreateWithoutUserInput = {
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    reservation?: reservationCreateNestedOneWithoutMessageInput
    restaurant: restaurantCreateNestedOneWithoutMessageInput
  }

  export type messageUncheckedCreateWithoutUserInput = {
    id?: number
    restaurant_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageCreateOrConnectWithoutUserInput = {
    where: messageWhereUniqueInput
    create: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput>
  }

  export type messageCreateManyUserInputEnvelope = {
    data: messageCreateManyUserInput | messageCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type reservationCreateWithoutUserInput = {
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageCreateNestedManyWithoutReservationInput
    restaurant: restaurantCreateNestedOneWithoutReservationInput
    timeslot: timeslotCreateNestedOneWithoutReservationInput
    reservation_has_item?: reservation_has_itemCreateNestedManyWithoutReservationInput
  }

  export type reservationUncheckedCreateWithoutUserInput = {
    id?: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    message?: messageUncheckedCreateNestedManyWithoutReservationInput
    reservation_has_item?: reservation_has_itemUncheckedCreateNestedManyWithoutReservationInput
  }

  export type reservationCreateOrConnectWithoutUserInput = {
    where: reservationWhereUniqueInput
    create: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput>
  }

  export type reservationCreateManyUserInputEnvelope = {
    data: reservationCreateManyUserInput | reservationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type restaurantCreateWithoutOwnerInput = {
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuCreateNestedManyWithoutRestaurantInput
    message?: messageCreateNestedManyWithoutRestaurantInput
    reservation?: reservationCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantUncheckedCreateWithoutOwnerInput = {
    id?: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    menu?: menuUncheckedCreateNestedManyWithoutRestaurantInput
    message?: messageUncheckedCreateNestedManyWithoutRestaurantInput
    reservation?: reservationUncheckedCreateNestedManyWithoutRestaurantInput
    restaurant_has_item?: restaurant_has_itemUncheckedCreateNestedManyWithoutRestaurantInput
    timeslot?: timeslotUncheckedCreateNestedManyWithoutRestaurantInput
  }

  export type restaurantCreateOrConnectWithoutOwnerInput = {
    where: restaurantWhereUniqueInput
    create: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput>
  }

  export type restaurantCreateManyOwnerInputEnvelope = {
    data: restaurantCreateManyOwnerInput | restaurantCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type messageUpsertWithWhereUniqueWithoutUserInput = {
    where: messageWhereUniqueInput
    update: XOR<messageUpdateWithoutUserInput, messageUncheckedUpdateWithoutUserInput>
    create: XOR<messageCreateWithoutUserInput, messageUncheckedCreateWithoutUserInput>
  }

  export type messageUpdateWithWhereUniqueWithoutUserInput = {
    where: messageWhereUniqueInput
    data: XOR<messageUpdateWithoutUserInput, messageUncheckedUpdateWithoutUserInput>
  }

  export type messageUpdateManyWithWhereWithoutUserInput = {
    where: messageScalarWhereInput
    data: XOR<messageUpdateManyMutationInput, messageUncheckedUpdateManyWithoutUserInput>
  }

  export type reservationUpsertWithWhereUniqueWithoutUserInput = {
    where: reservationWhereUniqueInput
    update: XOR<reservationUpdateWithoutUserInput, reservationUncheckedUpdateWithoutUserInput>
    create: XOR<reservationCreateWithoutUserInput, reservationUncheckedCreateWithoutUserInput>
  }

  export type reservationUpdateWithWhereUniqueWithoutUserInput = {
    where: reservationWhereUniqueInput
    data: XOR<reservationUpdateWithoutUserInput, reservationUncheckedUpdateWithoutUserInput>
  }

  export type reservationUpdateManyWithWhereWithoutUserInput = {
    where: reservationScalarWhereInput
    data: XOR<reservationUpdateManyMutationInput, reservationUncheckedUpdateManyWithoutUserInput>
  }

  export type restaurantUpsertWithWhereUniqueWithoutOwnerInput = {
    where: restaurantWhereUniqueInput
    update: XOR<restaurantUpdateWithoutOwnerInput, restaurantUncheckedUpdateWithoutOwnerInput>
    create: XOR<restaurantCreateWithoutOwnerInput, restaurantUncheckedCreateWithoutOwnerInput>
  }

  export type restaurantUpdateWithWhereUniqueWithoutOwnerInput = {
    where: restaurantWhereUniqueInput
    data: XOR<restaurantUpdateWithoutOwnerInput, restaurantUncheckedUpdateWithoutOwnerInput>
  }

  export type restaurantUpdateManyWithWhereWithoutOwnerInput = {
    where: restaurantScalarWhereInput
    data: XOR<restaurantUpdateManyMutationInput, restaurantUncheckedUpdateManyWithoutOwnerInput>
  }

  export type restaurantScalarWhereInput = {
    AND?: restaurantScalarWhereInput | restaurantScalarWhereInput[]
    OR?: restaurantScalarWhereInput[]
    NOT?: restaurantScalarWhereInput | restaurantScalarWhereInput[]
    id?: IntFilter<"restaurant"> | number
    owner_id?: IntFilter<"restaurant"> | number
    name?: StringFilter<"restaurant"> | string
    address?: StringNullableFilter<"restaurant"> | string | null
    opening_hours?: StringNullableFilter<"restaurant"> | string | null
    genre?: StringNullableFilter<"restaurant"> | string | null
    siret?: StringFilter<"restaurant"> | string
    description?: StringNullableFilter<"restaurant"> | string | null
    image_url?: StringFilter<"restaurant"> | string
    is_active?: BoolNullableFilter<"restaurant"> | boolean | null
    created_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"restaurant"> | Date | string | null
  }

  export type reservation_has_itemCreateManyItemInput = {
    reservation_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type restaurant_has_itemCreateManyItemInput = {
    restaurant_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type menu_has_itemCreateManyItemInput = {
    menu_id: number
  }

  export type reservation_has_itemUpdateWithoutItemInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reservation?: reservationUpdateOneRequiredWithoutReservation_has_itemNestedInput
  }

  export type reservation_has_itemUncheckedUpdateWithoutItemInput = {
    reservation_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUncheckedUpdateManyWithoutItemInput = {
    reservation_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type restaurant_has_itemUpdateWithoutItemInput = {
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    restaurant?: restaurantUpdateOneRequiredWithoutRestaurant_has_itemNestedInput
  }

  export type restaurant_has_itemUncheckedUpdateWithoutItemInput = {
    restaurant_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type restaurant_has_itemUncheckedUpdateManyWithoutItemInput = {
    restaurant_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type menu_has_itemUpdateWithoutItemInput = {
    menu?: menuUpdateOneRequiredWithoutMenu_has_itemNestedInput
  }

  export type menu_has_itemUncheckedUpdateWithoutItemInput = {
    menu_id?: IntFieldUpdateOperationsInput | number
  }

  export type menu_has_itemUncheckedUpdateManyWithoutItemInput = {
    menu_id?: IntFieldUpdateOperationsInput | number
  }

  export type menu_has_itemCreateManyMenuInput = {
    item_id: number
  }

  export type menu_has_itemUpdateWithoutMenuInput = {
    item?: itemUpdateOneRequiredWithoutMenu_has_itemNestedInput
  }

  export type menu_has_itemUncheckedUpdateWithoutMenuInput = {
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type menu_has_itemUncheckedUpdateManyWithoutMenuInput = {
    item_id?: IntFieldUpdateOperationsInput | number
  }

  export type messageCreateManyReservationInput = {
    id?: number
    user_id: number
    restaurant_id: number
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reservation_has_itemCreateManyReservationInput = {
    item_id: number
    quantity?: number
    item_price: Decimal | DecimalJsLike | number | string
  }

  export type messageUpdateWithoutReservationInput = {
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    restaurant?: restaurantUpdateOneRequiredWithoutMessageNestedInput
    user?: userUpdateOneRequiredWithoutMessageNestedInput
  }

  export type messageUncheckedUpdateWithoutReservationInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageUncheckedUpdateManyWithoutReservationInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservation_has_itemUpdateWithoutReservationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    item?: itemUpdateOneRequiredWithoutReservation_has_itemNestedInput
  }

  export type reservation_has_itemUncheckedUpdateWithoutReservationInput = {
    item_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type reservation_has_itemUncheckedUpdateManyWithoutReservationInput = {
    item_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    item_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type menuCreateManyRestaurantInput = {
    id?: number
    name: string
    description?: string | null
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageCreateManyRestaurantInput = {
    id?: number
    user_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reservationCreateManyRestaurantInput = {
    id?: number
    user_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type restaurant_has_itemCreateManyRestaurantInput = {
    item_id: number
    current_price: Decimal | DecimalJsLike | number | string
    stock?: number
    is_available?: boolean | null
  }

  export type timeslotCreateManyRestaurantInput = {
    id?: number
    date: Date | string
    start_at: Date | string
    end_at: Date | string
    capacity: number
    status: $Enums.TimeslotStatus
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type menuUpdateWithoutRestaurantInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu_has_item?: menu_has_itemUpdateManyWithoutMenuNestedInput
  }

  export type menuUncheckedUpdateWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu_has_item?: menu_has_itemUncheckedUpdateManyWithoutMenuNestedInput
  }

  export type menuUncheckedUpdateManyWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageUpdateWithoutRestaurantInput = {
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateOneWithoutMessageNestedInput
    user?: userUpdateOneRequiredWithoutMessageNestedInput
  }

  export type messageUncheckedUpdateWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageUncheckedUpdateManyWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservationUpdateWithoutRestaurantInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutReservationNestedInput
    timeslot?: timeslotUpdateOneRequiredWithoutReservationNestedInput
    user?: userUpdateOneRequiredWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateManyWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type restaurant_has_itemUpdateWithoutRestaurantInput = {
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
    item?: itemUpdateOneRequiredWithoutRestaurant_has_itemNestedInput
  }

  export type restaurant_has_itemUncheckedUpdateWithoutRestaurantInput = {
    item_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type restaurant_has_itemUncheckedUpdateManyWithoutRestaurantInput = {
    item_id?: IntFieldUpdateOperationsInput | number
    current_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    is_available?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type timeslotUpdateWithoutRestaurantInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateManyWithoutTimeslotNestedInput
  }

  export type timeslotUncheckedUpdateWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUncheckedUpdateManyWithoutTimeslotNestedInput
  }

  export type timeslotUncheckedUpdateManyWithoutRestaurantInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    start_at?: DateTimeFieldUpdateOperationsInput | Date | string
    end_at?: DateTimeFieldUpdateOperationsInput | Date | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: EnumTimeslotStatusFieldUpdateOperationsInput | $Enums.TimeslotStatus
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservationCreateManyTimeslotInput = {
    id?: number
    user_id: number
    restaurant_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reservationUpdateWithoutTimeslotInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutReservationNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutReservationNestedInput
    user?: userUpdateOneRequiredWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateWithoutTimeslotInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateManyWithoutTimeslotInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageCreateManyUserInput = {
    id?: number
    restaurant_id: number
    reservation_id?: number | null
    content: string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reservationCreateManyUserInput = {
    id?: number
    restaurant_id: number
    timeslot_id: number
    status?: $Enums.ReservationStatus
    special_requests?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type restaurantCreateManyOwnerInput = {
    id?: number
    name: string
    address?: string | null
    opening_hours?: string | null
    genre?: string | null
    siret: string
    description?: string | null
    image_url?: string
    is_active?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type messageUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reservation?: reservationUpdateOneWithoutMessageNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutMessageNestedInput
  }

  export type messageUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messageUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    reservation_id?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reservationUpdateWithoutUserInput = {
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUpdateManyWithoutReservationNestedInput
    restaurant?: restaurantUpdateOneRequiredWithoutReservationNestedInput
    timeslot?: timeslotUpdateOneRequiredWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: messageUncheckedUpdateManyWithoutReservationNestedInput
    reservation_has_item?: reservation_has_itemUncheckedUpdateManyWithoutReservationNestedInput
  }

  export type reservationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    restaurant_id?: IntFieldUpdateOperationsInput | number
    timeslot_id?: IntFieldUpdateOperationsInput | number
    status?: EnumReservationStatusFieldUpdateOperationsInput | $Enums.ReservationStatus
    special_requests?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type restaurantUpdateWithoutOwnerInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUpdateManyWithoutRestaurantNestedInput
    message?: messageUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUpdateManyWithoutRestaurantNestedInput
  }

  export type restaurantUncheckedUpdateWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    menu?: menuUncheckedUpdateManyWithoutRestaurantNestedInput
    message?: messageUncheckedUpdateManyWithoutRestaurantNestedInput
    reservation?: reservationUncheckedUpdateManyWithoutRestaurantNestedInput
    restaurant_has_item?: restaurant_has_itemUncheckedUpdateManyWithoutRestaurantNestedInput
    timeslot?: timeslotUncheckedUpdateManyWithoutRestaurantNestedInput
  }

  export type restaurantUncheckedUpdateManyWithoutOwnerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    opening_hours?: NullableStringFieldUpdateOperationsInput | string | null
    genre?: NullableStringFieldUpdateOperationsInput | string | null
    siret?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}